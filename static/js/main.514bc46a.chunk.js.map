{"version":3,"sources":["components/ApiService.js","pages/OverView.js","pages/Login.js","pages/Forgot.js","pages/Campaigns.js","Routes.js","App.js","pages/Menu.js","pages/Header.js","pages/Employees.js","pages/AddEmployee.js","pages/EmployeestoCourses.js","pages/Reports.js","pages/CourseDetails.js","pages/Courses.js","pages/Firebase.js","pages/Campaigns-weekly-completion.js","pages/Campaigns-weekly-task.js","pages/Campaigns-welcome-email.js","serviceWorker.js","index.js","components/AuthService.js"],"names":["ApiService","domain","this","fetch","bind","addEmpCourse","params","axios","post","JSON","stringify","then","res","Promise","resolve","companyCode","get","emailList","i","data","length","push","moduleNo","batchNumber","routeNumber","courseNo","routeList","batchNo","courseList","batchList","url","companies","optName","Name","gdprCheck","j","courseNumber","method","registeredUsers","registered","availableUsers","ii","availableToRegister","indexOf","userId","localStorage","setItem","getItem","companyName","access_level","options","headers","_checkStatus","response","json","status","error","Error","statusText","OverView","props","state","global","api","getOverView","setState","catch","err","alert","totalUsers","activeCourses","ongoingBatches","className","id","React","Component","Login","handleChange","handleFormSubmit","Auth","AuthService","loggedIn","history","replace","src","alt","onSubmit","placeholder","name","type","onChange","hidden","href","e","target","value","preventDefault","login","email","password","message","accesslevel","window","location","Forgot","event","forgotpass","showError","showSuccess","messageFromServer","style","label","Campaigns","data-id","Router","exact","path","component","Employees","AddEmployees","EmployeestoCourses","Reports","CourseDetails","Courses","Firebase","render","ProtectedRoute","rest","to","pathname","from","Api","pathName","App","console","log","Menu","Header","handleLogout","logout","selectedOption","selValue","setCompanyCode","split","setCompanyName","user","getProfile","getCompanyCode","getCompanyName","getAccessLevel","companyList","companyDisable","getCompanyList","sort","a","b","classNamePrefix","isDisabled","onClick","SearchBar","Search","onBatchChange","selectedBatch","$","prop","checked","getEmployeeList","show","hide","onBatchChangeOld","handleCheck","notification","undefined","title","store","addNotification","handleBtnClick","selected","handleOnSelect","row","isSelect","rowIndex","columnCount","parentNode","cells","handleOnSelectAll","rows","rowCount","childNodes","colCount","coldCount","jj","columns","dataField","text","csvExport","classes","headerStyle","width","formatter","cell","courseItems","courseRegistered","moduleCompletionPercent","moduleCompletion_percent","key","i_d","courseCount","trId","Location","lastLoginDate","events","column","columnIndex","currentClass","statusIndex","courseIndex","locationIndex","children","coursesClass","slideDown","batchData","csvFileName","getDate","container","animationIn","animationOut","dismiss","duration","onScreen","tempDate","Date","getFullYear","getMonth","getBatch","custom","slected","MyExportCSV","onExport","marginTop","selectRow","mode","class","clickToSelect","onSelect","onSelectAll","headerColumnStyle","paddingLeft","rowEvents","elementName","tagName","NoDataIndication","color","height","NoDataAvailable","keyField","search","exportCSV","fileName","defaultChecked","searchProps","csvProps","pagination","paginationFactory","paginationProps","paginationTableProps","baseProps","filter","filterFactory","noDataIndication","Dragger","Upload","AddEmployee","countryCode","phone","startDate","fields","fname","lname","dni","deptname","errors","form","ReactFormInputValidation","useRules","onformsubmit","actVal","refs","mobile","mobileData","n","substr","parseInt","CompanyCode","FirstName","LastName","Mobile","CountryCode","DNI","mobileOS","val","subscriptionValidDate","company","weeklyEmail","disable","fcmToken","versionNumber","accountActivated","activationDate","deviceMake","deviceOsVersion","Mobilewcode","token","verification_code","acceptedGDPR","versionName","updatedAt","altEmail","addEmployee","actionVal","currentTarget","dataset","accept","multiple","action","info","file","reader","FileReader","onload","result","readAsText","originFileObj","success","rel","media","handleSubmit","onBlur","handleBlurEvent","handleChangeEvent","country","enableSearch","required","ref","date","dateFormat","handleChkChange","chkValue","x","userid","getCourseList","map","item","index","imgPath","moduleNumber","Id","courseName","selectedCompany","getCourseBatch","courseData","selectedCourse","routeData","selectedRouteText","selectedRoute","onCourseChange","selectedCourseId","getRouteList","noDataAvailable","colNames","baseColNames","courseId","pieChartDisplay","getCompletionReports","onRouteSelect","selRoute","forceUpdate","row1","routeCols","whiteSpace","cursor","avgVals","avgValsarr","toString","items","totRoutes","avgRoutes","Routes","Math","round","grp1Percent","grp2Percent","grp3Percent","grp1","grp2","grp3","avgData","grp1Val","grp2Val","grp3Val","grp1PVal","grp2PVal","grp3PVal","userData","companyData","selectedCompanyName","avgPercentTable","textTransform","pieChat","labels","datasets","backgroundColor","hoverBackgroundColor","totalSize","sizePerPage","ReportSummary","data-mh","display","fontSize","paddingRight","isMulti","closeMenuOnSelect","bootstrap4","handleDeleteClick","attenSelected","userIds","deleteEmpCourse","empSelected","handleAddClick","handleEmpOnSelect","handleEmpOnSelectAll","ids","r","handleAttenOnSelect","handleAttenOnSelectAll","attendanceColumns","completedStatus","attendanceData","empColumns","empData","empNodata","totalData","getCourseDetails","newProps","noDataText","withoutNoDataText","empOptions","empSelectRow","toDate","moment","format","onEmailSelect","validate","validateForm","emailData","getEmailList","toggleValidating","hasEmailError","hasTitleError","hasMessageError","is","attributesWrapper","attributesInput","validationCallback","validationOption","check","classNameInput","cols","CampaignsWeeklyCompletion","selectedRouteName","courseStartDate","routeStartDate","onLangSelect","selectedLang","selLangOption","onModeSelect","selectedMode","selModeOption","handleSendEmail","loading","selectedEmails","emails","selectedRoutes","routes","sendPush","sendEmail","langData","mailModeData","active","spinner","paddingTop","fontWeight","CampaignsWeeklyTask","routeListData","onRouteNameChange","require","routeNo","routeDate","add","onMailTypeSelect","selectedMailType","selMailTypeOption","sendWeeklyEmail","mailType","CampaignsWeeklyEmail","sendEmailAll","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","body","setToken","setProfile","firstName","company_code","company_name","accepted_gdpr","reject","getToken","isTokenExpired","decode","exp","now","idToken","removeItem"],"mappings":"sZACqBA,E,WAEjB,WAAYC,GAAS,oBACjBC,KAAKD,OAASA,GAAU,gCAExBC,KAAKC,MAAQD,KAAKC,MAAMC,KAAKF,MAC7BA,KAAKG,aAAeH,KAAKG,aAAaD,KAAKF,M,wDAGnCI,GACR,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,qBACPQ,KAAKC,UAAUJ,IACbK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,mCAIlBN,GACT,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,2BACPQ,KAAKC,UAAU,CAACJ,YACdK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,sCAIfN,GACZ,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,0BACPQ,KAAKC,UAAU,CAACJ,YACdK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,qCAIhBN,GACX,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,yBACPQ,KAAKC,UAAU,CAACJ,YACdK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,+BAItBN,GACL,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,+BACPQ,KAAKC,UAAU,CAACJ,YACdK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,gCAIrBN,GACN,OAAOC,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,mBACPQ,KAAKC,UAAU,CAACJ,YACdK,MAAK,SAAAC,GACH,OAAOC,QAAQC,QAAQF,Q,mCAIlBG,GACT,IAAIT,EAAO,eAAeS,EAC1B,OAAOR,IAAMS,IAAI,UAAGd,KAAKD,OAAR,qBAAkCK,GAAQK,MAAK,SAAAC,GAE5D,IADA,IAAIK,EAAY,GACRC,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAQF,IACH,KAA1BN,EAAIO,KAAKD,GAAT,UACCD,EAAUI,KAAK,CAAC,MAAQT,EAAIO,KAAKD,GAAT,SAAwB,MAAQN,EAAIO,KAAKD,GAAT,SAGhE,OAAOL,QAAQC,QAAQG,Q,2CAKVF,EAAYO,EAASC,EAAYC,GAClD,OAAOjB,IAAMS,IAAI,UAAGd,KAAKD,OAAR,4CAAyDc,EAAzD,iBAAsFO,EAAtF,gBAA+GC,EAA/G,gBAA2IC,GAAab,MAAK,SAAAC,GAC3K,OAAOC,QAAQC,QAAQF,EAAIO,W,mCAIrBM,GACT,OAAOlB,IAAMS,IAAI,UAAGd,KAAKD,OAAR,4BAAyCwB,GAAUd,MAAK,SAAAC,GAErE,IADA,IAAIc,EAAY,GACRR,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAQF,IAChCQ,EAAUL,KAAK,CAAC,MAAQT,EAAIO,KAAKD,GAAT,QAAuB,MAAQN,EAAIO,KAAKD,GAAT,YAA2B,GAAKN,EAAIO,KAAKD,GAAT,KAE3F,OAAOL,QAAQC,QAAQY,Q,qCAIhBX,EAAYY,GACvB,OAAOpB,IAAMS,IAAI,UAAGd,KAAKD,OAAR,qCAAkDc,EAAlD,gBAA8EY,GAAShB,MAAK,SAAAC,GAEzG,IADA,IAAIgB,EAAa,GACTV,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAQF,IAChCU,EAAWP,KAAK,CAAC,MAAQT,EAAIO,KAAKD,GAAT,aAA4B,MAAQN,EAAIO,KAAKD,GAAT,WAA0B,gBAAkBN,EAAIO,KAAKD,GAAT,kBAE7G,OAAOL,QAAQC,QAAQc,Q,+BAItBb,GACL,OAAOR,IAAMS,IAAI,UAAGd,KAAKD,OAAR,2BAAwCc,GAAaJ,MAAK,SAAAC,GAGvE,IADA,IAAIiB,EAAY,GACRX,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAQF,IAChCW,EAAUR,KAAK,CAAC,MAAQT,EAAIO,KAAKD,GAAT,YAA2B,MAAQN,EAAIO,KAAKD,GAAT,cAE/D,OAAOL,QAAQC,QAAQe,Q,uCAIK,IAArBd,EAAoB,uDAAN,KACrBe,EAAG,UAAM5B,KAAKD,OAAX,gBAIP,OAHGc,IACCe,EAAG,UAAM5B,KAAKD,OAAX,oCAA6Cc,IAE7CR,IAAMS,IAAN,UAAac,IAAOnB,MAAK,SAAAC,GAE5B,IADA,IAAImB,EAAW,GACPb,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAOF,IAC/B,GAAyB,KAAtBN,EAAIO,KAAKD,GAAT,IAAkD,MAAtBN,EAAIO,KAAKD,GAAT,GAA0B,CACrD,IAAIc,EAAUpB,EAAIO,KAAKD,GAAT,GAAkB,MAAMN,EAAIO,KAAKD,GAAGe,KAClDF,EAAUV,KAAK,CAAC,MAAQT,EAAIO,KAAKD,GAAT,GAAkB,MAAQc,IAG1D,OAAOnB,QAAQC,QAAQiB,Q,sCAIfhB,EAAYQ,GAA2B,IAAfW,EAAc,uDAAJ,GAC1C5B,EAAO,eAAeS,EAO1B,MANmB,MAAhBQ,IACCjB,EAASA,EAAQ,YAAYiB,GAEhB,KAAdW,IACC5B,EAASA,EAAQ,iBAAiB4B,GAE/B3B,IAAMS,IAAI,UAAGd,KAAKD,OAAR,qBAAkCK,GAAQK,MAAK,SAAAC,GAC5D,OAAOC,QAAQC,QAAQF,EAAIO,W,oCAIrBJ,GAA+B,IAAlBQ,EAAiB,uDAAH,EACjCjB,EAAO,eAAeS,EAI1B,OAHmB,IAAhBQ,IACCjB,EAASA,EAAQ,gBAAgBiB,GAE9BhB,IAAMS,IAAI,UAAGd,KAAKD,OAAR,yBAAsCK,GAAQK,MAAK,SAAAC,GAGhE,IAFA,IAAIgB,EAAa,GACbO,EAAI,EACAjB,EAAI,EAAGA,EAAIN,EAAIO,KAAKC,OAAOF,IAAI,CACnCiB,EAAIjB,EAAI,EACT,IAAIC,EAAOP,EAAIO,KAAKD,GACpBC,EAAI,IAAUgB,EACdP,EAAWP,KAAKF,GAEnB,OAAON,QAAQC,QAAQc,Q,uCAIdb,EAAYqB,GAEzB,OAAOlC,KAAKC,MAAM,UAAGD,KAAKD,OAAR,0CAAuDc,EAAvD,iBAAoFqB,EAAc,CAChHC,OAAQ,QAET1B,MAAK,SAAAC,GAEJ,IADA,IAAI0B,EAAiB,GACbpB,EAAI,EAAGA,EAAIN,EAAI2B,WAAWnB,OAAOF,IACrCoB,EAAgBjB,KAAKT,EAAI2B,WAAWrB,GAAf,QAGzB,IADA,IAAIsB,EAAgB,GACZC,EAAK,EAAGA,EAAK7B,EAAI8B,oBAAoBtB,OAAOqB,KACuB,IAApEH,EAAgBK,QAAQ/B,EAAI8B,oBAAoBD,GAAxB,SACvBD,EAAenB,KAAKT,EAAI8B,oBAAoBD,IAIpD,OADA7B,EAAI8B,oBAAsBF,EACnB3B,QAAQC,QAAQF,Q,mCAGlBgC,EAAQ7B,EAAaqB,GAC9B,OAAO7B,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,4BAAqDQ,KAAKC,UAAU,CACvEkC,SAAQ7B,cAAaqB,kBACrBzB,MAAK,SAAAC,GACL,OAAOC,QAAQC,QAAQF,Q,sCAGfgC,EAAQ7B,EAAaqB,GACjC,OAAO7B,IAAMC,KAAN,UAAcN,KAAKD,OAAnB,+BAAwDQ,KAAKC,UAAU,CAC1EkC,SAAQ7B,cAAaqB,kBACrBzB,MAAK,SAAAC,GACL,OAAOC,QAAQC,QAAQF,Q,qCAGhBG,GAEX8B,aAAaC,QAAQ,eAAgB/B,K,uCAGrC,OAAO8B,aAAaE,QAAQ,kB,qCAEjBC,GAEXH,aAAaC,QAAQ,eAAgBE,K,uCAGrC,OAAOH,aAAaE,QAAQ,kB,qCAEjBE,GAEXJ,aAAaC,QAAQ,eAAgBG,K,uCAGrC,OAAOJ,aAAaE,QAAQ,kB,kCAGpBhC,GACR,OAAOb,KAAKC,MAAM,UAAGD,KAAKD,OAAR,8BAA2Cc,EAAa,CACtEsB,OAAQ,QAET1B,MAAK,SAAAC,GACJ,OAAOC,QAAQC,QAAQF,Q,6IAIzBkB,EAAKoB,GAaP,OAAO/C,MAAM2B,E,yVAAD,EACRqB,QAZY,CACZ,OAAU,mBACV,eAAgB,qBAWbD,IAEFvC,KAAKT,KAAKkD,cACVzC,MAAK,SAAA0C,GAAQ,OAAIA,EAASC,c,mCAGtBD,GAET,GAAIA,EAASE,QAAU,KAAOF,EAASE,OAAS,IAC5C,OAAOF,EAEP,IAAIG,EAAQ,IAAIC,MAAMJ,EAASK,YAE/B,MADAF,EAAMH,SAAWA,EACXG,M,8GCxPZG,E,YAEJ,WAAYC,GAAQ,IAAD,8BACb,4CAAMA,KAEDC,MAAQ,CACX1C,KAAO,IAJI,E,iFAUE,IAAD,OAClB2C,EAAOC,IAAIC,YAAYF,EAAO/C,aACjBJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAAI,OAAI,EAAK8C,SAAS,CAAC9C,YAC5B+C,OAAM,SAAAC,GACHC,MAAMD,Q,+BAKd,IAAD,EAC+CjE,KAAK2D,MAAM1C,KAAzDkD,EADD,EACCA,WAAYC,EADb,EACaA,cAAeC,EAD5B,EAC4BA,eAEnC,OACI,0BAAMC,UAAU,SAASC,GAAG,WAC1B,6BAASD,UAAU,eACjB,wBAAIA,UAAU,gBAAd,YAEA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gCAAf,eACA,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,6BAA6BH,IAE9C,yBAAKG,UAAU,4BAOjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gCAAf,kBACA,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,6BAA6BF,IAE9C,yBAAKE,UAAU,4BAOjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gCAAf,mBACA,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,6BAA6BD,IAE9C,yBAAKC,UAAU,mC,GA/DRE,IAAMC,WA6EdhB,Q,qKCgBAiB,E,YA3FX,aAAc,IAAD,8BACT,+CACKC,aAAe,EAAKA,aAAazE,KAAlB,gBACpB,EAAK0E,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBACxB,EAAK2E,KAAO,IAAIC,IAJP,E,iFAQJ9E,KAAK6E,KAAKE,YACT/E,KAAK0D,MAAMsB,QAAQC,QAAQ,O,+BAGjC,OACI,6BACI,yBAAKX,UAAU,YACf,yBAAKC,GAAG,kBACJ,yBAAKD,UAAU,aACX,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,kCAGvB,0BAAMA,UAAU,QAAQC,GAAG,WACvB,6BAASD,UAAU,oCACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKY,IAAI,oBAAoBC,IAAI,MAErC,0BAAMb,UAAU,YAAYc,SAAUpF,KAAK4E,kBACvC,wBAAIN,UAAU,6BAAd,iCACA,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,mBAAmBe,YAAY,WAAWC,KAAK,QAAQC,KAAK,OAAOC,SAAUxF,KAAK2E,gBAEvG,yBAAKL,UAAU,kBACX,2BAAOA,UAAU,mBAAmBe,YAAY,YAAYC,KAAK,WAAWC,KAAK,WAAWC,SAAUxF,KAAK2E,gBAE/G,yBAAKL,UAAU,kCACX,2BAAOA,UAAU,uBACb,2BAAOiB,KAAK,WAAWE,OAAO,WAC9B,8CAEJ,uBAAGnB,UAAU,6BAA6BoB,KAAK,eAA/C,oBAEJ,yBAAKpB,UAAU,sBACX,4BAAQA,UAAU,sCAAsCiB,KAAK,UACzD,2CAIZ,yBAAKjB,UAAU,cACf,uBAAGA,UAAU,gBAAgBoB,KAAK,UAAlC,gBACA,uBAAGpB,UAAU,gBAAgBoB,KAAK,WAAlC,yB,mCAYXC,GACT3F,KAAK+D,SAAL,eAES4B,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,U,uCAIrBF,GACbA,EAAEG,iBACA9F,KAAK6E,KAAKkB,MAAM/F,KAAK2D,MAAMqC,MAAMhG,KAAK2D,MAAMsC,UACvCxF,MAAK,SAAAC,GACF,GAAGA,EAAIwF,QAEL,OADAhC,MAAMxD,EAAIwF,UACH,EAEkB,MAApBxF,EAAIyF,YACLC,OAAOC,SAASX,KAAO,YAEvBxB,MAAM,2CAIfF,OAAM,SAAAC,GACHC,MAAMD,U,GAvFJQ,a,kBC8FL6B,E,YA7FX,aAAc,IAAD,8BACT,+CAUJ3B,aAAe,SAAAW,GAAI,OAAI,SAAAiB,GACnB,EAAKxC,SAAL,eACKuB,EAAOiB,EAAMX,OAAOC,UAbhB,EAiBbjB,iBAAmB,SAAAe,GACfA,EAAEG,iBACF,IAAME,EAAQ,EAAKrC,MAAMqC,MACZ,KAAVA,EACC9B,MAAM,sBAGN,EAAKW,KAAK2B,WAAWR,GAChBvF,MAAK,SAAAC,GACiB,uCAAhBA,EAAIwF,QACH,EAAKnC,SAAS,CACV0C,WAAY,EACZC,YAAa,kBACbC,kBAAoBjG,EAAIwF,UAG5B,EAAKnC,SAAS,CACV0C,WAAY,EACZC,YAAa,gBACbC,kBAAoBjG,EAAIwF,aAInClC,OAAM,SAAAC,GACHC,MAAMD,OAvClB,EAAKN,MAAQ,CACTqC,MAAQ,GACRS,WAAW,EACXE,kBAAkB,GAClBD,YAAa,IAEjB,EAAK7B,KAAO,IAAIC,IARP,E,sEAgDT,OACI,6BACI,yBAAKR,UAAU,YACf,yBAAKC,GAAG,kBACJ,yBAAKD,UAAU,aACX,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,kCAGvB,0BAAMA,UAAU,QAAQC,GAAG,WACvB,6BAASD,UAAU,oCACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKY,IAAI,oBAAoBC,IAAI,MAErC,0BAAMb,UAAU,YAAYc,SAAUpF,KAAK4E,kBAC3C,wBAAIN,UAAU,4BAA4BsC,MAAO,CAAC,SAAW,SAA7D,2DAEA,yBAAKtC,UAAU,kBACX,2BAAOA,UAAU,mBAAmBiB,KAAK,OAAOF,YAAY,QAAQd,GAAG,QAAQsC,MAAM,QAAQrB,SAAUxF,KAAK2E,aAAa,YAE7H,yBAAKL,UAAWtE,KAAK2D,MAAM+C,cAAsC,IAAxB1G,KAAK2D,MAAM8C,UAAoBzG,KAAK2D,MAAMgD,kBAAkB,IAArG,QAEA,yBAAKrC,UAAU,sBACX,4BAAQA,UAAU,sCAAsCiB,KAAK,UACzD,iDAIZ,yBAAKjB,UAAU,cACX,uBAAGA,UAAU,gBAAgBoB,KAAK,UAAlC,gBACA,uBAAGpB,UAAU,gBAAgBoB,KAAK,WAAlC,2B,GAjFPjB,a,sDC6BNqC,E,iLAxBT,OACE,0BAAMxC,UAAU,SAASC,GAAG,WAC1B,6BAASD,UAAU,eACjB,wBAAIA,UAAU,qBAAd,mCACE,wBAAIA,UAAU,gBAAd,aACA,0BAAMA,UAAU,yBACd,wBAAIA,UAAU,yBACZ,wBAAIyC,UAAQ,oBAAmB,oDAC/B,wBAAIA,UAAQ,eAAc,+CAC1B,wBAAIA,UAAQ,eAAc,mDAE5B,6BACE,yBAAKzC,UAAU,uBACb,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,e,GAlBIG,a,SCYlBI,EAAO,IAAIC,IACXkC,E,iLAEF,OACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWzC,IACtC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,cAAcC,UAAWb,IAC3C,kBAAC,EAAD,CAAgBY,KAAK,YAAYC,UAAWC,MAC5C,kBAAC,EAAD,CAAgBF,KAAK,gBAAgBC,UAAWE,MAChD,kBAAC,EAAD,CAAgBH,KAAK,sBAAsBC,UAAWG,MACtD,kBAAC,EAAD,CAAgBJ,KAAK,WAAWC,UAAWI,MAC3C,kBAAC,EAAD,CAAgBL,KAAK,gBAAgBC,UAAWK,MAChD,kBAAC,EAAD,CAAgBN,KAAK,WAAWC,UAAWM,MAC3C,kBAAC,EAAD,CAAgBP,KAAK,YAAYC,UAAWO,MAC5C,kBAAC,EAAD,CAAgBR,KAAK,aAAaC,UAAWL,IAC7C,kBAAC,EAAD,CAAgBI,KAAK,YAAYC,UAAW1D,MAC5C,kBAAC,EAAD,CAAgByD,KAAK,IAAIC,UAAW1D,MAEpC,kBAAC,IAAD,CACIkE,OAAQ,WACN,OAAO,iD,GAnBEnD,IAAMC,WA0BpBmD,EAAiB,SAAC,GAAuC,IAA1BnD,EAAyB,EAApC0C,UAAyBU,EAAW,6BAC7D,GAAGhD,EAAKE,WACN,OAAQ,kBAAC,IAAD,iBAAW8C,EAAX,CAAiBF,OAAQ,SAACjE,GAAD,OACX,IAApBmB,EAAKE,WACD,kBAACN,EAAcf,GAAY,kBAAC,IAAD,CAAUoE,GAAI,CAAEC,SAAU,SAAUpE,MAAO,CAAEqE,KAAMtE,EAAM2C,iBAG1FD,OAAOC,SAASX,KAAO,UAMZsB,O,oJClDTiB,EAAM,I,OAAInI,GACVoI,EAAW9B,OAAOC,SAAS0B,SAE3BI,E,YACJ,WAAYzE,GAAQ,IAAD,6BACjB,4CAAMA,IACNE,EAAOC,IAAMoE,EAFI,E,sEAQjB,MAAe,WAAXC,GAAkC,gBAAXA,EACjB,6BACP,kBAAC,IAAD,OAGO,yBAAK5D,UAAU,aAAY,kBAAC,IAAD,MAAsB,kBAAC,IAAD,MAAU,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,MAAQ,kBAAC,IAAD,Y,GAd7FG,aAmBH0D,Q,6GC3BfC,QAAQC,IAAIjC,OAAOC,SAAS0B,UAC5B,IAAMG,EAAW9B,OAAOC,SAAS0B,SAE3BO,E,iLAGF,OACI,2BAAOhE,UAAU,YAAYC,GAAG,SAChC,yBAAKD,UAAU,mBACX,0BAAMA,UAAU,SACZ,wBAAIA,UAAU,aACd,uBAAGA,UAAsB,cAAX4D,EAAyB,oBAAsB,YAAaxC,KAAK,aACvE,uBAAGpB,UAAU,kBACT,yBAAKY,IAAI,0BAA0BC,IAAI,KACvC,yBAAKD,IAAI,+BAA+BC,IAAI,MAEhD,4CAGR,wBAAIb,UAAU,aACd,uBAAGA,UAAsB,cAAX4D,EAAyB,oBAAsB,YAAaxC,KAAK,aACvE,uBAAGpB,UAAU,kBACT,yBAAKY,IAAI,0BAA0BC,IAAI,KACvC,yBAAKD,IAAI,+BAA+BC,IAAI,MAEhD,6CAGR,wBAAIb,UAAU,aACd,uBAAGA,UAAsB,aAAX4D,EAAwB,oBAAsB,YAAaxC,KAAK,YACtE,uBAAGpB,UAAU,kBACT,yBAAKY,IAAI,0BAA0BC,IAAI,KACvC,yBAAKD,IAAI,+BAA+BC,IAAI,MAEhD,2CAGR,wBAAIb,UAAU,aACV,uBAAGA,UAAsB,aAAX4D,EAAwB,oBAAsB,YAAaxC,KAAK,YAC1E,uBAAGpB,UAAU,kBACT,yBAAKY,IAAI,0BAA0BC,IAAI,KACvC,yBAAKD,IAAI,+BAA+BC,IAAI,MAEhD,2CAGR,wBAAIb,UAAU,aACV,uBAAGA,UAAsB,eAAX4D,EAA0B,oBAAsB,YAAaxC,KAAK,cAC5E,uBAAGpB,UAAU,kBACT,yBAAKY,IAAI,0BAA0BC,IAAI,KACvC,yBAAKD,IAAI,+BAA+BC,IAAI,MAEhD,oD,GAjDLV,aA4DJ6D,O,iIC5DTJ,EAAW9B,OAAOC,SAAS0B,SAC3BlD,EAAO,IAAIC,IACXmD,EAAM,IAAInI,IAEVyI,E,YACF,WAAY7E,GAAO,IAAD,8BACd,4CAAMA,KA2CV8E,aAAe,SAAC9E,GACZmB,EAAK4D,SACLrC,OAAOC,SAASX,KAAO,UA9CT,EAgDjBf,aAAe,SAAA+D,GACZ,EAAK3E,SAAS,CAAE2E,mBAChB,IAAIC,EAAWD,EAAe7C,MAC9BoC,EAAIW,eAAeD,GACnB,IACIjI,EADcgI,EAAe7B,MACXgC,MAAM,OAC5BZ,EAAIa,eAAepI,EAAI,IACvB0F,OAAOC,SAASX,KAAOwC,GArDvB,EAAKa,KAAO,GACTlE,EAAKE,aACJ,EAAKgE,KAAOlE,EAAKmE,cAErBpF,EAAO/C,YAAcoH,EAAIgB,iBACzBrF,EAAOd,YAAcmF,EAAIiB,iBACzBtF,EAAOb,aAAckF,EAAIkB,iBAEC,OAAvBvF,EAAO/C,aAAgD,MAAxB+C,EAAOb,eACrCa,EAAO/C,YAAc,IACrB+C,EAAOd,YAAc,6BAEzB,EAAKa,MAAQ,CACTyF,YAAa,GACbV,eAAgB,CAAC,CAAC,MAAQ9E,EAAO/C,YAAY,MAAQ+C,EAAO/C,YAAY,MAAM+C,EAAOd,cACrFuG,eAAe,IAjBL,E,iFAqBG,IAAD,OACW,MAAxBzF,EAAOb,cACN/C,KAAK+D,SAAS,CAACsF,eAAe,cAGP,MAAxBzF,EAAOb,aACAa,EAAOC,IAAIyF,iBAEX1F,EAAOC,IAAIyF,eAAgB1F,EAAO/C,cAG3CJ,MAAK,SAAA2I,GACFA,EAAYG,MAAK,SAASC,EAAGC,GAC3B,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAEqF,YAAaA,OAEhCpF,OAAM,SAAAC,GACHC,MAAMD,Q,+BAsBd,OACE,6BACE,yBAAKK,UAAU,YAEX,yBAAKC,GAAG,kBACJ,yBAAKD,UAAU,aACX,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,kCAKvB,4BAAQA,UAAU,SAASC,GAAG,UAC1B,yBAAKD,UAAU,mBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,WAAWoB,KAAK,cACzB,yBAAKpB,UAAU,QACX,yBAAKY,IAAI,kBAAkBC,IAAI,MAEnC,yBAAKb,UAAU,oBAAf,eAIR,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,cAAesC,MAAO,CAAC,SAAW,SAAhD,WAGA,yBAAKA,MAAO,CAAC,MAAQ,UACrB,kBAAC,IAAD,CAAQrC,GAAG,UAAUsB,MAAO7F,KAAK2D,MAAM+E,eAAiBlD,SAAUxF,KAAK2E,aAAc3B,QAAShD,KAAK2D,MAAMyF,YAAa9E,UAAU,4DAC5JoF,gBAAgB,UAAUC,WAAY3J,KAAK2D,MAAM0F,mBAKzB,uBAAG/E,UAAU,+BAA+BoB,KAAK,SAC7C,iDAEJ,uBAAGpB,UAAU,kBAAkBoB,KAAK,KAChC,oCAEJ,yBAAKpB,UAAU,oBACX,0BAAMA,UAAU,qBAAhB,MACI,0BAAMA,UAAU,uBAAuBtE,KAAK+I,OAEhD,0BAAMzE,UAAU,qBAAqBsF,QAAS5J,KAAKwI,cAAc,yBAAKtD,IAAI,qBAAqBC,IAAI,sB,GA7G9GX,IAAMC,WAyHZ8D,Q,yeCvHPsB,EAAcC,SAAdD,UAEFzC,E,YAEJ,WAAY1D,GAAQ,IAAD,8BACjB,4CAAMA,KA0RRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,kBAA+B2B,EAAcnE,OAC7C,IAAIxE,EAAc2I,EAAcnE,MAChCoE,IAAE,SAASC,KAAK,WAAW,GAC3B,EAAKnG,SAAS,CAACoG,SAAS,IACxBvG,EAAOC,IAAIuG,gBAAgBxG,EAAO/C,YAAYQ,GAC3CZ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAASgJ,IAAE,qBAAqBI,OAAO,EAAKtG,SAAS,CAAC9C,SAAOgJ,IAAE,YAAYK,UAChFtG,OAAM,SAAAC,GACHC,MAAMD,OArSK,EAwSnBsG,iBAAkB,SAAC5E,GAEjB,EAAK5B,SAAS,CAACiG,cAAerE,EAAEC,OAAOC,QACvC,IAAIxE,EAAcsE,EAAEC,OAAOC,MAC3BjC,EAAOC,IAAIuG,gBAAgBxG,EAAO/C,YAAYQ,GAC3CZ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAASgJ,IAAE,qBAAqBI,OAAO,EAAKtG,SAAS,CAAC9C,SAAOgJ,IAAE,YAAYK,UAChFtG,OAAM,SAAAC,GACHC,MAAMD,OAhTK,EAiUnBuG,YAAc,WACZ,IAAIC,EAAa,EAAK9G,MAAM8G,aACxBpJ,EAAc,GAClB,QAAgCqJ,IAA7B,EAAK/G,MAAMqG,cAQZ,OAPAS,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ,kCACf0E,QAAMC,gB,yVAAN,IACKJ,IAEXR,IAAE,SAASC,KAAK,WAAW,IACpB,EAEP7I,EAAc,EAAKsC,MAAMqG,cAAcnE,MACvC,EAAK9B,SAAS,CAACoG,SAAU,EAAKxG,MAAMwG,UACpC,IAAInI,EAAY,IACW,KAAvB,EAAK2B,MAAMwG,UACbnI,EAAY,KAEd4B,EAAOC,IAAIuG,gBAAgBxG,EAAO/C,YAAYQ,EAAYW,GACvDvB,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAASgJ,IAAE,qBAAqBI,OAAO,EAAKtG,SAAS,CAAC9C,SAAOgJ,IAAE,YAAYK,UAChFtG,OAAM,SAAAC,GACLC,MAAMD,OAxVK,EA4VnB6G,eAAiB,WACf1C,QAAQC,IAAI,EAAK1E,MAAMoH,WA7VN,EAyWnBC,eAAiB,SAACC,EAAKC,EAAUC,EAAUxF,GAEzC,IAAIyF,EAAcnB,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAGwK,MAE3D,GAAIJ,EAEF,IAAK,IAAIlK,EAAE,EAAGA,EAAIoK,EAAYlK,OAAQF,IAElCiJ,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWC,MAAMtK,IAAIF,IAAI,GAAGwD,UAD3C,IAANtD,EAC2D,gCAEA,0BAOhE,IAAK,IAAIiB,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAElCgI,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWC,MAAMrJ,IAAInB,IAAI,GAAGwD,UAD3C,IAANrC,EAC2D,sBAEA,YA9XjD,EAuYnBsJ,kBAAoB,SAACL,EAAUM,EAAM7F,GAEnC,IAAI8F,EAAWxB,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,WAAWK,WAAW,IAAI5K,IAAI,GAAG4K,WAE5F,GAAIR,EACF,IAAK,IAAIlK,EAAE,EAAGA,EAAIyK,EAASvK,OAAQF,IAEjC,IADA,IAAI2K,EAAW1B,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,IAAIF,IAAI,GAAGwK,MACjGrJ,EAAE,EAAGA,EAAI0J,EAASzK,OAAQe,IAEjCgI,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,GAAGsK,MAAMrJ,IAAInB,IAAI,GAAGwD,UAD3F,IAANrC,EAC2G,gCAEE,0BAQpH,IAAK,IAAIM,EAAG,EAAGA,EAAKkJ,EAASvK,OAAQqB,IAEnC,IADA,IAAIqJ,EAAY3B,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,IAAKzB,IAAI,GAAGwK,MACnGO,EAAG,EAAGA,EAAKD,EAAU1K,OAAQ2K,IAElC5B,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,GAAI+I,MAAMO,IAAK/K,IAAI,GAAGwD,UAD9F,IAAPuH,EAC+G,sBAEA,YA9VxH,EAAKlI,MAAQ,CACXmI,QAAQ,CAAC,CACPC,UAAW,MACXC,KAAM,KACNvG,QAAQ,EACRwG,WAAW,GAEZ,CACED,KAAM,QACND,UAAW,SACXxC,MAAM,EACN0C,WAAW,EACXC,QAAQ,aACRC,YAAa,CACZC,MAAM,QAGT,CACCL,UAAW,YACXC,KAAM,YACNzC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACXC,MAAM,QAGT,CACCL,UAAW,WACXC,KAAM,WACNC,WAAW,EACXE,YAAa,CACXC,MAAM,QAGT,CACEJ,KAAM,UACND,UAAW,mBACXM,UAvFL,SAAwBC,EAAMrB,EAAIE,GAChC,IAAMoB,EAAc,GACpB,GAAmC,IAAhCtB,EAAIuB,iBAAiBtL,OAAa,CAEnC,IADA,IAAIuL,EAA0B,IACrBzL,EAAE,EAAGA,EAAI,EAAGA,IAEU,MAD5ByL,EAA0BxB,EAAIuB,iBAAiBxL,GAAG0L,4BAEjDD,EAA0B,KAG5BF,EAAYpL,KAAK,yBAAKmD,UAAU,oBAAoBqI,IAAK1B,EAAI2B,IAAK,IAAK5L,GAAG,yBAAKsD,UAAU,gBAAgB2G,EAAIuB,iBAAiBxL,GAArB,YAA4C,yBAAKsD,UAAU,kCAAiC,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAUuB,MAAO4G,GAA0BA,EAA3C,OAA2F,yBAAKnI,UAAU,gBAAgB2G,EAAI4B,eAGnW,IAAK,IAAI5K,EAAE,EAAGA,EAAIgJ,EAAIuB,iBAAiBtL,OAAQe,IAEhB,MAD5BwK,EAA0BxB,EAAIuB,iBAAiBvK,GAAGyK,4BAEjDD,EAA0B,KAE5BF,EAAYpL,KAAK,yBAAKmD,UAAU,yBAAyBqI,IAAK1B,EAAI2B,IAAK,IAAK3K,GAAG,yBAAKqC,UAAU,gBAAgB2G,EAAIuB,iBAAiBvK,GAArB,YAA4C,yBAAKqC,UAAU,6BAA4B,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAUuB,MAAO4G,GAA0BA,EAA3C,SAGvO,IAAIK,EAAO,WAAW3B,EACtB,OACE,yBAAK5G,GAAIuI,GAAOP,IAiEfN,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,QACND,UAAW,SACXxC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,SACND,UAAW,aACXxC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,WACND,UAAW,kBACXxC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,aACND,UAAW,gBACXxC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,eACND,UAAW,eACXxC,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACEJ,KAAM,WACND,UAAW,WACXM,UApGL,SAA0BC,EAAMrB,GAE9B,OAAQ,6BACN,yBAAK3G,UAAU,kBAAkB2G,EAAI8B,UACrC,yBAAKzI,UAAU,qBAAf,qBAiGCiF,MAAM,EACN0C,WAAW,EACXE,YAAa,CACZC,MAAM,QAGT,CACCL,UAAW,SACXC,KAAM,SACNC,WAAW,EACXI,UA9HJ,SAAwBC,EAAMrB,GAC5B,IAAM5H,EAAS,GAUf,MATkB,MAAf4H,EAAI5H,QACLA,EAAOlC,KAAK,yBAAKwL,IAAK1B,EAAI2B,KAAK,yBAAKtI,UAAU,UAC9C,uBAAGA,UAAU,UACb,yCACI,yBAAKA,UAAU,WACjB,8CACA,8BAAO2G,EAAI+B,kBAIb3J,GAmHA8I,YAAa,CACXC,MAAM,QAEP,CACDJ,KAAM,GACND,UAAW,GACXM,UA5KJ,SAAmBC,EAAMrB,GACvB,OACE,yBAAK3G,UAAU,cACf,yBAAKA,UAAU,mBACX,+BACA,+BACA,kCAuKJ2H,WAAW,EACXC,QAAQ,GACRC,YAAa,CACXC,MAAM,QAERa,OAAQ,CACPrD,QAAS,SAACjE,EAAGuH,EAAQC,EAAalC,EAAKE,GAEtC,IAAIiC,EAAezH,EAAEC,OAAOtB,UACxB+I,EAAc,EAAK1J,MAAM0J,YACzBC,EAAc,EAAK3J,MAAM2J,YACzBC,EAAgB,EAAK5J,MAAM4J,cAC/B,GAAoB,eAAjBH,GACyF,IAAvFzH,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAStM,OAAa,CAC1F,IAAIuM,EAAexD,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAC1GuI,EAAc5C,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,IAAI1M,IAAI,GAAG4K,WAC/F,GAAoB,sBAAjB+B,EAAqC,CAEwC,IAA3E9H,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW2B,GAAaG,SAAStM,SACjE+I,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW2B,GAAaG,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,WAGxG2F,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,oBACtG2F,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,iCAElH,IAAI,IAAItD,EAAI,EAAIA,EAAI6L,EAAY3L,OAAQF,IACtCiJ,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAASxM,IAAIF,IAAK,GAAIwD,UAAW,yBAIxB,IAA7EqB,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW6B,GAAeC,SAAStM,SACnE+I,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW6B,GAAeC,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,yBAEvG,CAMH,GAJ8E,IAA3EqB,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW2B,GAAaG,SAAStM,SACjE+I,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW2B,GAAaG,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,gBAGd,IAAvFqB,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAStM,OAAa,CAC1F+I,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,qCACtG2F,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,4BAClH,IAAI,IAAIrC,EAAI,EAAIA,EAAI4K,EAAY3L,OAAQe,IACtCgI,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAASvL,IAAInB,IAAK,GAAIwD,UAAW,qCAK1B,IAA7EqB,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW6B,GAAeC,SAAStM,SACnE+I,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW6B,GAAeC,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAIwD,UAAW,0BAG5G2F,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWK,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,IAAI1M,IAAK,GAAI4M,UAAU,WAO7GzM,KAAO,IAGT,EAAK0C,MAAMoH,SAAW,GACtB,EAAKpH,MAAM0J,YAAc,EACzB,EAAK1J,MAAM2J,YAAc,EACzB,EAAK3J,MAAM4J,cAAgB,GAC3B,EAAK5J,MAAMgK,UAAY,GAEvB,EAAKhK,MAAMiK,YAAchK,EAAOd,YAAc,aAAe,EAAK+K,UAAW,OAC7E,EAAKlK,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IA9PG,E,uEAqQjB,IAAIC,EAAW,IAAIC,KAEnB,OADWD,EAASE,cAAgB,KAAOF,EAASG,WAAW,GAAK,IAAMH,EAASP,Y,0CAIhE,IAAD,OAClBjK,EAAOC,IAAIuG,gBAAgBxG,EAAO/C,aACjCJ,MAAK,SAAAC,GAAG,OAAIA,KACAD,MAAK,SAAAQ,GAASgJ,IAAE,qBAAqBI,OAAO,EAAKtG,SAAS,CAAC9C,SAAOgJ,IAAE,YAAYK,UAChFtG,OAAM,SAAAC,GACHC,MAAMD,MAGtBL,EAAOC,IAAI2K,SAAS5K,EAAO/C,aAC1BJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAEnI,YAAcoI,EAAEpI,eAE3B,EAAK0C,SAAS,CAAE4J,UAAW1M,S,+BAkJvB,IAAD,OAED+B,EAAU,CACdyL,QAAQ,EAGRC,QAAQ,IAEJC,EAAc,SAAAjL,GAIlB,OAEE,0BACEY,UAAU,2CACVsF,QAPgB,WAClBlG,EAAMkL,YAMkBhI,MAAO,CAACiI,UAAU,SAExC,8CAcN,IAAMC,EAAY,CAChBC,KAAM,WACN1C,UAZF,SAAsBC,EAAMrB,GAC1B,OACE,yBAAK+D,MAAM,eACT,2BAAOA,MAAM,iBACX,2BAAOzJ,KAAK,WAAWE,OAAO,WAC9B,sCAQNwJ,eAAe,EACfC,SAAUlP,KAAKgL,eACfmE,YAAanP,KAAKuL,kBAClB6D,kBAAmB,CACjBhD,MAAM,OACNiD,YAAY,QAIVC,EAAY,CAAC1F,QAAQ,SAACjE,EAAGsF,EAAKE,GAGlC,IAAIoE,EAAc,GAOS,WALzBA,EAD2C,OAA1CtF,IAAEtE,EAAEC,OAAOyF,YAAYvK,IAAI,GAAG0O,QACjB7J,EAAEC,OAAOyF,WAET1F,EAAEC,OAAOyF,WAAWA,WAAWA,WAAWA,YAG3CmE,UAEbD,EAAcA,EAAY7D,WAAWP,IAEvC,IAAIkC,EAAc,EAAK1J,MAAM0J,YACzBC,EAAc,EAAK3J,MAAM2J,YACzBC,EAAgB,EAAK5J,MAAM4J,cAG/B,GAA2B,OAAxBgC,EAAYC,SAE0D,IAApED,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAStM,OAAa,CAGvE,IAAIuM,EAAe8B,EAAY7D,WAAW,GAAG8B,SAAS,GAAGA,SAAS,GAAGlJ,UACjEuI,EAAc0C,EAAY7D,WAAW,GAAG8B,SAAS,GAAG9B,WACxD,GAAoB,sBAAjB+B,EAAqC,CAEqB,IAAxD8B,EAAY7D,WAAW2B,GAAaG,SAAStM,SAC9CqO,EAAY7D,WAAW2B,GAAaG,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,WAGzEiL,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,oBACvEiL,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,iCAEnF,IAAI,IAAItD,EAAI,EAAIA,EAAI6L,EAAY3L,OAAQF,IACtCuO,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAASxM,GAAGsD,UAAW,yBAIZ,IAA1DiL,EAAY7D,WAAW6B,GAAeC,SAAStM,SAChDqO,EAAY7D,WAAW6B,GAAeC,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,yBAExE,CAOH,GAJ2D,IAAxDiL,EAAY7D,WAAW2B,GAAaG,SAAStM,SAC9CqO,EAAY7D,WAAW2B,GAAaG,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,gBAGF,IAApEiL,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAStM,OAAa,CACvEqO,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,qCACvEiL,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,4BACnF,IAAI,IAAIrC,EAAI,EAAIA,EAAI4K,EAAY3L,OAAQe,IACtCsN,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAASvL,GAAGqC,UAAW,qCAEtEuI,EAAY3L,OAO4C,IAA1DqO,EAAY7D,WAAW6B,GAAeC,SAAStM,SAChDqO,EAAY7D,WAAW6B,GAAeC,SAAS,GAAGA,SAAS,GAAGlJ,UAAW,0BAG7EiL,EAAY7D,WAAW4B,GAAaE,SAAS,GAAGA,SAAS,GAAGE,UAAU,SAMtE+B,EAAmB,kBACvB,yBAAKnL,UAAU,cAAcC,GAAG,WAC9B,yBAAKD,UAAU,WACb,kBAAC,IAAD,CAAQiB,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,iBAOEwD,EAAkB,kBACtB,yBAAKtL,UAAU,4BAAf,yBAIF,OAEM,kBAAC,IAAD,CACAuL,SAAS,MACT5O,KAAOjB,KAAK2D,MAAM1C,KAClB6K,QAAU9L,KAAK2D,MAAMmI,QACrBI,QAAQ,QACR4D,QAAM,EACNC,UAAa,CAAEC,SAAUhQ,KAAK2D,MAAMiK,eAGlC,SAAAlK,GAAK,OACH,0BAAMY,UAAU,SAASC,GAAG,WACtB,6BAASD,UAAU,eACf,wBAAIA,UAAU,eAAd,aACA,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,eAAd,uBACA,yBAAKA,UAAU,qBAAqB,EAAKX,MAAM1C,KAAKC,SAExD,yBAAKoD,UAAU,0BACX,qDACA,yBAAKY,IAAI,kCAAkCC,IAAI,OAGzD,yBAAKb,UAAU,oBACb,wBAAIA,UAAU,qBAAd,SACA,yBAAKsC,MAAO,CAAC,MAAQ,UACnB,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO,EAAKlC,MAAMqG,cAAgBxE,SAAU,EAAKuE,cAAe/G,QAAS,EAAKW,MAAMgK,UAAWrJ,UAAU,4DACxJoF,gBAAgB,YAGQ,yBAAKpF,UAAU,yBAAf,QACS,2BAAOiB,KAAK,WAAWD,KAAK,OAAOf,GAAG,OAAOiB,SAAU,EAAKgF,YAAayF,eAAgB,EAAKtM,MAAMwG,YAG/G,yBAAK7F,UAAU,cACX,0BAAMA,UAAU,eAChB,kBAACuF,EAAD,iBAAgBnG,EAAMwM,YAAtB,CAAoC7K,YAAY,yBAC5C,gCACI,yBAAKH,IAAI,+BAA+BC,IAAI,QAIxD,yBAAKb,UAAU,cACX,uBAAGA,UAAU,oCAAoCoB,KAAK,iBAClD,2BACI,yBAAKR,IAAI,wBAAwBC,IAAI,MAEzC,0CAEJ,0BAAMb,UAAU,yDAAyDsF,QAAU,EAAKkB,gBACpF,2BACI,yBAAK5F,IAAI,+BAA+BC,IAAI,MAEhD,kDAItB,yBAAKZ,GAAG,mBAAmBqC,MAAO,CAAC,QAAU,OAAO,MAAQ,SAC7B,IAA3B,EAAKjD,MAAM1C,KAAKC,OAAe,yBAAKoD,UAAU,mBAAkB,kBAACqK,EAAgBjL,EAAMyM,WAAmB,GAEhF,IAA3B,EAAKxM,MAAM1C,KAAKC,OACjB,kBAAC,qBAAD,CAAoBkP,WAAaC,IAAkBrN,KAClD,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,6BAEA,kBAAC,IAAD,iBACO7M,EAAM8M,UADb,CAEE1B,UAAYA,EACZQ,UAAYA,GACPiB,EAJP,CAKEE,OAASC,MACTxE,QAAQ,QACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BACMU,OAMN,kBAACV,EAAD,OAGL,kBAACH,EAAD,e,GAvoBUhL,aAipBT2C,Q,40BChpBPwJ,EAAYC,IAAZD,QAEFE,E,YACL,aAAe,IAAD,8BACX,+CACKnN,MAAQ,CACXoN,YAAa,MACbC,MAAO,MACPC,UAAW,IAAI5C,KACf6C,OAAQ,CACNC,MAAO,GACPnL,MAAO,GACPoL,MAAM,GACN/K,SAAS,GACTgL,IAAI,GACJC,SAAS,IAEXC,OAAQ,IAEV,EAAK5N,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IAGd,EAAKxK,MAAM4N,OAAS,GACpB,EAAKC,KAAO,IAAIC,IAAJ,gBACZ,EAAKD,KAAKE,SAAS,CACfP,MAAO,WACPnL,MAAO,mBAGX,EAAKwL,KAAKG,aAAe,SAACT,GAExB,IAAIzG,EAAa,EAAK9G,MAAM8G,aACxBmH,EAAS,EAAKC,KAAL,UAAuBhM,MACpC,GAAe,KAAX+L,GAA8B,aAAXA,EAAuB,CAC5C,IAAIb,EAAc,GACde,EAAS,GACTC,EAAa,EAAKpO,MAAMqN,MAC5B,GAAkB,KAAfe,EAAkB,CAMnBhB,EADoBgB,EAAWlJ,MAAM,KACR,GAAM5D,QAAU,UAAW,IACxD,IAAI+M,EAAID,EAAWtP,QAAQ,KACxBuP,GAAK,IACNF,EAAUC,EAAWE,OAAOC,SAASF,EAAE,IAAK/M,QAAU,UAAW,KAGrE,IAAI7E,EAAS,CACXsC,OAAOwO,EAAOlL,MACdmM,YAAYvO,EAAO/C,YACnBuR,UAAUlB,EAAOC,MACjBkB,SAASnB,EAAOE,MAChBrE,SAASmE,EAAO7K,SAChBiM,OAAOR,EACPS,YAAYxB,EACZyB,IAAItB,EAAOG,IACXoB,SAASxI,IAAE,aAAayI,MACxBC,sBAAsB,EAAKhP,MAAMsN,UACjC2B,QAAQ1B,EAAOI,SACfuB,YAAY5I,IAAE,WAAWyI,MACzBI,QAAQ7I,IAAE,WAAWyI,MACrBrP,OAAO,GACP2J,cAAc,GACd+F,SAAS,GACTC,cAAc,GACdC,iBAAiB,GACjBC,eAAe,GACfC,WAAW,GACXC,gBAAgB,GAChBC,YAAY,GACZC,MAAM,GACNC,kBAAkB,GAClBC,aAAa,GACbC,YAAY,GACZC,UAAU,GACVC,SAAS,IAEX/P,EAAOC,IAAI+P,YAAYxT,GACtBK,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GACkB,yCAApBA,EAAKnC,KAAKiF,SACXuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,MAGLA,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QACzB0E,QAAMC,gBAAN,KACKJ,QAIdzG,OAAM,SAAAC,GAEHwG,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQjC,EAAIhD,KAAKqC,MACxBsH,QAAMC,gBAAN,KACKJ,YAIjBvG,MAAM,gBAlHG,E,0EAsHAyB,GACX3F,KAAK+D,SAAS,CAACgN,YAAapL,EAAEC,OAAOC,U,kCAE3BF,GACT3F,KAAK+D,SAAS,CAAC8P,UAAWlO,EAAEmO,cAAcC,QAAQxP,KAClDvE,KAAK6R,KAAL,UAAuBhM,MAAQF,EAAEmO,cAAcC,QAAQxP,K,+BAGjD,IAAD,OACAb,EAAQ,CACZ4B,KAAM,OACN0O,OAAQ,OACRC,UAAU,EACVC,OAAQ,eACR1O,SALY,SAKH2O,GACP,GAAyB,cAArBA,EAAKC,KAAK/Q,OAAwB,CACnC,IAAIgR,EAAS,IAAIC,WAChBD,EAAOE,OAAS,SAAC5O,GACdyC,QAAQC,IAAI1C,EAAEC,OAAO4O,SAExBH,EAAOI,WAAWN,EAAKC,KAAKM,eAEP,SAArBP,EAAKC,KAAK/Q,OACZ6C,IAAQyO,QAAR,UAAmBR,EAAKC,KAAK9O,KAA7B,gCAC8B,UAArB6O,EAAKC,KAAK/Q,QACnB6C,IAAQ5C,MAAR,UAAiB6Q,EAAKC,KAAK9O,KAA3B,2BAIN,OAEE,0BAAMhB,UAAU,SAASC,GAAG,WAC5B,0BAAMqQ,IAAI,aAAaC,MAAM,SAASnP,KAAK,0CAC7C,6BAASpB,UAAU,eACjB,wBAAIA,UAAU,qBAAd,aACE,wBAAIA,UAAU,gBAAd,iBACA,0BAAMc,SAAUpF,KAAKwR,KAAKsD,aAAcxQ,UAAU,yBAChD,wBAAIA,UAAU,yBACZ,wBAAIyC,UAAQ,WAAW6C,QAAS5J,KAAKwK,YAAYtK,KAAKF,OAClD,4CAEJ,wBAAI+G,UAAQ,aAAa6C,QAAS5J,KAAKwK,YAAYtK,KAAKF,OACpD,oDAGN,yBAAKsE,UAAU,uBACb,6BACE,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gCAAd,wBACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,cAAjB,cAEA,2BAAOiB,KAAK,OAAOjB,UAAU,aAAagB,KAAK,QAAQyP,OAAQ/U,KAAKwR,KAAKwD,gBAAiBxP,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAOC,QAC1J,2BAAO7M,UAAU,iBAAjB,IAAmCtE,KAAK2D,MAAM4N,OAAOJ,MAAQnR,KAAK2D,MAAM4N,OAAOJ,MAAQ,KAEzF,yBAAK7M,UAAU,iBACb,2BAAOA,UAAU,cAAjB,aACA,2BAAOiB,KAAK,OAAOjB,UAAU,aAAagB,KAAK,QAAQE,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAOE,UAG3H,yBAAK9M,UAAU,gBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,cAAjB,SACA,2BAAOA,UAAU,aAAaiB,KAAK,QAAQD,KAAK,QAAQyP,OAAQ/U,KAAKwR,KAAKwD,gBAAiBxP,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAOlL,QAC3J,2BAAO1B,UAAU,iBAAjB,IAAmCtE,KAAK2D,MAAM4N,OAAOvL,MAAQhG,KAAK2D,MAAM4N,OAAOvL,MAAQ,KAEzF,yBAAK1B,UAAU,iBACb,2BAAOA,UAAU,cAAjB,UACA,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAYA,UAAU,4BAA4B4Q,QAAS,KAAMrP,MAAO7F,KAAK2D,MAAMqN,MACnFxL,SAAU,SAAAwL,GAAK,OAAI,EAAKjN,SAAS,CAAEiN,WACnCmE,cAAY,EAACC,SAAU,OAAOC,IAAI,cAI1C,yBAAK/Q,UAAU,gBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,cAAjB,YACA,2BAAOA,UAAU,aAAaiB,KAAK,OAAOhB,GAAG,WAAWe,KAAK,WAAW+P,IAAI,WAAW7P,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAO7K,YAEzJ,yBAAK/B,UAAU,iBACb,2BAAOA,UAAU,cAAjB,OACA,2BAAOA,UAAU,aAAaiB,KAAK,OAAOhB,GAAG,MAAMe,KAAK,MAAM+P,IAAI,MAAM7P,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAOG,SAI9I,yBAAK/M,UAAU,gBACb,wBAAIA,UAAU,gCAAd,oBACA,yBAAKA,UAAU,iBACX,2BAAOA,UAAU,cAAjB,cACA,2BAAOA,UAAU,aAAaiB,KAAK,OAAOhB,GAAG,WAAWe,KAAK,WAAW+P,IAAI,WAAW7P,SAAUxF,KAAKwR,KAAKyD,kBAAmBpP,MAAO7F,KAAK2D,MAAMuN,OAAOI,aAG7J,yBAAKhN,UAAU,gBACX,wBAAIA,UAAU,gCAAd,0BACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,cAAjB,aACA,4BAAQA,UAAU,sBAAsBC,GAAG,WAAWe,KAAK,WAAW+P,IAAI,YACtE,4BAAQxP,MAAM,WAAd,WACA,4BAAQA,MAAM,OAAd,SAGR,yBAAKvB,UAAU,2BACX,2BAAOA,UAAU,cAAjB,2BACA,6BACI,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAYA,UAAU,cAAcyG,SAAU/K,KAAK2D,MAAMsN,UAAWzL,SAAW,SAAA8P,GAAI,OAAI,EAAKvR,SAAS,CAAEkN,UAAWqE,KAASC,WAAW,oBAMpJ,yBAAKjR,UAAU,gBACb,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,cAAjB,gBACA,4BAAQA,UAAU,sBAAsBC,GAAG,SAASe,KAAK,SAAS+P,IAAI,UACpE,4BAAQxP,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,SAGN,yBAAKvB,UAAU,2BACX,2BAAOA,UAAU,cAAjB,UACA,4BAAQA,UAAU,sBAAsBC,GAAG,SAASe,KAAK,SAAS+P,IAAI,UACtE,4BAAQxP,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,eAKV,yBAAKvB,UAAU,gBACb,4BAAQA,UAAU,qCAChB,yCAEF,4BAAQA,UAAU,yCAEhB,+CAEF,2BAAOiB,KAAK,SAAShB,GAAG,SAASe,KAAK,YAAY+P,IAAI,gBAG1D,6BAEE,kBAACzE,EAAD,iBAAalN,EAAb,CAAoBkD,MAAO,CAACwF,MAAM,UAChC,uBAAG9H,UAAU,wBACX,kBAAC,IAAD,CAAMiB,KAAK,WAEb,uBAAGjB,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,uH,GA7QUG,aA0RXqM,Q,kJCvSTxJ,E,YACJ,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KAsBR8R,gBAAkB,SAAC7P,GACjByC,QAAQC,IAAI1C,EAAEC,OAAOC,OAGrB,IAAIqF,EAAWvF,EAAEC,OAAOuE,QACpBsL,EAAW9P,EAAEC,OAAOC,MACpBqF,EACF,EAAKnH,UAAS,iBAAO,CACnBgH,SAAS,GAAD,mBAAM,EAAKpH,MAAMoH,UAAjB,CAA2B0K,QAGrC,EAAK1R,UAAS,iBAAO,CACnBgH,SAAU,EAAKpH,MAAMoH,SAAS0F,QAAO,SAAAiF,GAAC,OAAIA,IAAMD,UAnCnC,EAwCnBrQ,SAAW,SAACO,GACVyC,QAAQC,IAAI4B,IAAEtE,EAAEC,OAAOyF,WAAWA,WAAWA,aAC7CjD,QAAQC,IAAI4B,IAAE,cAAcnJ,IAAI,GAAGwD,WACnC8B,OAAOC,SAASX,KAAO,mBAzCQgF,IAA5B,EAAKhH,MAAM2C,SAAS1C,QACrByC,OAAOC,SAASX,KAAO,aAGzB,EAAK/B,MAAQ,CACX1C,KAAO,GACP0U,OAAO,EAAKjS,MAAM2C,SAAS1C,MAAMgS,QAEnC,EAAKhS,MAAMoH,SAAW,GAVL,E,iFAaE,IAAD,OAClBnH,EAAOC,IAAI+R,cAAchS,EAAO/C,aACnBJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAAI,OAAI,EAAK8C,SAAS,CAAC9C,YAC5B+C,OAAM,SAAAC,GACHC,MAAMD,Q,+BAyCd,IAAD,OAEDvC,EAAa1B,KAAK2D,MAAM1C,KAAK4U,KAAI,SAACC,EAAMC,GAC5C,IAAIC,EAAU,6BAA6BF,EAAKG,aAAa,OAC7D,OACE,2BAAO3R,UAAU,qBAAqBqI,IAAKoJ,GACvC,2BAAOxQ,KAAK,QAAQhB,GAAIuR,EAAKI,GAAI5Q,KAAK,UAAUG,OAAO,SAASD,SAAU,EAAKgQ,gBAAiB3P,MAAOiQ,EAAKI,KAC5G,8BACI,0BAAM5R,UAAU,2CACZ,yBAAKY,IAAK8Q,EAAS7Q,IAAI,MAE3B,0BAAMb,UAAU,qBACZ,wBAAIA,UAAU,UAAUwR,EAAKK,YAC7B,2BAAIL,EAAKI,GAAT,gBAQhB,OAAQ,0BAAM5R,UAAU,SAASC,GAAG,WACpC,6BAASD,UAAU,eACf,wBAAIA,UAAU,eAAd,aAEA,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,MAAMY,IAAI,oCAAoCC,IAAI,MAErE,yBAAKb,UAAU,8BACX,wBAAIA,UAAU,qBAAd,uBACA,yBAAKA,UAAU,qBAAf,OAEJ,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,qBAAd,cACA,yBAAKA,UAAU,qBAAf,SAIZ,yBAAKA,UAAU,cACX,0BAAMA,UAAU,eACZ,2BAAOiB,KAAK,OAAOF,YAAY,wBAC/B,gCACI,yBAAKH,IAAI,gCAAgCC,IAAI,QAIzD,yBAAKb,UAAU,cACX,uBAAGA,UAAU,oCAAoCoB,KAAK,aAClD,2BACI,yBAAKR,IAAI,yBAAyBC,IAAI,MAE1C,0CAEJ,uBAAGb,UAAU,6DAA6DoB,KAAK,cAAckE,QAAS5J,KAAKoF,UACvG,2BACI,yBAAKF,IAAI,gCAAgCC,IAAI,MAEjD,kDAIZ,yBAAKb,UAAU,wBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,iBACZ,yBAAKY,IAAI,uBAAuBC,IAAI,KACpC,yBAAKD,IAAI,uBAAuBC,IAAI,KACpC,yBAAKD,IAAI,uBAAuBC,IAAI,KACpC,yBAAKD,IAAI,uBAAuBC,IAAI,KACpC,yBAAKD,IAAI,uBAAuBC,IAAI,MAExC,8BACI,uCADJ,yCAOZ,yBAAKb,UAAU,sBACX,wBAAIA,UAAU,cAAd,mBACA,yBAAKA,UAAU,mBACd5C,U,GAhJoB+C,aAmKlB6C,Q,uOC1JTC,E,YAEJ,WAAY7D,GAAQ,IAAD,8BACjB,4CAAMA,KAoFRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,mBAAgC2B,EAAcnE,OAC9C,IAAIhF,EAAc,EAAK8C,MAAMyS,gBACvB3U,EAAUuI,EAAcnE,MAC5BjC,EAAOC,IAAIwS,eAAexV,EAAYY,GACrChB,MACC,SAAAQ,GACA,EAAK8C,SAAS,CAAEuS,WAAYrV,OAE9B,EAAK8C,SAAS,CAAEwS,eAAgB,KAChC,EAAKxS,SAAS,CAAEyS,UAAW,KAC3B,EAAKzS,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,MAnGN,EAsGnB0V,eAAiB,SAAAJ,GACf,EAAKxS,SAAS,CAAEwS,mBAChBnO,QAAQC,IAAR,mBAAgCkO,GAChC,IAAMK,EAAmBL,EAAe1Q,MAExCjC,EAAOC,IAAIgT,aAAaD,GACvBnW,MAAK,SAAA0C,GAAQ,OAAIA,KACjB1C,MACC,SAAAQ,GACE,EAAK8C,SAAS,CAAEyS,UAAWvV,OAE/B,EAAK8C,SAAS,CAAE2S,cAAe,KAC/B,EAAK3S,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,KAIrB,EAAK8C,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,YAAYI,OACdJ,IAAE,gBAAgBI,OAClBJ,IAAE,oBAAoBK,OACtB,IAAIyM,EAAW,EAAKpT,MAAMqT,aAC1B,EAAKjT,SAAS,CAAC+H,QAASiL,IACxB,IAAMX,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3CoR,EAAYV,EAAe1Q,MAC/B,EAAK9B,SAAS,CAACmT,iBAAgB,IAI/BtT,EAAOC,IAAIsT,qBAAqBf,EAAgBa,EAASjN,EAHrC,IAInBvJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,oBAAoBI,OACtB,EAAKtG,SAAS,CAAC9C,KAAMuT,QA9IR,EAmJnB4C,cAAgB,SAAAV,GACd,EAAK3S,SAAS,CAAE2S,kBAChBtO,QAAQC,IAAR,mBAAgCqO,GAChC,EAAK3S,SAAS,CAAC0S,kBAAmB,KAClC,IAAIY,EAAW,GACXxR,EAAQ,GACZ,GAAqB,OAAlB6Q,EACD,IAAK,IAAI1V,EAAI,EAAGA,EAAI0V,EAAcxV,OAAQF,IACtC6E,EAAM1E,KAAKuV,EAAc1V,IACzBqW,EAASlW,KAAKuV,EAAc1V,GAAG6F,OAGrC,EAAK9C,SAAS,CAAC0S,kBAAmBY,IAClC,EAAKtT,SAAS,CAAC2S,cAAe7Q,KAhKb,EAkKnBiF,eAAiB,WACf,EAAK/G,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,YAAYI,OACdJ,IAAE,gBAAgBI,OAClBJ,IAAE,oBAAoBK,OACtB,EAAKvG,SAAS,CAAC9C,KAAM,KACrB,EAAKqW,cAEL,IAAIP,EAAQ,YAAO,EAAKpT,MAAMqT,cAE1BP,EAAoB,EAAK9S,MAAM8S,kBACnCrO,QAAQC,IAAI,oBAAoBoO,GAChCrO,QAAQC,IAAI,WAAW,EAAK1E,MAAMqT,cAClC,IAdqB,uBAerB,YAAiBP,EAAjB,+CAAoC,CAAC,IAA5Bc,EAA2B,QAE/BC,EAAY,CACbxL,KAFFuL,EAAOA,EAAKtS,QAAQ,OAAQ,KAG1B8G,UAAWwL,EACXpL,YAAa,CACXC,MAAM,QACNqL,WAAY,WAGI,EACpBV,EAAS5V,KAAKqW,IA1BK,kFA6BrB,GAAGf,EAAkBvV,OAAS,EAAE,CAUV,EACpB6V,EAAS5V,KAVC,CACR6K,KAAM,MACND,UAAW,MACXxC,MAAK,EACL4C,YAAa,CACXuL,OAAO,UACPtL,MAAM,WAOZ,EAAKrI,SAAS,CAAC+H,QAASiL,IAExB,EAAKhT,SAAS,CAAC4T,QAAS,KACxB,IAAIC,EAAa,GAEXxB,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3C0Q,EAAkB,EAAK5S,MAAM4S,eAAe1Q,MAE5C6Q,EAAgB,EAAK/S,MAAM+S,cAC/B,GAAGA,EAAcxV,OAAS,EAAE,CAE1B,IADA,IAAI2E,EAAQ,GACH7E,EAAI,EAAGA,EAAI0V,EAAcxV,OAAQF,IACtC6E,EAAM1E,KAAKuV,EAAc1V,GAAG6E,OAEhC6Q,EAAgB7Q,EAAMgS,gBAEtBnB,EAAgB,GAChB,EAAK3S,SAAS,CAACmT,iBAAgB,IAGjCtT,EAAOC,IAAIsT,qBAAqBf,EAAgBG,EAAevM,EAAc0M,GAC5EjW,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,oBAAoBI,OACtB,IAAMyN,EAAQ,GALN,uBAMR,YAAkBtD,EAAlB,+CAA0B,CAAC,IAAhBvJ,EAAe,QACpB6K,EAAO7K,EACP8M,EAAY,EACZC,EAAY,EAChB,GAAGvB,EAAkBvV,OAAS,EAAE,CAAC,IAAD,uBAC9B,YAAiBuV,EAAjB,+CAAmC,CAAC,IAA3Bc,EAA0B,QACjCA,EAAOA,EAAKtS,QAAQ,OAAQ,UACJyF,IAArBO,EAAIgN,OAAOV,KACZzB,EAAKyB,GAAQtM,EAAIgN,OAAOV,GAAX,aACbQ,EAAY7F,SAAS6F,GAAW7F,SAASjH,EAAIgN,OAAOV,GAAX,gBALf,kFAQ3BQ,EAAY,IACbC,EAAYE,KAAKC,MAAMJ,EAAWtB,EAAkBvV,SAEtD4U,EAAI,IAAUkC,EACdJ,EAAWzW,KAAK6W,GAElBF,EAAM3W,KAAK2U,IAxBL,kFA2BR,GADA,EAAK/R,SAAS,CAAC4T,QAASC,IACrBlB,EAAcxV,OAAS,EAAE,CAE1B,IAGIkX,EACAC,EACAC,EALAC,EAAO,EACPC,EAAO,EACPC,EAAO,EAJe,uBAQ1B,YAAsBb,EAAtB,+CAAiC,CAAC,IAAvBc,EAAsB,QAC3BA,GAAW,IAAMA,GAAW,IAC9BD,GAAY,EACLC,GAAW,IAAMA,GAAW,GACnCF,GAAY,EAEZD,GAAY,GAdU,kFAiB1BH,EAAcF,KAAKC,MAAOI,EAAMX,EAAW1W,OAAS,KACpDmX,EAAcH,KAAKC,MAAOK,EAAMZ,EAAW1W,OAAS,KACpDoX,EAAcJ,KAAKC,MAAOM,EAAMb,EAAW1W,OAAS,KACpD,EAAK6C,SAAS,CAAC4U,QAASJ,IACxB,EAAKxU,SAAS,CAAC6U,QAASJ,IACxB,EAAKzU,SAAS,CAAC8U,QAASJ,IACxB,EAAK1U,SAAS,CAAC+U,SAAUV,IACzB,EAAKrU,SAAS,CAACgV,SAAUV,IACzB,EAAKtU,SAAS,CAACiV,SAAUV,IACzB,EAAKvU,SAAS,CAACmT,iBAAgB,IAEjC,EAAKnT,SAAS,CAAC9C,KAAM6W,QA5RR,EAiSnB9M,eAAiB,SAACC,EAAKC,EAAUC,EAAUxF,GACzC,IAAI4J,EAAc,GACsC,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAC1CD,EAAc5J,EAAEC,OAAOyF,WAAWA,YAEoB,UAArDpB,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAE1CD,EAAc5J,EAAEC,OAAOyF,YAGzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MACxC,QAAmBZ,IAAhBU,EACD,GAAIF,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIoK,EAAYlK,OAAQF,IAClCiJ,IAAEsF,EAAYjE,MAAMtK,IAAIF,IAAI,GAAGwD,UAAU,8BAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAS,GAAD,mBAAM,EAAKpH,MAAMoH,UAAjB,CAA2BE,YAEhC,CACL,IAAK,IAAIhJ,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAElCgI,IAAEsF,EAAYjE,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,eAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,EAAKpH,MAAMoH,SAAS0F,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,WA1TrC,EA+TnBM,kBAAoB,SAACL,EAAUM,EAAM7F,GAEnC,IAAI4J,EAAc,GAEhBA,EADsD,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,QAC5B7J,EAAEC,OAAOyF,WAAWA,WAEpB1F,EAAEC,OAAOyF,WAEzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MAEpCG,EAAWxB,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,IAAI5K,IAAI,GAAG4K,WAEzE,GAAIR,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIyK,EAASvK,OAAQF,IACjC,IAAK,IAAIiB,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAEpCgI,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,GAAGsK,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,8BAG/F,EAAKP,UAAS,iBAAO,CACnBgH,SAAUS,UAEP,CACL,IAAK,IAAIjJ,EAAG,EAAGA,EAAKkJ,EAASvK,OAAQqB,IACnC,IAAK,IAAIsJ,EAAG,EAAGA,EAAKT,EAAYlK,OAAQ2K,IACtC5B,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,GAAI+I,MAAMO,IAAK/K,IAAI,GAAGwD,UAAU,eAGjG,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,SAzVd,EAAKpH,MAAQ,CACXmI,QAAQ,GACR7K,KAAK,IAEP,EAAK0C,MAAMoH,SAAW,GACtB,EAAKpH,MAAMsV,SAAW,GACtB,EAAKtV,MAAMuV,YAAc,GACzB,EAAKvV,MAAMyS,gBAAkBxS,EAAO/C,YACpC,EAAK8C,MAAMwV,oBAAsBvV,EAAOd,YACxC,EAAKa,MAAMgK,UAAY,GACvB,EAAKhK,MAAMqG,cAAgB,GAC3B,EAAKrG,MAAM2S,WAAa,GACxB,EAAK3S,MAAM4S,eAAiB,GAC5B,EAAK5S,MAAM6S,UAAY,GACvB,EAAK7S,MAAM+S,cAAgB,GAC3B,EAAK/S,MAAM8S,kBAAoB,GAC/B,EAAK9S,MAAMgN,iBAAmB,OAC9B,EAAKhN,MAAMmT,gBAAkB,OAC7B,EAAKnT,MAAMgU,QAAU,GACrB,EAAKhU,MAAMyV,gBAAkB,GAC7B,EAAKzV,MAAMgV,QAAU,EACrB,EAAKhV,MAAMiV,QAAU,EACrB,EAAKjV,MAAMkV,QAAU,EACrB,EAAKlV,MAAMmV,SAAW,EACtB,EAAKnV,MAAMoV,SAAW,EACtB,EAAKpV,MAAMqV,SAAW,EACtB,EAAKrV,MAAMiK,YAAchK,EAAOd,YAAe,IAAM,EAAK+K,UAAW,OACrE,EAAKlK,MAAMuT,iBAAkB,EAC7B,EAAKvT,MAAMqT,aAAe,CAAC,CACzBjL,UAAW,MACXC,KAAM,KACNvG,QAAQ,GAEV,CACEsG,UAAW,SACXC,KAAM,WACNE,QAAQ,eACR3C,MAAM,EACL4C,YAAa,CACZC,MAAM,QACNiN,cAAe,OACf3B,OAAO,YAGX,CACE1L,KAAM,OACND,UAAW,OACXG,QAAQ,eACRC,YAAa,CACXC,MAAM,QACNiN,cAAe,SAGnB,CACErN,KAAM,WACND,UAAW,WACXI,YAAa,CACXC,MAAM,QACNiN,cAAe,UA7DF,E,uEAkEjB,IAAIjL,EAAW,IAAIC,KAEnB,OADWD,EAASE,cAAgB,KAAOF,EAASG,WAAW,GAAK,IAAMH,EAASP,Y,0CAIhE,IAAD,OACZhN,EAAcb,KAAK2D,MAAMyS,gBAG/BxS,EAAOC,IAAI2K,SAAS3N,GAEnBJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAE4J,UAAW1M,S,+BAgRvB,IAAD,OACDqY,EAAU,CACdC,OAAQ,CAAC,QAAS,UAAU,YAC5BC,SAAU,CACV,CACE3S,MAAO,mBACP4S,gBAAiB,CACf,UACA,UACA,WAEFC,qBAAsB,CACtB,UACA,UACA,WAEAzY,KAAM,CAACjB,KAAK2D,MAAMmV,SAAU9Y,KAAK2D,MAAMoV,SAAU/Y,KAAK2D,MAAMqV,aAI1DrK,EAAc,SAAAjL,GAIlB,OAEE,0BACEY,UAAU,2CACVsF,QAPgB,WAClBlG,EAAMkL,YAMkBhI,MAAO,CAACiI,UAAU,SAExC,8CAKAC,EAAY,CAChBC,KAAM,WACNE,eAAe,EACfC,SAAUlP,KAAKgL,eACfmE,YAAanP,KAAKuL,kBAClB6D,kBAAmB,CACjBhD,MAAM,MACNiD,YAAY,QAIVrM,EAAU,CACdyL,QAAQ,EACRkL,UAAW3Z,KAAK2D,MAAM1C,KAAKC,OAC3B0Y,YAAa,KAETnK,EAAmB,kBACvB,yBAAKnL,UAAU,UAAUC,GAAG,UAAUqC,MAAO,CAAC,QAAU,EAAKjD,MAAMgN,mBACjE,kBAAC,IAAD,CAAQpL,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,gBAKIwD,EAAkB,kBACtB,yBAAKtL,UAAU,2BAA2BsC,MAAO,CAAC,QAAU,EAAKjD,MAAMmT,kBAAvE,yBAII+C,EAAgB,kBACpB,yBAAKvV,UAAU,gBACT,yBAAKA,UAAU,UAEb,yBAAKA,UAAU,kBAAkBwV,UAAQ,aACvC,2BAAOxV,UAAU,kBACb,+BACI,4BACI,wBAAIA,UAAU,qBACd,4BACI,wCAEJ,wBAAIA,UAAU,0BACV,uCAEJ,wBAAIA,UAAU,0BACV,gDAEJ,wBAAIA,UAAU,uBAGtB,+BACE,4BACI,wBAAIA,UAAU,qBACd,4BACI,yBAAKA,UAAU,iBACX,2CAGR,4BACI,yBAAKA,UAAU,kBAAkB,EAAKX,MAAMkV,UAEhD,4BACI,yBAAKvU,UAAU,iBAAiB,EAAKX,MAAMqV,SAA3C,MAEJ,wBAAI1U,UAAU,sBAElB,4BACI,wBAAIA,UAAU,qBACd,4BACI,yBAAKA,UAAU,iBACX,0CAGR,4BACI,yBAAKA,UAAU,kBAAkB,EAAKX,MAAMiV,UAEhD,4BACI,yBAAKtU,UAAU,iBAAiB,EAAKX,MAAMoV,SAA3C,MAEJ,wBAAIzU,UAAU,sBAElB,4BACI,wBAAIA,UAAU,qBACd,4BACI,yBAAKA,UAAU,iBACX,yCAGR,4BACI,yBAAKA,UAAU,kBAAkB,EAAKX,MAAMgV,UAEhD,4BACI,yBAAKrU,UAAU,iBAAiB,EAAKX,MAAMmV,SAA3C,MAEJ,wBAAIxU,UAAU,0BAM9B,yBAAKA,UAAU,UAEb,yBAAKA,UAAU,YAAYwV,UAAQ,aACnC,kBAAC,IAAD,CACF7Y,KAAMqY,EACNtW,QAAS,CACP2H,MAAM,CACJoP,SAAQ,EACR/N,KAAK,+BACLgO,SAAS,WASnB,OACE,0BAAM1V,UAAU,SAASC,GAAG,WAC1B,6BAASD,UAAU,eACjB,wBAAIA,UAAU,eAAd,sBACA,wBAAIA,UAAU,eAAd,OAAiCtE,KAAK2D,MAAMwV,qBAC5C,yBAAK7U,UAAU,qBAAqBC,GAAG,sBACrC,yBAAKD,UAAU,sBAAsBsC,MAAO,CAAEwF,MAAO,SACnD,yBAAK9H,UAAU,cACb,yBAAKA,UAAU,4BACb,yBAAKsC,MAAO,CAAEqT,aAAc,SAC1B,wBAAI3V,UAAU,qBAAd,SACA,yBAAKsC,MAAO,CAAC,MAAQ,UACrB,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO7F,KAAK2D,MAAMqG,cAAgBxE,SAAUxF,KAAK+J,cAAe/G,QAAShD,KAAK2D,MAAMgK,UAAWrJ,UAAU,4DAC5IoF,gBAAgB,YAIF,yBAAKpF,UAAU,GAAGsC,MAAO,CAAEqT,aAAc,SACvC,wBAAI3V,UAAU,qBAAd,UACA,yBAAKsC,MAAO,CAAC,MAAQ,UACrB,kBAAC,IAAD,CAAQyO,IAAI,SAAS/P,KAAK,SAASO,MAAO7F,KAAK2D,MAAM4S,eAAiB/Q,SAAUxF,KAAK2W,eAAgB3T,QAAShD,KAAK2D,MAAM2S,WAAYhS,UAAU,4DAC/JoF,gBAAgB,aAIF,yBAAKpF,UAAU,GAAGsC,MAAO,CAAEqT,aAAc,SACvC,wBAAI3V,UAAU,qBAAd,YACA,yBAAKsC,MAAO,CAAC,MAAQ,UACrB,kBAAC,IAAD,CAASf,MAAO7F,KAAK2D,MAAM+S,cAAewD,SAAO,EAAC1U,SAAUxF,KAAKoX,cAAepU,QAAShD,KAAK2D,MAAM6S,UAAWlS,UAAU,4DACzIoF,gBAAgB,SAASyQ,mBAAmB,MAI9B,yBAAK7V,UAAU,cACf,wBAAIA,UAAU,qBAAd,QACE,0BACEA,UAAU,yDACVsF,QAAS5J,KAAK8K,gBAEd,2BACE,yBAAK5F,IAAI,+BAA+BC,IAAI,MAE9C,8CAOZ,yBAAKZ,GAAG,UAAUD,UAAU,aAAasC,MAAO,CAAC,QAAU,SAC3D,kBAAC,IAAD,CACAiJ,SAAS,MACT5O,KAAMjB,KAAK2D,MAAM1C,KACjB6K,QAAS9L,KAAK2D,MAAMmI,QACpBxH,UAAU,cACVyL,UAAa,CAAEC,SAAUhQ,KAAK2D,MAAMiK,eAErC,SAAAlK,GAAK,OACA,yBAAMa,GAAG,cAAcqC,MAAO,CAAC,QAAU,UACR,IAA/B,EAAKjD,MAAMuT,iBAAuD,IAA3B,EAAKvT,MAAM1C,KAAKC,OAAe,kBAAC2Y,EAAD,MAAkB,GAC1F,yBAAKvV,UAAU,mBAAkB,kBAACqK,EAAgBjL,EAAMyM,WACxD,yBAAK7L,UAAU,eACe,IAA3B,EAAKX,MAAM1C,KAAKC,OACjB,kBAAC,qBAAD,CAAoBkP,WAAYC,IAAkBrN,KAC/C,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,kBAAkBC,GAAG,mBAClC,kBAAC,IAAD,eACAuK,UAAYA,EACZsL,YAAU,GACJ1W,EAAM8M,UACND,EAJN,CAKErE,QAAQ,gBACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,OAIjC,kBAACV,EAAD,MACH,kBAACH,EAAD,kB,GA1kBMhL,aAulBP8C,Q,2yBCxlBPsC,EAAcC,SAAdD,UAEFrC,E,YAEJ,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KA6KR2W,kBAAoB,SAAA1U,GAElB,GADAA,EAAEG,iBACsC,IAApC,EAAKnC,MAAM2W,cAAcpZ,OAE3B,OADAgD,MAAM,2BACC,EAEP,IAAIqW,EAAU,EAAK5W,MAAM2W,cAAc,GACnCzZ,EAAc+C,EAAO/C,YAEzB+C,EAAOC,IAAI2W,gBAAgBD,EAAS1Z,EAAa,EAAK8C,MAAMsT,UAC3DxW,MAAK,SAAAC,GAAG,OAAIA,KACFD,MAAK,SAAC2C,GACL,IAAIqH,EAAa,EAAK9G,MAAM8G,aACL,yCAApBrH,EAAKnC,KAAKiF,SACXuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,IAEL,EAAK1G,UAAS,iBAAO,CACnBuW,cAAe,OAEjB,EAAKvW,UAAS,iBAAO,CACnB0W,YAAa,OAEf,EAAK/W,MAAMsB,QAAQC,QAAQ,CACzB8C,SAAU,gBACVpE,MAAO,CAACsT,SAAS,EAAKtT,MAAMsT,SAC5Bd,WAAW,EAAKxS,MAAMwS,gBAGxB1L,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,QAIRzG,OAAM,SAAAC,GACHC,MAAMD,OAvNL,EA2NnByW,eAAiB,SAAA/U,GAEf,GADAA,EAAEG,iBACoC,IAAlC,EAAKnC,MAAM8W,YAAYvZ,OAEzB,OADAgD,MAAM,2BACC,EAEP,IAAIqW,EAAU,EAAK5W,MAAM8W,YAAY,GACjC5Z,EAAc+C,EAAO/C,YAEzB+C,EAAOC,IAAI1D,aAAaoa,EAAS1Z,EAAa,EAAK8C,MAAMsT,UACxDxW,MAAK,SAAAC,GAAG,OAAIA,KACFD,MAAK,SAAC2C,GACL,IAAIqH,EAAa,EAAK9G,MAAM8G,aACL,wDAApBrH,EAAKnC,KAAKiF,SACXuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,IAEL,EAAK1G,UAAS,iBAAO,CACnBuW,cAAe,OAEjB,EAAKvW,UAAS,iBAAO,CACnB0W,YAAa,OAEf,EAAK/W,MAAMsB,QAAQC,QAAQ,CACzB8C,SAAU,gBACVpE,MAAO,CAACsT,SAAS,EAAKtT,MAAMsT,SAC1Bd,WAAW,EAAKxS,MAAMwS,gBAG1B1L,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,QAIRzG,OAAM,SAAAC,GACHC,MAAMD,OApQL,EAwQnB0W,kBAAoB,SAAC1P,EAAKC,EAAUC,EAAUxF,GACxCuF,EACF,EAAKnH,UAAS,iBAAO,CACnB0W,YAAY,GAAD,mBAAM,EAAK9W,MAAM8W,aAAjB,CAA8BxP,EAAIvI,aAG/C,EAAKqB,UAAS,iBAAO,CACnB0W,YAAa,EAAK9W,MAAM8W,YAAYhK,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,EAAIvI,eA/Q7C,EAmRnBkY,qBAAuB,SAAC1P,EAAUM,EAAM7F,GACtC,IAAMkV,EAAMrP,EAAKqK,KAAI,SAAAiF,GAAC,OAAIA,EAAEpY,UAExBwI,EAEF,EAAKnH,UAAS,iBAAO,CACnB0W,YAAaI,MAGf,EAAK9W,UAAS,iBAAO,CACnB0W,YAAa,QA7RA,EAiSnBM,oBAAsB,SAAC9P,EAAKC,EAAUC,EAAUxF,GAE1CuF,EACF,EAAKnH,UAAS,iBAAO,CACnBuW,cAAc,GAAD,mBAAM,EAAK3W,MAAM2W,eAAjB,CAAgCrP,EAAIvI,aAGnD,EAAKqB,UAAS,iBAAO,CACnBuW,cAAe,EAAK3W,MAAM2W,cAAc7J,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,EAAIvI,eAzSjD,EA6SnBsY,uBAAyB,SAAC9P,EAAUM,EAAM7F,GACxC,IAAMkV,EAAMrP,EAAKqK,KAAI,SAAAiF,GAAC,OAAIA,EAAEpY,UACxBwI,EAEF,EAAKnH,UAAS,iBAAO,CACnBuW,cAAeO,MAGjB,EAAK9W,UAAS,iBAAO,CACnBuW,cAAe,aApTY5P,IAA5B,EAAKhH,MAAM2C,SAAS1C,QACrByC,OAAOC,SAASX,KAAO,YAIzB,EAAK/B,MAAQ,CACXsT,SAAS,EAAKvT,MAAM2C,SAAS1C,MAAMsT,SACnCd,WAAW,EAAKzS,MAAM2C,SAAS1C,MAAMwS,WACrC8E,kBAAmB,CACjB,CAAElP,UAAW,KAAMC,KAAM,KAAMC,WAAW,EAAOxG,QAAQ,GACzD,CACEuG,KAAM,QACND,UAAW,SACXxC,MAAM,EACN2C,QAAQ,aACRC,YAAa,CACXC,MAAO,QAGX,CACEL,UAAW,YACXC,KAAM,YACNzC,MAAM,EACN4C,YAAa,CACXC,MAAO,QAGX,CACEL,UAAW,WACXC,KAAM,WACNG,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,aACND,UAAW,iBACXI,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,YACND,UAAW,iBACXI,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,aACND,UAAW,uBACXM,UAwEN,SAA4BC,EAAMrB,GAChC,OACE,yBAAK3G,UAAU,qBACb,kBAAC,IAAD,CAAUuB,MAAOoF,EAAIiQ,iBAAkBjQ,EAAIiQ,gBAA3C,OA1EA/O,YAAa,CACXC,MAAO,SAIb+O,eAAgB,CAAC,CAAC,QAAU,WAC5BC,WAAY,CAEV,CACErP,UAAW,YACXC,KAAM,YACNzC,MAAM,EACN4C,YAAa,CACXC,MAAO,QAGX,CACEL,UAAW,WACXC,KAAM,WACNG,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,QACND,UAAW,SACXxC,MAAM,EACN2C,QAAS,aACTC,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,QACND,UAAW,SACXxC,MAAM,EACN4C,YAAa,CACXC,MAAO,QAGX,CACEJ,KAAM,WACND,UAAW,WACXM,UAmCN,SAA0BC,EAAMrB,GAC9B,OACE,6BACE,yBAAK3G,UAAU,kBAAkB2G,EAAI8B,UACrC,yBAAKzI,UAAU,qBAAf,qBAtCAiF,MAAM,EACN4C,YAAa,CACXC,MAAO,SAIbiP,QAAS,IAGX,EAAK1X,MAAM2W,cAAgB,GAC3B,EAAK3W,MAAM8W,YAAc,GACzB,EAAK9W,MAAM2X,WAAY,EACvB,EAAK3X,MAAM4X,UAAU,GACrB,EAAK5X,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IAxHG,E,iFA+IE,IAAD,OAClBvK,EAAOC,IAAI2X,iBAAkB5X,EAAO/C,YAAYb,KAAK2D,MAAMsT,UAC9CxW,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GACL,EAAKW,SAAS,CAACoX,eAAe/X,EAAKf,aACnC,EAAK0B,SAAS,CAACsX,QAAQjY,EAAKZ,yBAE7BwB,OAAM,SAAAC,GACHC,MAAMD,Q,gDAGEwX,GAAW,IAAD,OAClCzb,KAAK+D,UAAS,iBAAO,CACnBuW,cAAe,OAEjBta,KAAK+D,UAAS,iBAAO,CACnB0W,YAAa,OAEfza,KAAK+D,SAAS,CAACoX,eAAe,KAChBnb,KAAK+D,SAAS,CAACsX,QAAQ,KACrCzX,EAAOC,IAAI2X,iBAAkB5X,EAAO/C,YAAYb,KAAK2D,MAAMsT,UACxDxW,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GACL,EAAKW,SAAS,CAACoX,eAAe/X,EAAKf,aACnC,EAAK0B,SAAS,CAACsX,QAAQjY,EAAKZ,yBAE7BwB,OAAM,SAAAC,GACHC,MAAMD,Q,+BAiJJ,IAAD,OACD0K,EAAc,SAAAjL,GAIlB,OACE,0BAAMY,UAAU,0CAA2CsF,QAJzC,WAClBlG,EAAMkL,aAIJ,8CAIA5L,EAAU,CACdyL,QAAQ,EACRmL,YAAa,GACb7O,SAAS,GAET2Q,WAAY,mBACZC,mBAAmB,GAEfC,EAAa,CACjBnN,QAAQ,EACRmL,YAAa,GACb7O,SAAS,IAGL+D,EAAY,CAChBC,KAAM,QACNE,eAAe,EACfC,SAAUlP,KAAK+a,oBAEf3L,kBAAmB,CACjBhD,MAAO,OACPiD,YAAa,QAIXwM,EAAe,CACnB9M,KAAM,QACNE,eAAe,EACfC,SAAUlP,KAAK2a,kBAEfvL,kBAAmB,CACjBhD,MAAO,OACPiD,YAAa,QAIXO,EAAkB,kBACtB,yBAAKtL,UAAU,4BAAf,0BAIIwX,EAASC,IAASC,OAAO,cAE/B,OACE,0BAAM1X,UAAU,SAASC,GAAG,WAC1B,6BAASD,UAAU,eACjB,wBAAIA,UAAU,qBAAd,WACA,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,eACXtE,KAAK2D,MAAMwS,cAKlB,kBAAC,IAAD,CACEtG,SAAS,MACT5O,KAAMjB,KAAK2D,MAAMwX,eACjBrP,QAAS9L,KAAK2D,MAAMsX,kBACpB/O,QAAQ,oBACR6D,UAAW,CAAEC,SAAS,0BAAD,OAA4BpM,EAAOd,YAAnC,YAAkD9C,KAAK2D,MAAMwS,WAA7D,YAA2E2F,EAA3E,SACrBhM,QAAM,IAEL,SAAApM,GAAK,OACJ,6BACE,yBAAKY,UAAU,uBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,qBAAd,6BAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAACuF,EAAD,iBAAgBnG,EAAMwM,YAAtB,CAAoC7K,YAAY,yBAChD,gCACI,yBAAKH,IAAI,+BAA+BC,IAAI,QAIpD,yBAAKb,UAAU,cACb,kBAACqK,EAAgBjL,EAAMyM,UACvB,0BAAM7L,UAAU,0CAA0CsF,QAAS,EAAKyQ,mBACtE,2CAIN,yBAAK/V,UAAU,eACb,kBAAC,qBAAD,CAAoB8L,WAAYC,IAAkBrN,KAC/C,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,mBACb,kBAAC,IAAD,iBACMZ,EAAM8M,UADZ,CAEE1B,UAAWA,GACPyB,EAHN,CAIEE,OAASC,MACTxE,QAAQ,cACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,QAKtC,yBAAKhM,UAAU,oBAIrB,kBAAC,IAAD,CACEuL,SAAS,SACT5O,KAAMjB,KAAK2D,MAAM0X,QACjBvP,QAAS9L,KAAK2D,MAAMyX,WACpBlP,QAAQ,oBACR4D,QAAM,IACL,SAAApM,GAAK,OACJ,6BACE,yBAAKY,UAAU,uBACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,qBAAd,uCAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAACuF,EAAD,iBAAgBnG,EAAMwM,YAAtB,CAAoC7K,YAAY,yBAChD,gCACI,yBAAKH,IAAI,+BAA+BC,IAAI,QAIpD,yBAAKb,UAAU,qBACb,0BAAMA,UAAU,0CAA0CsF,QAAS,EAAK8Q,gBACtE,2BACE,yBAAKxV,IAAI,wBAAwBC,IAAI,MAEvC,6CAIN,yBAAKb,UAAU,eACb,kBAAC,qBAAD,CACE8L,WAAYC,IAAkBuL,KAE7B,gBAAGtL,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,mBACb,kBAAC,IAAD,iBACMZ,EAAM8M,UADZ,CAEE1B,UAAW+M,GACPtL,EAHN,CAIErE,QAAQ,cACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,kB,GA/d1B7L,aA4eb+C,Q,sMCnfPqC,EAAcC,SAAdD,UAEFpC,E,YACJ,WAAY/D,GAAQ,IAAD,8BACjB,4CAAMA,KAwHRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,kBAA+B2B,EAAcnE,OAC7C,IAAIxE,EAAc2I,EAAcnE,MAChCjC,EAAOC,IAAI+R,cAAchS,EAAO/C,YAAYQ,GAC/BZ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAAI,OAAI,EAAK8C,SAAS,CAAC9C,YAC5B+C,OAAM,SAAAC,GACHC,MAAMD,OApGtB,EAAKN,MAAQ,CACXmI,QAAQ,CAAC,CACPC,UAAW,MACXC,KAAM,KACNvG,QAAQ,GAET,CACEuG,KAAM,SACND,UAAW,aACXM,UAxBL,SAAwBC,EAAMrB,EAAIE,GAEhC,IAAI6K,EAAU,6BAA6B/K,EAAI7J,SAAS,OACpD0L,EAAO,WAAW3B,EACtB,OACQ,yBAAK5G,GAAIuI,EAAMxI,UAAU,mBACvB,yBAAKA,UAAU,oBACX,yBAAKY,IAAK8Q,EAAS7Q,IAAI,MAE3B,yBAAKb,UAAU,qBACX,yBAAKA,UAAU,sBAAsB2G,EAAIkL,eAepDhK,YAAa,CACZC,MAAM,QAGT,CACCJ,KAAM,gBACND,UAAW,eACXI,YAAa,CACXC,MAAM,QAGT,CACCJ,KAAM,QACND,UAAW,cACXI,YAAa,CACXC,MAAM,OAGT,CACCL,UAAW,WACXC,KAAM,UACNG,YAAa,CACXC,MAAM,OAIT,CACCL,UAAW,kBACXC,KAAM,aACNG,YAAa,CACXC,MAAM,QAGT,CACEJ,KAAM,WACND,UAAW,WACXI,YAAa,CACZC,MAAM,QAGT,CACCJ,KAAM,GACND,UAAW,GACXM,UAhFJ,SAAmBC,EAAMrB,GACvB,OACE,yBAAK3G,UAAU,mBACL,0BAAMA,UAAU,2CAA2CgB,KAAM2F,EAAIkL,WAAY5R,GAAI0G,EAAI/I,cACrF,0BAAMoD,KAAM2F,EAAIkL,WAAY5R,GAAI0G,EAAI/I,cAApC,mBA6EdiK,YAAa,CACXC,MAAM,OAERa,OAAQ,CACNrD,QAAS,SAACjE,EAAGuH,EAAQC,EAAalC,EAAKE,GAErC,EAAKzH,MAAMsB,QAAQ7D,KAAK,CACtB4G,SAAU,gBACVpE,MAAO,CAACsT,SAAUhM,EAAI/I,aAAciU,WAAWlL,EAAIkL,kBAM3DlV,KAAO,IAjGQ,E,iFAsGE,IAAD,OAElB2C,EAAOC,IAAI+R,cAAchS,EAAO/C,aACnBJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAAQ,GAAI,OAAI,EAAK8C,SAAS,CAAC9C,YAC5B+C,OAAM,SAAAC,GACHC,MAAMD,MAGtBL,EAAOC,IAAI2K,SAAS5K,EAAO/C,aAC1BJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAE4J,UAAW1M,S,+BAmB/B,IAMM2O,EAAkB,kBACtB,yBAAKtL,UAAU,4BAAf,yBAKF,OAAQ,0BAAMA,UAAU,SAASC,GAAG,UAAUqC,MAAO,CAAC,gBAAkB,YAChE,6BAAStC,UAAU,eACf,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,mBAAd,WACA,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,WAAhB,UAEF,yBAAKA,UAAU,oBACb,yBAAKsC,MAAO,CAAC,MAAQ,UACnB,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO7F,KAAK2D,MAAMqG,cAAgBxE,SAAUxF,KAAK+J,cAAe/G,QAAShD,KAAK2D,MAAMgK,UAAWrJ,UAAU,4DAClJoF,gBAAgB,cAMN,yBAAKpF,UAAU,oBACa,IAA3BtE,KAAK2D,MAAM1C,KAAKC,OAET,kBAAC,IAAD,CACA2O,SAAS,MACT5O,KAAOjB,KAAK2D,MAAM1C,KAClB6K,QAAU9L,KAAK2D,MAAMmI,QACrBI,QAAQ,eACR4D,QAAM,IAEL,SAAApM,GAAK,OACF,yBAAKY,UAAU,uBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,kBAACuF,EAAD,iBAAgBnG,EAAMwM,YAAtB,CAAoC7K,YAAY,wBAChD,gCACI,yBAAKH,IAAI,+BAA+BC,IAAI,QAIpD,kBAAC,IAAD,iBACOzB,EAAM8M,UADb,CAEEC,OAASC,MACTxE,QAAQ,eACRyE,iBAAmB,kBAAM,kBAACf,EAAD,cAKpC,mBA1DQ,kBACvB,yBAAKtL,UAAU,WACb,kBAAC,IAAD,CAAQiB,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,iBAyDe,a,GAnMC3H,aAyMPgD,Q,2KC3MTC,E,YACF,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuY,cAAgB,SAAAjW,GACZ,EAAKjC,SAAS,CAAEiC,UAChBoC,QAAQC,IAAR,mBAAgCrC,GAEhC,IAAIH,EAAQ,GACZ,GAAa,OAAVG,EACD,IAAK,IAAIhF,EAAI,EAAGA,EAAIgF,EAAM9E,OAAQF,IAC9B6E,EAAM1E,KAAK6E,EAAMhF,IAGvB,EAAK+C,SAAS,CAACiC,MAAOH,KA5BtB,EAAKlC,MAAQ,CACXqC,MAAO,GACP2E,MAAO,GACPzE,QAAS,GACTgW,UAAU,GAEZ,EAAKC,aAAe,EAAKA,aAAajc,KAAlB,gBACpB,EAAKyD,MAAMyY,UAAY,GATR,E,iFAWE,IAAD,OAEhBxY,EAAOC,IAAIwY,aAAazY,EAAO/C,aAC9BJ,MAAK,SAAA0C,GAAQ,OAAIA,KACjB1C,MACD,SAAAQ,GACA,EAAK8C,SAAS,CAAEqY,UAAWnb,S,uCAedib,GACblc,KAAK+D,SAAS,CAAEmY,e,mCAEPvW,GACTA,EAAEG,iBACF9F,KAAKsc,kBAAiB,GAFV,MAORtc,KAAK2D,MAPG,EAIV4Y,cAJU,EAKVC,cALU,EAMVC,gBASF,GAA6B,IAA1Bzc,KAAK2D,MAAMqC,MAAM9E,OAGhB,OAFAlB,KAAK+D,SAAS,CAACwY,cAAc,qBAC7BrY,MAAM,oCACC,EAEP,IAAIjD,EAAO,CACP,MAAQjB,KAAK2D,MAAMqC,MACvB,QAAUhG,KAAK2D,MAAMuC,QACjB,MAAQlG,KAAK2D,MAAMgH,MACnB,cAAgBV,IAAE,gBAAgByS,GAAG,aAEzCtU,QAAQC,IAAI,OAAOpH,K,+BAKpB,IAAD,SAMAjB,KAAK2D,MAJPqC,EAFE,EAEFA,MACA2E,EAHE,EAGFA,MACAzE,EAJE,EAIFA,QACAgW,EALE,EAKFA,SAGJ,OAEI,0BAAM5X,UAAU,SAASC,GAAG,WACxB,0BAAMqQ,IAAI,aAAaC,MAAM,SAASnP,KAAK,0CAC7C,6BAASpB,UAAU,eACjB,wBAAIA,UAAU,qBAAd,aACE,wBAAIA,UAAU,eAAd,qBACA,0BAAMc,SAAUpF,KAAKmc,aAAe7X,UAAU,0BAE5C,yBAAKA,UAAU,uBACb,6BACE,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gCAAd,yBACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,cAAjB,gBACC,kBAAC,IAAD,CAASqY,kBAAmB,GAAIC,gBAAiB,CAChDrY,GAAI,QACJe,KAAM,SACHO,MAAOG,EAAOkU,SAAO,EAAC1U,SAAUxF,KAAKic,cACxClH,OAAQ,aAAW/R,QAAShD,KAAK2D,MAAMyY,UAAW9X,UAAU,4DAC5DoF,gBAAgB,SAASyQ,mBAAmB,EAC5C+B,SAAUA,EACVW,mBAAoB,SAAAnc,GAAG,OACvB,EAAKqD,SAAS,CAAEwY,cAAe7b,EAAKwb,UAAU,KAE9CY,iBAAkB,CACdxX,KAAM,QACNyX,OAAO,EACP3H,UAAU,OAuCpB,yBAAK9Q,UAAU,gBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,cAAjB,SACA,kBAAC,UAAD,CAAS0Y,eAAe,aAAaJ,gBAAiB,CACpDrY,GAAI,QACJe,KAAM,QACNC,KAAM,OACNF,YAAa,eAEbQ,MAAO8E,EAAQmS,iBAAkB,CAAExX,KAAM,QAC1CyX,OAAO,EAAM3H,UAAU,GACvB8G,SAAUA,EACTW,mBAAoB,SAAAnc,GAAG,OACvB,EAAKqD,SAAS,CAAEyY,cAAe9b,EAAKwb,UAAU,KAE9C1W,SAAU,SAACmF,EAAOhF,GACd,EAAK5B,SAAS,CAAE4G,WAElBoK,OAAQ,SAAApP,QAKd,yBAAKrB,UAAU,iBACb,2BAAOA,UAAU,cAAjB,WACA,kBAAC,WAAD,CAAU0Y,eAAe,kCACzBL,kBAAmB,GACnBC,gBAAiB,CACfrY,GAAI,UACJe,KAAM,UACND,YAAa,uBACZ4X,KAAM,KACNzR,KAAM,KACN3F,MAAOK,EAASb,YAAY,uBAAuByX,iBAAkB,CAACxX,KAAM,UAC/EyX,OAAO,EAAM3H,UAAU,GACvB8G,SAAUA,EACVW,mBAAoB,SAAAnc,GAAG,OACrB,EAAKqD,SAAS,CACV0Y,gBAAiB/b,EACjBwb,UAAU,KAGd1W,SAAU,SAACU,EAASP,GAChB,EAAK5B,SAAS,CAAEmC,aAElB6O,OAAQ,SAAApP,SAOhB,yBAAKrB,UAAU,gBAEb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,aAAasC,MAAO,CAAC,cAAgB,SAAtD,kBACA,0BAAMtC,UAAU,cAAa,2BAAOiB,KAAK,WAAYhB,GAAI,cAAee,KAAK,cAAcE,SAAU,SAAEG,UAI3G,yBAAKrB,UAAU,IAEnB,4BAAQA,UAAU,mDAAmDsF,QAAS5J,KAAKmc,cAEjF,uCAEF,2BAAO5W,KAAK,SAASqB,MAAO,CAAEmT,QAAS,qB,GAjNlCtV,aA8NRiD,Q,i0BCpNTwV,E,YACJ,WAAYxZ,GAAQ,IAAD,8BACjB,4CAAMA,KA6GRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,mBAAgC2B,EAAcnE,OAC9C,IAAIhF,EAAc,EAAK8C,MAAMyS,gBACvB3U,EAAUuI,EAAcnE,MAC5BjC,EAAOC,IAAIwS,eAAexV,EAAYY,GACrChB,MACC,SAAAQ,GACA,EAAK8C,SAAS,CAAEuS,WAAYrV,OAE9B,EAAK8C,SAAS,CAAEwS,eAAgB,KAChC,EAAKxS,SAAS,CAAEyS,UAAW,KAC3B,EAAKzS,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,KACrB,EAAK8C,SAAS,CAAEoZ,kBAAmB,KACnC,EAAKpZ,SAAS,CAAEqZ,gBAAiB,MA9HlB,EAgInBzG,eAAiB,SAAAJ,GACf,EAAKxS,SAAS,CAAEwS,mBAChBnO,QAAQC,IAAR,mBAAgCkO,GAChC,IAAMK,EAAmBL,EAAe1Q,MACxC,EAAK9B,SAAS,CAACqZ,gBAAgB,sBAAsB7G,EAAe6G,kBACpExZ,EAAOC,IAAIgT,aAAaD,GACvBnW,MAAK,SAAA0C,GAAQ,OAAIA,KACjB1C,MACC,SAAAQ,GACE,EAAK8C,SAAS,CAAEyS,UAAWvV,OAE/B,EAAK8C,SAAS,CAAE2S,cAAe,KAC/B,EAAK3S,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,KACrB,EAAK8C,SAAS,CAAEoZ,kBAAkB,KAElC,EAAKpZ,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,YAAYI,OACdJ,IAAE,gBAAgBI,OAClBJ,IAAE,wBAAwBK,OAC1B,IAAIyM,EAAW,EAAKpT,MAAMqT,aAC1B,EAAKjT,SAAS,CAAC+H,QAASiL,IACxB,IAAMX,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3CoR,EAAYV,EAAe1Q,MAC/B,EAAK9B,SAAS,CAACmT,iBAAgB,IAE/B,EAAKnT,SAAS,CAAEsZ,eAAgB,KAEhCzZ,EAAOC,IAAIsT,qBAAqBf,EAAgBa,EAASjN,EAHrC,IAInBvJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,wBAAwBI,OAC1B,EAAKtG,SAAS,CAAC9C,KAAMuT,QAvKR,EA2KnB4C,cAAgB,SAAAV,GACd,EAAK3S,SAAS,CAAE2S,kBAChBtO,QAAQC,IAAR,mBAAgCqO,GAChC,EAAK3S,SAAS,CAAC0S,kBAAmB,KAClC,IAAIY,EAAW,GACXxR,EAAQ,GACZ,GAAqB,OAAlB6Q,EACD,IAAK,IAAI1V,EAAI,EAAGA,EAAI0V,EAAcxV,OAAQF,IACtC6E,EAAM1E,KAAKuV,EAAc1V,IACzBqW,EAASlW,KAAKuV,EAAc1V,GAAG6F,OAGrC,EAAK9C,SAAS,CAAC0S,kBAAmBY,IAClC,EAAKtT,SAAS,CAAC2S,cAAe7Q,KAxLb,EA0LnByX,aAAe,SAAAC,GACb,EAAKxZ,SAAS,CAAEwZ,iBAChBnV,QAAQC,IAAR,mBAAgCkV,GAChC,IAAM5U,EAAW4U,EAAa1X,MAExB2X,EAAgB,CAAE3W,MADP0W,EAAa1W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAACwZ,aAAcC,KAhMZ,EAkMnBC,aAAe,SAAAC,GACb,EAAK3Z,SAAS,CAAE2Z,iBAChBtV,QAAQC,IAAR,mBAAgCqV,GAChC,IAAM/U,EAAW+U,EAAa7X,MAExB8X,EAAgB,CAAE9W,MADP6W,EAAa7W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAAC2Z,aAAcC,KAxMZ,EA0MnB7S,eAAiB,WACf,EAAK/G,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,YAAYI,OACdJ,IAAE,gBAAgBI,OAClBJ,IAAE,wBAAwBK,OAC1B,EAAKvG,SAAS,CAAC9C,KAAM,KACrB,EAAKqW,cAEL,IAAIP,EAAQ,YAAO,EAAKpT,MAAMqT,cAE9B,EAAKjT,SAAS,CAAC+H,QAASiL,IAExB,IAAMX,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3C0Q,EAAkB,EAAK5S,MAAM4S,eAAe1Q,MAE5C6Q,EAAgB,EAAK/S,MAAM+S,cAG/B9S,EAAOC,IAAIsT,qBAAqBf,EAAgBG,EAAevM,EAAc0M,GAC5EjW,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,wBAAwBI,OAC1B,IAAMyN,EAAQ,GALN,uBAMR,YAAkBtD,EAAlB,+CAA0B,CAAC,IACrBsB,EADoB,QAExBgC,EAAM3W,KAAK2U,IARL,kFAUR,EAAK/R,SAAS,CAAC9C,KAAM6W,QA3OR,EA+OnB9M,eAAiB,SAACC,EAAKC,EAAUC,EAAUxF,GACzC,IAAI4J,EAAc,GACsC,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAC1CD,EAAc5J,EAAEC,OAAOyF,WAAWA,YAEoB,UAArDpB,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAE1CD,EAAc5J,EAAEC,OAAOyF,YAGzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MACxC,QAAmBZ,IAAhBU,EACD,GAAIF,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIoK,EAAYlK,OAAQF,IAClCiJ,IAAEsF,EAAYjE,MAAMtK,IAAIF,IAAI,GAAGwD,UAAU,8BAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAS,GAAD,mBAAM,EAAKpH,MAAMoH,UAAjB,CAA2BE,YAEhC,CACL,IAAK,IAAIhJ,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAElCgI,IAAEsF,EAAYjE,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,eAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,EAAKpH,MAAMoH,SAAS0F,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,WAxQrC,EA6QnBM,kBAAoB,SAACL,EAAUM,EAAM7F,GAEnC,IAAI4J,EAAc,GAEhBA,EADsD,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,QAC5B7J,EAAEC,OAAOyF,WAAWA,WAEpB1F,EAAEC,OAAOyF,WAEzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MAEpCG,EAAWxB,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,IAAI5K,IAAI,GAAG4K,WAEzE,GAAIR,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIyK,EAASvK,OAAQF,IACjC,IAAK,IAAIiB,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAEpCgI,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,GAAGsK,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,8BAG/F,EAAKP,UAAS,iBAAO,CACnBgH,SAAUS,UAEP,CACL,IAAK,IAAIjJ,EAAG,EAAGA,EAAKkJ,EAASvK,OAAQqB,IACnC,IAAK,IAAIsJ,EAAG,EAAGA,EAAKT,EAAYlK,OAAQ2K,IACtC5B,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,GAAI+I,MAAMO,IAAK/K,IAAI,GAAGwD,UAAU,eAGjG,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,SA1SG,EA+SnB6S,gBAAkB,SAACjY,GACjB,IAAMJ,EAAOI,EAAEC,OAAOrB,GAClBkG,EAAa,EAAK9G,MAAM8G,aAE5B,GAAkC,IAA/B,EAAK9G,MAAMoH,SAAS7J,OAOrB,OANAuJ,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ,6BACf0E,QAAMC,gBAAN,KACKJ,KAEJ,EAEP,EAAK1G,SAAS,CAAC8Z,SAAQ,IAGvB,IAFA,IAAIC,EAAiB,EAAKna,MAAMoH,SAC5BgT,EAAS,GACJ/c,EAAI,EAAGA,EAAI8c,EAAe5c,OAAQF,IACzC+c,EAAO5c,KAAK2c,EAAe9c,GAAG0B,QAIhC,IAFA,IAAIsb,EAAiB,EAAKra,MAAM+S,cAC5BuH,EAAS,GACJ1b,EAAK,EAAGA,EAAKyb,EAAe9c,OAAQqB,IAC3C0b,EAAO9c,KAAK6c,EAAezb,GAAIsD,OAKjC,IAAMuQ,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAG3CzF,EAAS,CACX,GAAK2d,EACL,KAAO,GACP,YAAc3H,EACd,aANoB,EAAKzS,MAAM4S,eAAe1Q,MAO9C,YAAcmE,EACd,YAAciU,EACd,KAAO,EAAKta,MAAM4Z,aAAa1X,MAC/B,SAAW,EAAKlC,MAAM+Z,aAAa7X,QAGzB,sBAATN,EACK3B,EAAOC,IAAIqa,SAAS9d,GAEpBwD,EAAOC,IAAIsa,UAAU/d,IAG1BK,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GAEkB,6BAApBA,EAAKnC,KAAKiF,SAA4D,yCAApB9C,EAAKnC,KAAKiF,SAC7DuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,MAGLA,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QACzB0E,QAAMC,gBAAN,KACKJ,KAGb,EAAK1G,SAAS,CAAC8Z,SAAQ,OAExB7Z,OAAM,SAAAC,GACHC,MAAMD,OAlXd,EAAKN,MAAQ,CACXmI,QAAQ,GACR7K,KAAK,GACL4c,SAAQ,GAEV,EAAKla,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IAGd,EAAKxK,MAAMoH,SAAW,GACtB,EAAKpH,MAAMsV,SAAW,GACtB,EAAKtV,MAAMuV,YAAc,GACzB,EAAKvV,MAAMyS,gBAAkBxS,EAAO/C,YACpC,EAAK8C,MAAMwV,oBAAsBvV,EAAOd,YACxC,EAAKa,MAAMgK,UAAY,GACvB,EAAKhK,MAAMqG,cAAgB,GAC3B,EAAKrG,MAAM2S,WAAa,GACxB,EAAK3S,MAAM4S,eAAiB,GAC5B,EAAK5S,MAAM6S,UAAY,GACvB,EAAK7S,MAAM+S,cAAgB,GAC3B,EAAK/S,MAAM8S,kBAAoB,GAC/B,EAAK9S,MAAMgN,iBAAmB,OAC9B,EAAKhN,MAAMmT,gBAAkB,OAC7B,EAAKnT,MAAMqT,aAAe,CAAC,CACzBjL,UAAW,MACXC,KAAM,KACNvG,QAAQ,GAEV,CACEsG,UAAW,SACXC,KAAM,WACNE,QAAQ,eACR3C,MAAM,EACL4C,YAAa,CACZC,MAAM,QACNiN,cAAe,OACf3B,OAAO,YAGX,CACE1L,KAAM,OACND,UAAW,OACXG,QAAQ,eACRC,YAAa,CACXC,MAAM,QACNiN,cAAe,SAGnB,CACErN,KAAM,WACND,UAAW,WACXI,YAAa,CACXC,MAAM,QACNiN,cAAe,UAGnB,EAAK1V,MAAMya,SAAW,CAAC,CACrBvX,MAAO,aACPhB,MAAO,MAET,CACEgB,MAAO,aACPhB,MAAO,OAET,EAAKlC,MAAM0a,aAAe,CAAC,CACzBxX,MAAO,aACPhB,MAAO,QAET,CACEgB,MAAO,aACPhB,MAAO,SAGT,EAAKlC,MAAM4Z,aAAe,CAAE1W,MAAO,aAAWhB,MAAO,MACrD,EAAKlC,MAAM+Z,aAAe,CAAE7W,MAAO,aAAchB,MAAO,QACxD,EAAKlC,MAAMwZ,kBAAoB,GAC/B,EAAKxZ,MAAMyZ,gBAAkB,GAtFZ,E,uEA0FjB,IAAIhP,EAAW,IAAIC,KAGnB,OAFWD,EAASE,cAAgB,KAAOF,EAASG,WAAW,GAAK,IAAMH,EAASP,Y,0CAKhE,IAAD,OACZhN,EAAcb,KAAK2D,MAAMyS,gBAG/BxS,EAAOC,IAAI2K,SAAS3N,GAEnBJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAE4J,UAAW1M,S,+BA8QxB,IAAD,OACA6N,EAAY,CAChBC,KAAM,WACNE,eAAe,EACfC,SAAUlP,KAAKgL,eACfmE,YAAanP,KAAKuL,kBAClB6D,kBAAmB,CACjBhD,MAAM,MACNiD,YAAY,QAIVrM,EAAU,CACdyL,QAAQ,EACRkL,UAAW3Z,KAAK2D,MAAM1C,KAAKC,OAC3B0Y,YAAa,KAETnK,EAAmB,kBACvB,yBAAKnL,UAAU,UAAUC,GAAG,UAAUqC,MAAO,CAAC,QAAU,EAAKjD,MAAMgN,mBACjE,kBAAC,IAAD,CAAQpL,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,gBAKIwD,EAAkB,kBACtB,yBAAKtL,UAAU,2BAA2BsC,MAAO,CAAC,QAAU,EAAKjD,MAAMmT,kBAAvE,yBAIK+G,EAAW7d,KAAK2D,MAAhBka,QACL,OAAQ,6BAAK,kBAAC,IAAD,CACXS,OAAQT,EACRU,SAAO,EACPvS,KAAK,+BAGO,yBAAK1H,UAAU,sBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,kCAAf,sBAOF,yBAAKA,UAAU,gCAEb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,qBAAd,aAEF,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,iBACb,0BAAMsC,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,YACE,kBAAC,IAAD,CAAQla,GAAG,OAAOsB,MAAS7F,KAAK2D,MAAM4Z,aAAcva,QAAShD,KAAK2D,MAAMya,SAAU5Y,SAAUxF,KAAKsd,aAAchZ,UAAU,4DAA4DoF,gBAAgB,UAEvM,0BAAM9C,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,aACE,kBAAC,IAAD,CAAQla,GAAG,WAAWsB,MAAO7F,KAAK2D,MAAM+Z,aAAc1a,QAAShD,KAAK2D,MAAM0a,aAAc7Y,SAAUxF,KAAKyd,aAAcnZ,UAAU,4DAA4DoF,gBAAgB,UAE7M,0BAAMpF,UAAU,+DAA+DsF,QAAU5J,KAAK4d,gBAAkBrZ,GAAG,aAAaqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,cAAT,cAC3J,0BAAMD,UAAU,+DAA+DsF,QAAU5J,KAAK4d,gBAAkBrZ,GAAG,oBAAoBqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,qBAAT,wBAGtK,yBAAKD,UAAU,kCACb,yBAAKA,UAAU,sBAAsBsC,MAAO,CAAEwF,MAAO,SACnD,yBAAK9H,UAAU,cACb,yBAAKsC,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,SACA,yBAAKsC,MAAO,CAAC,MAAQ,UACnB,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO7F,KAAK2D,MAAMqG,cAAgBxE,SAAUxF,KAAK+J,cAAe/G,QAAShD,KAAK2D,MAAMgK,UAAWrJ,UAAU,4DAA4DoF,gBAAgB,YAG5M,yBAAK9C,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,UACA,yBAAKsC,MAAO,CAAC,MAAQ,QAAS,aAAe,UAC3C,kBAAC,IAAD,CAAQyO,IAAI,SAAS/P,KAAK,SAASO,MAAO7F,KAAK2D,MAAM4S,eAAiB/Q,SAAUxF,KAAK2W,eAAgB3T,QAAShD,KAAK2D,MAAM2S,WAAYhS,UAAU,4DAA4DoF,gBAAgB,WAC3N,0BAAM9C,MAAO,CAAC8I,MAAO,QAAQ+O,WAAW,SAAUze,KAAK2D,MAAMyZ,wBAyB/E,yBAAK7Y,GAAG,UAAUD,UAAU,6BAA6BsC,MAAO,CAAC,QAAU,SACzE,kBAAC,IAAD,CACAiJ,SAAS,MACT5O,KAAMjB,KAAK2D,MAAM1C,KACjB6K,QAAS9L,KAAK2D,MAAMmI,QACpBxH,UAAU,gBAEX,SAAAZ,GAAK,OACA,yBAAMa,GAAG,cAAcqC,MAAO,CAAC,QAAU,SACvC,yBAAKtC,UAAU,IACe,IAA3B,EAAKX,MAAM1C,KAAKC,OACjB,kBAAC,qBAAD,CAAoBkP,WAAYC,IAAkBrN,KAC/C,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,sBAAsBC,GAAG,uBACtC,kBAAC,IAAD,eACAuK,UAAYA,EACZsL,YAAU,GACJ1W,EAAM8M,UACND,EAJN,CAKErE,QAAQ,gBACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,OAIjC,kBAACV,EAAD,MACH,kBAACH,EAAD,iB,GA1fchL,aAsgBzByY,Q,i0BCvgBTwB,E,YACJ,WAAYhb,GAAQ,IAAD,8BACjB,4CAAMA,KA0HRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,mBAAgC2B,EAAcnE,OAC9C,IAAIhF,EAAc,EAAK8C,MAAMyS,gBACvB3U,EAAUuI,EAAcnE,MAC5BjC,EAAOC,IAAIwS,eAAexV,EAAYY,GACrChB,MACC,SAAAQ,GACA,EAAK8C,SAAS,CAAEuS,WAAYrV,OAE9B,EAAK8C,SAAS,CAAEwS,eAAgB,KAChC,EAAKxS,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,KACrB,EAAK8C,SAAS,CAAEoZ,kBAAmB,KACnC,EAAKpZ,SAAS,CAAEqZ,gBAAiB,MA1IlB,EA4InBzG,eAAiB,SAAAJ,GACf,EAAKxS,SAAS,CAAEwS,mBAChBnO,QAAQC,IAAR,mBAAgCkO,GAChC,IAAMK,EAAmBL,EAAe1Q,MACxC,EAAK9B,SAAS,CAACqZ,gBAAgB,sBAAsB7G,EAAe6G,kBACpExZ,EAAOC,IAAIgT,aAAaD,GACvBnW,MAAK,SAAA0C,GAAQ,OAAIA,KACjB1C,MACC,SAAAQ,GAEE,IADA,IAAI0d,EAAgB,GACX3d,EAAI,EAAGA,EAAIC,EAAKC,OAAQF,IAC/B2d,EAAcxd,KAAK,CAAC,MAAQF,EAAKD,GAAL,GAAc,MAAQC,EAAKD,GAAL,MAAiB,QAAUC,EAAKD,GAAL,QAE/E,EAAK+C,SAAS,CAAEvC,UAAWmd,OAE/B,EAAK5a,SAAS,CAAE2S,cAAe,KAC/B,EAAK3S,SAAS,CAAC0S,kBAAmB,KAClC,EAAK1S,SAAS,CAAC2S,cAAe,KAC9B,EAAK3S,SAAS,CAAC9C,KAAM,KACrB,EAAK8C,SAAS,CAAEoZ,kBAAkB,KAElC,EAAKpZ,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,iBAAiBI,OACnBJ,IAAE,qBAAqBI,OACvBJ,IAAE,sBAAsBK,OACxB,IAAIyM,EAAW,EAAKpT,MAAMqT,aAC1B,EAAKjT,SAAS,CAAC+H,QAASiL,IACxB,IAAMX,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3CoR,EAAYV,EAAe1Q,MAC/B,EAAK9B,SAAS,CAACmT,iBAAgB,IAE/B,EAAKnT,SAAS,CAAEsZ,eAAgB,KAEhCzZ,EAAOC,IAAIsT,qBAAqBf,EAAgBa,EAASjN,EAHrC,IAInBvJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,sBAAsBI,OACxB,EAAKtG,SAAS,CAAC9C,KAAMuT,QAvLR,EA2LnB8I,aAAe,SAAAC,GACb,EAAKxZ,SAAS,CAAEwZ,iBAChBnV,QAAQC,IAAR,mBAAgCkV,GAChC,IAAM5U,EAAW4U,EAAa1X,MAExB2X,EAAgB,CAAE3W,MADP0W,EAAa1W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAACwZ,aAAcC,KAjMZ,EAmMnBC,aAAe,SAAAC,GACb,EAAK3Z,SAAS,CAAE2Z,iBAChBtV,QAAQC,IAAR,mBAAgCqV,GAChC,IAAM/U,EAAW+U,EAAa7X,MAExB8X,EAAgB,CAAE9W,MADP6W,EAAa7W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAAC2Z,aAAcC,KAzMZ,EA2MnBiB,kBAAoB,SAAAzB,GAClB,IAAMpB,EAAS8C,EAAQ,KACvB,EAAK9a,SAAS,CAAEoZ,sBAChB,IAAI2B,EAAU3B,EAAkB2B,QAC5BzB,EAAiB,EAAK1Z,MAAMyZ,gBAEhC0B,EAAwB,GAAbA,EAAU,GACrB,IAAIC,EAAahD,EAFjBsB,EAAiBA,EAAepY,QAAQ,sBAAuB,IAExB,cACvC8Z,EAAYhD,EAAOgD,GAAWC,IAAIF,EAAS,OAAO9C,OAAO,cACzD,EAAKjY,SAAS,CAAEsZ,eAAgB,qBAAuB0B,KApNtC,EAuNnBE,iBAAmB,SAAAC,GACjB,EAAKnb,SAAS,CAAEmb,qBAChB9W,QAAQC,IAAR,6BAA0C6W,GAC1C,IAAMvW,EAAWuW,EAAiBrZ,MAE5BsZ,EAAoB,CAAEtY,MADXqY,EAAiBrY,MACWhB,MAAO8C,GACpD,EAAK5E,SAAS,CAACmb,iBAAkBC,KA7NhB,EA+NnBnU,eAAiB,SAACC,EAAKC,EAAUC,EAAUxF,GACzC,IAAI4J,EAAc,GACsC,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAC1CD,EAAc5J,EAAEC,OAAOyF,WAAWA,YAEoB,UAArDpB,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAE1CD,EAAc5J,EAAEC,OAAOyF,YAGzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MACxC,QAAmBZ,IAAhBU,EACD,GAAIF,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIoK,EAAYlK,OAAQF,IAClCiJ,IAAEsF,EAAYjE,MAAMtK,IAAIF,IAAI,GAAGwD,UAAU,8BAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAS,GAAD,mBAAM,EAAKpH,MAAMoH,UAAjB,CAA2BE,YAEhC,CACL,IAAK,IAAIhJ,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAElCgI,IAAEsF,EAAYjE,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,eAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,EAAKpH,MAAMoH,SAAS0F,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,WAxPrC,EA6PnBM,kBAAoB,SAACL,EAAUM,EAAM7F,GAEnC,IAAI4J,EAAc,GAEhBA,EADsD,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,QAC5B7J,EAAEC,OAAOyF,WAAWA,WAEpB1F,EAAEC,OAAOyF,WAEzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MAEpCG,EAAWxB,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,IAAI5K,IAAI,GAAG4K,WAEzE,GAAIR,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIyK,EAASvK,OAAQF,IACjC,IAAK,IAAIiB,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAEpCgI,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,GAAGsK,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,8BAG/F,EAAKP,UAAS,iBAAO,CACnBgH,SAAUS,UAEP,CACL,IAAK,IAAIjJ,EAAG,EAAGA,EAAKkJ,EAASvK,OAAQqB,IACnC,IAAK,IAAIsJ,EAAG,EAAGA,EAAKT,EAAYlK,OAAQ2K,IACtC5B,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,GAAI+I,MAAMO,IAAK/K,IAAI,GAAGwD,UAAU,eAGjG,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,SA1RG,EA+RnB6S,gBAAkB,SAACjY,GACjB,IAAMJ,EAAOI,EAAEC,OAAOrB,GAClBkG,EAAa,EAAK9G,MAAM8G,aAC5B,GAAkC,IAA/B,EAAK9G,MAAMoH,SAAS7J,OAOrB,OANAuJ,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ,6BACf0E,QAAMC,gBAAN,KACKJ,KAEJ,EAEP,EAAK1G,SAAS,CAAC8Z,SAAQ,IAGvB,IAFA,IAAIC,EAAiB,EAAKna,MAAMoH,SAC5BgT,EAAS,GACJ/c,EAAI,EAAGA,EAAI8c,EAAe5c,OAAQF,IACzC+c,EAAO5c,KAAK2c,EAAe9c,GAAG0B,QAEhC,IAAMub,EAAS,EAAKta,MAAMwZ,kBAAkBtX,MACtCuQ,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3C0Q,EAAkB,EAAK5S,MAAM4S,eAAe1Q,MAC5CzF,EAAS,CACX,GAAK2d,EACL,YAAcE,EACd,SAAW,EAAKta,MAAM+Z,aAAa7X,MACnC,YAAcuQ,EACd,aAAeG,EACf,YAAcvM,EACd,KAAO,EAAKrG,MAAM4Z,aAAa1X,MAC/B,KAAON,GAET3B,EAAOC,IAAIub,gBAAgBhf,GACxBK,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GACFA,EAAKnC,KAAKiF,UAAUX,EAAK,uBAC1BkF,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,MAGLA,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QACzB0E,QAAMC,gBAAN,KACKJ,KAGb,EAAK1G,SAAS,CAAC8Z,SAAQ,OAExB7Z,OAAM,SAAAC,GACHC,MAAMD,OAlVd,EAAKN,MAAQ,CACXmI,QAAQ,GACR7K,KAAK,GACL4c,SAAQ,GAEV,EAAKla,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IAGd,EAAKxK,MAAMoH,SAAW,GACtB,EAAKpH,MAAMsV,SAAW,GACtB,EAAKtV,MAAMuV,YAAc,GACzB,EAAKvV,MAAMyS,gBAAkBxS,EAAO/C,YACpC,EAAK8C,MAAMwV,oBAAsBvV,EAAOd,YACxC,EAAKa,MAAMgK,UAAY,GACvB,EAAKhK,MAAMqG,cAAgB,GAC3B,EAAKrG,MAAM2S,WAAa,GACxB,EAAK3S,MAAM4S,eAAiB,GAC5B,EAAK5S,MAAMnC,UAAY,GACvB,EAAKmC,MAAM+S,cAAgB,GAC3B,EAAK/S,MAAM8S,kBAAoB,GAC/B,EAAK9S,MAAMgN,iBAAmB,OAC9B,EAAKhN,MAAMmT,gBAAkB,OAC7B,EAAKnT,MAAMqT,aAAe,CAAC,CACzBjL,UAAW,MACXC,KAAM,KACNvG,QAAQ,GAEV,CACEsG,UAAW,SACXC,KAAM,WACNE,QAAQ,eACR3C,MAAM,EACL4C,YAAa,CACZC,MAAM,QACNiN,cAAe,OACf3B,OAAO,YAGX,CACE1L,KAAM,OACND,UAAW,OACXG,QAAQ,eACRC,YAAa,CACXC,MAAM,QACNiN,cAAe,SAGnB,CACErN,KAAM,WACND,UAAW,WACXI,YAAa,CACXC,MAAM,QACNiN,cAAe,UAGnB,EAAK1V,MAAM0b,SAAW,CAAC,CACrBxY,MAAO,aACPhB,MAAO,eAET,CACEgB,MAAO,mBACPhB,MAAO,gBAET,CACEgB,MAAO,2BACPhB,MAAO,gBAET,EAAKlC,MAAMya,SAAW,CAAC,CACrBvX,MAAO,aACPhB,MAAO,MAET,CACEgB,MAAO,aACPhB,MAAO,OAET,EAAKlC,MAAM0a,aAAe,CAAC,CACzBxX,MAAO,aACPhB,MAAO,QAET,CACEgB,MAAO,aACPhB,MAAO,SAGT,EAAKlC,MAAM4Z,aAAe,CAAE1W,MAAO,aAAWhB,MAAO,MACrD,EAAKlC,MAAM+Z,aAAe,CAAE7W,MAAO,aAAchB,MAAO,QACxD,EAAKlC,MAAMub,iBAAmB,CAAErY,MAAO,aAAchB,MAAO,eAC5D,EAAKlC,MAAMwZ,kBAAoB,GAC/B,EAAKxZ,MAAMyZ,gBAAkB,GAC7B,EAAKzZ,MAAM0Z,eAAiB,GApGX,E,uEAwGjB,IAAIjP,EAAW,IAAIC,KAGnB,OAFWD,EAASE,cAAgB,KAAOF,EAASG,WAAW,GAAK,IAAMH,EAASP,Y,0CAIhE,IAAD,OACZhN,EAAcb,KAAK2D,MAAMyS,gBAG/BxS,EAAOC,IAAI2K,SAAS3N,GAEnBJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAE4J,UAAW1M,S,+BAiOxB,IAAD,OACA6N,EAAY,CAChBC,KAAM,WACNE,eAAe,EACfC,SAAUlP,KAAKgL,eACfmE,YAAanP,KAAKuL,kBAClB6D,kBAAmB,CACjBhD,MAAM,MACNiD,YAAY,QAIVrM,EAAU,CACdyL,QAAQ,EACRkL,UAAW3Z,KAAK2D,MAAM1C,KAAKC,OAC3B0Y,YAAa,KAETnK,EAAmB,kBACvB,yBAAKnL,UAAU,UAAUC,GAAG,UAAUqC,MAAO,CAAC,QAAU,EAAKjD,MAAMgN,mBACjE,kBAAC,IAAD,CAAQpL,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,gBAKIwD,EAAkB,kBACtB,yBAAKtL,UAAU,2BAA2BsC,MAAO,CAAC,QAAU,EAAKjD,MAAMmT,kBAAvE,yBAIK+G,EAAW7d,KAAK2D,MAAhBka,QACL,OAAQ,6BAAK,kBAAC,IAAD,CACXS,OAAQT,EACRU,SAAO,EACPvS,KAAK,+BAGO,yBAAK1H,UAAU,sBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,kCAAf,iBAOF,yBAAKA,UAAU,gCAEb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,qBAAd,aAGF,yBAAKA,UAAU,kCACf,yBAAKA,UAAU,iBACX,0BAAMsC,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,YACE,kBAAC,IAAD,CAAQla,GAAG,OAAOsB,MAAS7F,KAAK2D,MAAM4Z,aAAcva,QAAShD,KAAK2D,MAAMya,SAAU5Y,SAAUxF,KAAKsd,aAAchZ,UAAU,4DAA4DoF,gBAAgB,UAEvM,0BAAM9C,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,aACE,kBAAC,IAAD,CAAQla,GAAG,WAAWsB,MAAO7F,KAAK2D,MAAM+Z,aAAc1a,QAAShD,KAAK2D,MAAM0a,aAAc7Y,SAAUxF,KAAKyd,aAAcnZ,UAAU,4DAA4DoF,gBAAgB,UAE7M,0BAAMpF,UAAU,+DAA+DsF,QAAU5J,KAAK4d,gBAAkBrZ,GAAG,eAAeqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,gBAAT,cAC7J,0BAAMD,UAAU,+DAA+DsF,QAAU5J,KAAK4d,gBAAkBrZ,GAAG,cAAcqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,eAAT,uBAE9J,yBAAKD,UAAU,sBAAsBsC,MAAO,CAAEwF,MAAO,SACnD,yBAAK9H,UAAU,cACb,yBAAKsC,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,SACA,yBAAKsC,MAAO,CAAC,MAAQ,QAAS,aAAe,UAC3C,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO7F,KAAK2D,MAAMqG,cAAgBxE,SAAUxF,KAAK+J,cAAe/G,QAAShD,KAAK2D,MAAMgK,UAAWrJ,UAAU,4DAA4DoF,gBAAgB,YAG5M,yBAAK9C,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,UACA,yBAAKsC,MAAO,CAAC,MAAQ,QAAS,aAAe,UAC3C,kBAAC,IAAD,CAAQyO,IAAI,SAAS/P,KAAK,SAASO,MAAO7F,KAAK2D,MAAM4S,eAAiB/Q,SAAUxF,KAAK2W,eAAgB3T,QAAShD,KAAK2D,MAAM2S,WAAYhS,UAAU,4DAA4DoF,gBAAgB,WAC3N,0BAAM9C,MAAO,CAAC8I,MAAO,QAAQ+O,WAAW,SAAUze,KAAK2D,MAAMyZ,mBAGjE,yBAAKxW,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,YACA,yBAAKsC,MAAO,CAAC,MAAQ,QAAS,aAAe,UAC3C,kBAAC,IAAD,CAAQrC,GAAG,YAAYsB,MAAO7F,KAAK2D,MAAMwZ,kBAAoB3X,SAAUxF,KAAK4e,kBAAmB5b,QAAShD,KAAK2D,MAAMnC,UAAW8C,UAAU,4DAA4DoF,gBAAgB,eACpN,0BAAM9C,MAAO,CAAC8I,MAAO,QAAQ+O,WAAW,SAAUze,KAAK2D,MAAM0Z,uBAS/E,yBAAK9Y,GAAG,eAAeD,UAAU,6BAA6BsC,MAAO,CAAC,QAAU,SAC9E,kBAAC,IAAD,CACAiJ,SAAS,MACT5O,KAAMjB,KAAK2D,MAAM1C,KACjB6K,QAAS9L,KAAK2D,MAAMmI,QACpBxH,UAAU,gBAEX,SAAAZ,GAAK,OACA,yBAAMa,GAAG,mBAAmBqC,MAAO,CAAC,QAAU,SAC5C,yBAAKtC,UAAU,IACe,IAA3B,EAAKX,MAAM1C,KAAKC,OACjB,kBAAC,qBAAD,CAAoBkP,WAAYC,IAAkBrN,KAC/C,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,sBAAsBC,GAAG,qBACtC,kBAAC,IAAD,eACAuK,UAAYA,EACZsL,YAAU,GACJ1W,EAAM8M,UACND,EAJN,CAKErE,QAAQ,gBACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,OAIjC,kBAACV,EAAD,MACH,kBAACH,EAAD,iB,GAhdQhL,aA4dnBia,Q,i0BC3dTY,E,YACJ,WAAY5b,GAAQ,IAAD,8BACjB,4CAAMA,KAyGRqG,cAAgB,SAAAC,GACd,EAAKjG,SAAS,CAAEiG,kBAChB5B,QAAQC,IAAR,mBAAgC2B,EAAcnE,OAC9C,IAAIhF,EAAc,EAAK8C,MAAMyS,gBACvB3U,EAAUuI,EAAcnE,MAC5BjC,EAAOC,IAAIwS,eAAexV,EAAYY,GACrChB,MACC,SAAAQ,GACA,EAAK8C,SAAS,CAAEuS,WAAYrV,OAE9B,EAAK8C,SAAS,CAAEwS,eAAgB,KAChC,EAAKxS,SAAS,CAAC9C,KAAM,KACrB,EAAK8C,SAAS,CAAEqZ,gBAAiB,MAtHlB,EAwHnBzG,eAAiB,SAAAJ,GACf,EAAKxS,SAAS,CAAEwS,mBAChBnO,QAAQC,IAAR,mBAAgCkO,GAChC,EAAKxS,SAAS,CAACqZ,gBAAgB,sBAAsB7G,EAAe6G,kBACpE,EAAKrZ,SAAS,CAAC9C,KAAM,KAErB,EAAK8C,SAAS,CAAC4M,iBAAiB,UAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,SAC/B7M,IAAE,oBAAoBI,OACtBJ,IAAE,wBAAwBI,OAC1BJ,IAAE,yBAAyBK,OAC3B,IAAIyM,EAAW,EAAKpT,MAAMqT,aAC1B,EAAKjT,SAAS,CAAC+H,QAASiL,IACxB,IAAMX,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3CoR,EAAYV,EAAe1Q,MAG/BjC,EAAOC,IAAIsT,qBAAqBf,EAAgBa,EAASjN,EAFrC,IAGnBvJ,MAAK,SAAAC,GAAG,OAAIA,KACZD,MACC,SAAA+T,GACEpM,QAAQC,IAAI,gBACZ,EAAKtE,SAAS,CAAC4M,iBAAiB,SAChC,EAAK5M,SAAS,CAAC+S,gBAAgB,UAC/B7M,IAAE,yBAAyBI,OAC3B,EAAKtG,SAAS,CAAC9C,KAAMuT,QAlJR,EAuJnB8I,aAAe,SAAAC,GACb,EAAKxZ,SAAS,CAAEwZ,iBAChBnV,QAAQC,IAAR,mBAAgCkV,GAChC,IAAM5U,EAAW4U,EAAa1X,MAExB2X,EAAgB,CAAE3W,MADP0W,EAAa1W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAACwZ,aAAcC,KA7JZ,EA+JnBC,aAAe,SAAAC,GACb,EAAK3Z,SAAS,CAAE2Z,iBAChBtV,QAAQC,IAAR,mBAAgCqV,GAChC,IAAM/U,EAAW+U,EAAa7X,MAExB8X,EAAgB,CAAE9W,MADP6W,EAAa7W,MACWhB,MAAO8C,GAChD,EAAK5E,SAAS,CAAC2Z,aAAcC,KArKZ,EAuKnB3S,eAAiB,SAACC,EAAKC,EAAUC,EAAUxF,GACzC,IAAI4J,EAAc,GACsC,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAC1CD,EAAc5J,EAAEC,OAAOyF,WAAWA,YAEoB,UAArDpB,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,UAE1CD,EAAc5J,EAAEC,OAAOyF,YAGzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MACxC,QAAmBZ,IAAhBU,EACD,GAAIF,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIoK,EAAYlK,OAAQF,IAClCiJ,IAAEsF,EAAYjE,MAAMtK,IAAIF,IAAI,GAAGwD,UAAU,8BAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAS,GAAD,mBAAM,EAAKpH,MAAMoH,UAAjB,CAA2BE,YAEhC,CACL,IAAK,IAAIhJ,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAElCgI,IAAEsF,EAAYjE,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,eAE7C,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,EAAKpH,MAAMoH,SAAS0F,QAAO,SAAAiF,GAAC,OAAIA,IAAMzK,WAhMrC,EAqMnBM,kBAAoB,SAACL,EAAUM,EAAM7F,GAEnC,IAAI4J,EAAc,GAEhBA,EADsD,OAArDtF,IAAEtE,EAAEC,OAAOyF,WAAWA,YAAYvK,IAAI,GAAG0O,QAC5B7J,EAAEC,OAAOyF,WAAWA,WAEpB1F,EAAEC,OAAOyF,WAEzB,IAAID,EAAcnB,IAAEsF,GAAazO,IAAI,GAAGwK,MAEpCG,EAAWxB,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,IAAI5K,IAAI,GAAG4K,WAEzE,GAAIR,EAAU,CACZ,IAAK,IAAIlK,EAAE,EAAGA,EAAIyK,EAASvK,OAAQF,IACjC,IAAK,IAAIiB,EAAE,EAAGA,EAAImJ,EAAYlK,OAAQe,IAEpCgI,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAW1K,GAAGsK,MAAMrJ,IAAInB,IAAI,GAAGwD,UAAU,8BAG/F,EAAKP,UAAS,iBAAO,CACnBgH,SAAUS,UAEP,CACL,IAAK,IAAIjJ,EAAG,EAAGA,EAAKkJ,EAASvK,OAAQqB,IACnC,IAAK,IAAIsJ,EAAG,EAAGA,EAAKT,EAAYlK,OAAQ2K,IACtC5B,IAAEsF,EAAYlE,WAAWA,WAAWK,WAAW,GAAGA,WAAWnJ,GAAI+I,MAAMO,IAAK/K,IAAI,GAAGwD,UAAU,eAGjG,EAAKP,UAAS,iBAAO,CACnBgH,SAAU,SAlOG,EAuOnB6S,gBAAkB,SAACjY,GAEjB,IAAI8E,EAAa,EAAK9G,MAAM8G,aAG5B,GAAkC,IAA/B,EAAK9G,MAAMoH,SAAS7J,OAOrB,OANAuJ,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ,6BACf0E,QAAMC,gBAAN,KACKJ,KAEJ,EAEP,EAAK1G,SAAS,CAAC8Z,SAAQ,IAGvB,IAFA,IAAIC,EAAiB,EAAKna,MAAMoH,SAC5BgT,EAAS,GACJ/c,EAAI,EAAGA,EAAI8c,EAAe5c,OAAQF,IACzC+c,EAAO5c,KAAK2c,EAAe9c,GAAG0B,QAGhC,IAAM0T,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAG3CzF,EAAS,CACX,GAAK2d,EACL,YAAc3H,EACd,aALoB,EAAKzS,MAAM4S,eAAe1Q,MAM9C,YAAcmE,EACd,KAAO,EAAKrG,MAAM4Z,aAAa1X,MAC/B,SAAW,EAAKlC,MAAM+Z,aAAa7X,OAGrCjC,EAAOC,IAAI0b,aAAanf,GACvBK,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GAEkB,6BAApBA,EAAKnC,KAAKiF,SACXuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,MAGLA,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QACzB0E,QAAMC,gBAAN,KACKJ,KAGb,EAAK1G,SAAS,CAAC8Z,SAAQ,OAExB7Z,OAAM,SAAAC,GACHC,MAAMD,OA/RK,EAoSnBsb,aAAe,SAAC5Z,GACd,IAAI8E,EAAa,EAAK9G,MAAM8G,aACtB2L,EAAkB,EAAKzS,MAAMyS,gBAC7BpM,EAAgB,EAAKrG,MAAMqG,cAAcnE,MAC3C0Q,EAAkB,EAAK5S,MAAM4S,eAAe1Q,MAChD,QAAsB6E,IAAnB6L,EAOD,OANA9L,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ,2BACf0E,QAAMC,gBAAN,KACKJ,KAEJ,EAGP,EAAK1G,SAAS,CAAC8Z,SAAQ,IACvB,IAAIzd,EAAS,CACX,YAAcgW,EACd,aAAeG,EACf,YAAcvM,EACd,KAAO,EAAKrG,MAAM4Z,aAAa1X,MAC/B,SAAW,EAAKlC,MAAM+Z,aAAa7X,OAGrCjC,EAAOC,IAAI0b,aAAanf,GACvBK,MAAK,SAAAC,GAAG,OAAIA,KACZD,MAAK,SAAC2C,GAEkB,6BAApBA,EAAKnC,KAAKiF,SACXuE,EAAalF,KAAK,UAClBkF,EAAaE,MAAM,UACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QAC/B0E,QAAMC,gBAAN,KACKJ,MAGLA,EAAalF,KAAK,SAClBkF,EAAaE,MAAM,QACnBF,EAAavE,QAAQ9C,EAAKnC,KAAKiF,QACzB0E,QAAMC,gBAAN,KACKJ,KAGb,EAAK1G,SAAS,CAAC8Z,SAAQ,OAExB7Z,OAAM,SAAAC,GACHC,MAAMD,OAhVZ,EAAKN,MAAQ,CACXmI,QAAQ,GACR7K,KAAK,GACL4c,SAAQ,GAEV,EAAKla,MAAM8G,aAAe,CACxBE,MAAO,GACPzE,QAAS,GACTX,KAAM,UACNuI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,UAAU,IAGd,EAAKxK,MAAMoH,SAAW,GACtB,EAAKpH,MAAMsV,SAAW,GACtB,EAAKtV,MAAMuV,YAAc,GACzB,EAAKvV,MAAMyS,gBAAkBxS,EAAO/C,YACpC,EAAK8C,MAAMwV,oBAAsBvV,EAAOd,YACxC,EAAKa,MAAMgK,UAAY,GACvB,EAAKhK,MAAMqG,cAAgB,GAC3B,EAAKrG,MAAM2S,WAAa,GACxB,EAAK3S,MAAM4S,eAAiB,GAC5B,EAAK5S,MAAMgN,iBAAmB,OAC9B,EAAKhN,MAAMmT,gBAAkB,OAC7B,EAAKnT,MAAMqT,aAAe,CAAC,CACzBjL,UAAW,MACXC,KAAM,KACNvG,QAAQ,GAEV,CACEsG,UAAW,SACXC,KAAM,WACNE,QAAQ,eACR3C,MAAM,EACL4C,YAAa,CACZC,MAAM,QACNiN,cAAe,OACf3B,OAAO,YAGX,CACE1L,KAAM,OACND,UAAW,OACXG,QAAQ,eACRC,YAAa,CACXC,MAAM,QACNiN,cAAe,SAGnB,CACErN,KAAM,WACND,UAAW,WACXI,YAAa,CACXC,MAAM,QACNiN,cAAe,UAGnB,EAAK1V,MAAMya,SAAW,CAAC,CACrBvX,MAAO,aACPhB,MAAO,MAET,CACEgB,MAAO,aACPhB,MAAO,OAET,EAAKlC,MAAM0a,aAAe,CAAC,CACzBxX,MAAO,aACPhB,MAAO,QAET,CACEgB,MAAO,aACPhB,MAAO,SAGT,EAAKlC,MAAM4Z,aAAe,CAAE1W,MAAO,aAAWhB,MAAO,MACrD,EAAKlC,MAAM+Z,aAAe,CAAE7W,MAAO,aAAchB,MAAO,QACxD,EAAKlC,MAAMyZ,gBAAkB,GAlFZ,E,uEAsFjB,IAAIhP,EAAW,IAAIC,KAGnB,OAFWD,EAASE,cAAgB,KAAOF,EAASG,WAAW,GAAK,IAAMH,EAASP,Y,0CAKhE,IAAD,OACZhN,EAAcb,KAAK2D,MAAMyS,gBAG/BxS,EAAOC,IAAI2K,SAAS3N,GAEnBJ,MACC,SAAAQ,GACEA,EAAKsI,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAE3D,MAAQ4D,EAAE5D,SAErB,EAAK9B,SAAS,CAAE4J,UAAW1M,S,+BAgPxB,IAAD,OACA6N,EAAY,CAChBC,KAAM,WACNE,eAAe,EACfC,SAAUlP,KAAKgL,eACfmE,YAAanP,KAAKuL,kBAClB6D,kBAAmB,CACjBhD,MAAM,MACNiD,YAAY,QAIVrM,EAAU,CACdyL,QAAQ,EACRkL,UAAW3Z,KAAK2D,MAAM1C,KAAKC,OAC3B0Y,YAAa,KAETnK,EAAmB,kBACvB,yBAAKnL,UAAU,UAAUC,GAAG,UAAUqC,MAAO,CAAC,QAAU,EAAKjD,MAAMgN,mBACjE,kBAAC,IAAD,CAAQpL,KAAK,OAAOmK,MAAM,UAAUC,OAAQ,IAAKvD,MAAO,MAD1D,gBAKIwD,EAAkB,kBACtB,yBAAKtL,UAAU,2BAA2BsC,MAAO,CAAC,QAAU,EAAKjD,MAAMmT,kBAAvE,yBAIK+G,EAAW7d,KAAK2D,MAAhBka,QACL,OAAS,6BAAK,kBAAC,IAAD,CACdS,OAAQT,EACRU,SAAO,EACPvS,KAAK,+BAGS,yBAAK1H,UAAU,sBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,kCAAf,kBAOF,yBAAKA,UAAU,gCAEb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,qBAAd,aAEF,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,iBACb,0BAAMsC,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,YACE,kBAAC,IAAD,CAAQla,GAAG,OAAOsB,MAAS7F,KAAK2D,MAAM4Z,aAAcva,QAAShD,KAAK2D,MAAMya,SAAU5Y,SAAUxF,KAAKsd,aAAchZ,UAAU,4DAA4DoF,gBAAgB,UAEvM,0BAAM9C,MAAO,CAAC,MAAQ,QAASqT,aAAc,OAAQuE,WAAY,QACjE,0BAAM5X,MAAO,CAAC6X,WAAW,SAAzB,aACE,kBAAC,IAAD,CAAQla,GAAG,WAAWsB,MAAO7F,KAAK2D,MAAM+Z,aAAc1a,QAAShD,KAAK2D,MAAM0a,aAAc7Y,SAAUxF,KAAKyd,aAAcnZ,UAAU,4DAA4DoF,gBAAgB,UAE7M,0BAAMpF,UAAU,+DAA+DsF,QAAU5J,KAAK4d,gBAAkBrZ,GAAG,aAAaqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,cAAT,cAC3J,0BAAMD,UAAU,+DAA+DsF,QAAU5J,KAAKuf,aAAehb,GAAG,iBAAiBqC,MAAO,CAACiI,UAAU,SAAS,0BAAMtK,GAAG,kBAAT,uBAGhK,yBAAKD,UAAU,kCACb,yBAAKA,UAAU,sBAAsBsC,MAAO,CAAEwF,MAAO,SACnD,yBAAK9H,UAAU,cACb,yBAAKsC,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UAC1C,wBAAIrL,UAAU,qBAAd,SACA,yBAAKsC,MAAO,CAAC,MAAQ,UACnB,kBAAC,IAAD,CAAQrC,GAAG,QAAQsB,MAAO7F,KAAK2D,MAAMqG,cAAgBxE,SAAUxF,KAAK+J,cAAe/G,QAAShD,KAAK2D,MAAMgK,UAAWrJ,UAAU,4DAA4DoF,gBAAgB,YAG5M,yBAAKpF,UAAU,GAAGsC,MAAO,CAAEqT,aAAc,OAAQtK,OAAQ,UACvD,wBAAIrL,UAAU,qBAAd,UACA,yBAAKsC,MAAO,CAAC,MAAQ,QAAS,aAAe,UAC3C,kBAAC,IAAD,CAAQyO,IAAI,SAAS/P,KAAK,SAASO,MAAO7F,KAAK2D,MAAM4S,eAAiB/Q,SAAUxF,KAAK2W,eAAgB3T,QAAShD,KAAK2D,MAAM2S,WAAYhS,UAAU,4DAA4DoF,gBAAgB,WAC3N,0BAAM9C,MAAO,CAAC8I,MAAO,QAAQ+O,WAAW,SAAUze,KAAK2D,MAAMyZ,wBAQ/E,yBAAK7Y,GAAG,kBAAkBD,UAAU,6BAA6BsC,MAAO,CAAC,QAAU,SACjF,kBAAC,IAAD,CACAiJ,SAAS,MACT5O,KAAMjB,KAAK2D,MAAM1C,KACjB6K,QAAS9L,KAAK2D,MAAMmI,QACpBxH,UAAU,gBAEX,SAAAZ,GAAK,OACA,yBAAMa,GAAG,sBAAsBqC,MAAO,CAAC,QAAU,SAC/C,yBAAKtC,UAAU,IACe,IAA3B,EAAKX,MAAM1C,KAAKC,OACjB,kBAAC,qBAAD,CAAoBkP,WAAYC,IAAkBrN,KAC/C,gBAAGsN,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACC,yBAAKjM,UAAU,sBAAsBC,GAAG,wBACtC,kBAAC,IAAD,eACAuK,UAAYA,EACZsL,YAAU,GACJ1W,EAAM8M,UACND,EAJN,CAKErE,QAAQ,gBACRyE,iBAAmB,kBAAM,kBAACf,EAAD,UAE3B,kBAAC,2BAA6BU,OAIjC,kBAACV,EAAD,MACH,kBAACH,EAAD,iB,GAvcShL,aAmdpB6a,Q,mMCvdKE,QACW,cAA7BpZ,OAAOC,SAASoZ,UAEe,UAA7BrZ,OAAOC,SAASoZ,UAEhBrZ,OAAOC,SAASoZ,SAASC,MACvB,2D,aCXNC,IAAShY,OACL,kBAAC,IAAD,KAAe,kBAACQ,EAAA,EAAD,OACGyX,SAASC,eAAe,SDwHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvf,MAAK,SAAAwf,GACjCA,EAAaC,iB,+UElIEpb,E,WAEjB,WAAY/E,GAAS,oBACjBC,KAAKD,OAASA,GAAU,gCACxBC,KAAKC,MAAQD,KAAKC,MAAMC,KAAKF,MAC7BA,KAAK+F,MAAQ/F,KAAK+F,MAAM7F,KAAKF,MAC7BA,KAAKgJ,WAAahJ,KAAKgJ,WAAW9I,KAAKF,M,uDAEhCgG,GAEP,OAAOhG,KAAKC,MAAL,UAAcD,KAAKD,OAAnB,uBAAgD,CACnDoC,OAAQ,OACRge,KAAM5f,KAAKC,UAAU,CACjBwF,YAELvF,MAAK,SAAAC,GACJ,OAAOC,QAAQC,QAAQF,Q,4BAWzBsF,EAAOC,GAAW,IAAD,OAEnB,OAAOjG,KAAKC,MAAL,UAAcD,KAAKD,OAAnB,kBAA2C,CAC9CoC,OAAQ,OACRge,KAAM5f,KAAKC,UAAU,CACjBwF,QACAC,eAELxF,MAAK,SAAAC,GACJ,GAAGA,EAAI4S,MAAM,CACT,GAAsB,MAAnB5S,EAAIyF,YAGH,OAFA,EAAKia,SAAS1f,EAAI4S,OAClB,EAAK+M,WAAW3f,GACTC,QAAQC,QAAQF,GAIvB,OADA,EAAK2f,WADU,CAACC,UAAW,GAAIta,MAAO,GAAIua,aAAa,GAAIC,aAAc,GAAKzd,aAAa,GAAI0d,cAAc,KAEtG,CAACva,QAAS,oBAGzB,GAAGxF,EAAIwF,QACH,OAAOvF,QAAQ+f,OAAOhgB,EAAIwF,c,iCAOlC,IAAMoN,EAAQtT,KAAK2gB,WACnB,QAASrN,IAAUtT,KAAK4gB,eAAetN,K,qCAG5BA,GACX,IAEI,OADgBuN,IAAOvN,GACXwN,IAAMzS,KAAK0S,MAAQ,IAMnC,MAAO9c,GACH,OAAO,K,+BAIN+c,GACL5Y,QAAQC,IAAI,UAAU2Y,GAEtBre,aAAaC,QAAQ,WAAYoe,K,iCAE1B/f,GAEP0B,aAAaC,QAAQ,YAAa3B,EAAKqf,WACvC3d,aAAaC,QAAQ,QAAS3B,EAAK+E,OACnCrD,aAAaC,QAAQ,eAAgB3B,EAAKkR,aAC1CxP,aAAaC,QAAQ,eAAgB3B,EAAK6B,aAC1CH,aAAaC,QAAQ,eAAgB3B,EAAKkF,aAC1CxD,aAAaC,QAAQ,gBAAiB3B,EAAKuS,gB,iCAI3C,OAAO7Q,aAAaE,QAAQ,c,qCAGjBC,GAEXH,aAAaC,QAAQ,eAAgBE,K,+BAMrCH,aAAase,WAAW,c,mCAMxB,OAAOte,aAAaE,QAAQ,W,6IAI1BjB,EAAKoB,GAEP,IAAMC,EAAU,CACZ,OAAU,mBACV,eAAgB,oBASpB,OAJIjD,KAAK+E,aACL9B,EAAO,cAAoB,UAAYjD,KAAK2gB,YAGzC1gB,MAAM2B,E,yVAAD,EACRqB,WACGD,IAEFvC,KAAKT,KAAKkD,cACVzC,MAAK,SAAA0C,GAAQ,OAAIA,EAASC,c,mCAGtBD,GAET,GAAIA,EAASE,QAAU,KAAOF,EAASE,OAAS,IAC5C,OAAOF,EAEP,IAAIG,EAAQ,IAAIC,MAAMJ,EAASK,YAE/B,MADAF,EAAMH,SAAWA,EACXG,M","file":"static/js/main.514bc46a.chunk.js","sourcesContent":["import axios from \"axios\"\nexport default class ApiService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\n        //this.domain = domain || 'http://local.ybrantcompass.com/taplingua-prod/taplingua-api' // API server domain\n        this.fetch = this.fetch.bind(this) // React binding stuff\n        this.addEmpCourse = this.addEmpCourse.bind(this)\n    }\n    //Add Single Employee\t\n    addEmployee(params) {\t\n        return axios.post(`${this.domain}/saveEmployee.php`, \t\n        JSON.stringify(params)\t\n        ).then(res => {\t\n            return Promise.resolve(res);\t\n        })\t\n    }\n    //All email sent list\n    sendEmailAll(params) {\n        return axios.post(`${this.domain}/send-welcome-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //weekly email sent list\n    sendWeeklyEmail(params) {\n        return axios.post(`${this.domain}/send-weekly-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //route email sent list\n    sendRouteEmail(params) {\n        return axios.post(`${this.domain}/send-route-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //firebase email list\n    sendPush(params) {\n        return axios.post(`${this.domain}/send-push-notification.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //email sent list\n    sendEmail(params) {\n        return axios.post(`${this.domain}/send-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //firebase email list\n    getEmailList(companyCode) {\n        var params=\"CompanyCode=\"+companyCode;\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\n            var emailList = []\n            for(var i = 0; i < res.data.length; i++){\n                if(res.data[i]['fcmToken']!==\"\"){\n                    emailList.push({\"value\":res.data[i]['fcmToken'],\"label\":res.data[i]['userId']})\n                }\n            }\n            return Promise.resolve(emailList);\n        })\n    }\n    \n    //get Completion Reports Data\n    getCompletionReports(companyCode,moduleNo,batchNumber,routeNumber){\n        return axios.get(`${this.domain}/completion-reports-api.php?companyCode=`+companyCode+`&courseNumber=`+moduleNo+`&batchNumber=`+batchNumber+`&routeNumber=`+routeNumber).then(res => {\n           return Promise.resolve(res.data);\n        })\n    }\n    //get Route Data\n    getRouteList(courseNo) {\n        return axios.get(`${this.domain}/routeList.php?courseNo=`+courseNo).then(res => {\n            let routeList = []\n            for(var i = 0; i < res.data.length; i++){\n                routeList.push({\"value\":res.data[i]['routeNo'],\"label\":res.data[i]['description'],\"id\":res.data[i]['id']})\n            }\n            return Promise.resolve(routeList);\n        })\n    }\n    //get course batch Data\n    getCourseBatch(companyCode,batchNo) {\n        return axios.get(`${this.domain}/courseListBatch.php?companyCode=`+companyCode+`&batchNumber=`+batchNo).then(res => {\n            var courseList = []\n            for(var i = 0; i < res.data.length; i++){\n                courseList.push({\"value\":res.data[i]['courseNumber'],\"label\":res.data[i]['courseName'],\"courseStartDate\":res.data[i]['courseStartDate']})\n            }\n            return Promise.resolve(courseList);\n        })\n    }\n    //get batch Data\n    getBatch(companyCode) {\n        return axios.get(`${this.domain}/batch.php?companyCode=`+companyCode).then(res => {\n            //console.log(res.data)\n            var batchList = []\n            for(var i = 0; i < res.data.length; i++){\n                batchList.push({\"value\":res.data[i]['batchNumber'],\"label\":res.data[i]['batchNumber']})\n            }\n            return Promise.resolve(batchList);\n        })\n    }\n    //get company list\n    getCompanyList(companyCode = null) {\n        let url = `${this.domain}/company.php`;\n        if(companyCode){\n            url = `${this.domain}/company.php?companyCode=${companyCode}`\n        }\n        return axios.get(`${url}`).then(res => {\n            var companies= []\n            for(var i = 0; i < res.data.length;i++){\n                if(res.data[i]['Id'] !== \"\" && res.data[i]['Id'] !== \"0\"){\n                    var optName = res.data[i]['Id']+\" - \"+res.data[i].Name\n                    companies.push({'value':res.data[i]['Id'],'label':optName})\n                }\n            }\n            return Promise.resolve(companies);\n        })\n    }\n    //get employee list\n    getEmployeeList(companyCode,batchNumber,gdprCheck=\"\") {\n        var params=\"CompanyCode=\"+companyCode;\n        if(batchNumber !== \"0\"){\n            params = params+ \"&batchno=\"+batchNumber\n        }\t\n        if(gdprCheck !== \"\"){\t\n            params = params+ \"&acceptedGDPR=\"+gdprCheck\n        }\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\n            return Promise.resolve(res.data);\n        })\n    }\n    //get course list\n    getCourseList(companyCode, batchNumber = 0) {\n        let params=\"companyCode=\"+companyCode;\n        if(batchNumber !== 0){\n            params = params+ \"&batchNumber=\"+batchNumber\n        }\n        return axios.get(`${this.domain}/courseListBatch.php?`+params).then(res => {\n            let courseList = []\n            let j = 0;\n            for(var i = 0; i < res.data.length;i++){\n                j = i + 1\n               let data = res.data[i]\n               data['i_d'] = j;\n               courseList.push(data)\n            }\n            return Promise.resolve(courseList);\n        })\n    }\n    //get course list\n    getCourseDetails(companyCode,courseNumber) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/getEmployeeCourseAll.php?companyCode=`+companyCode+`&courseNumber=`+courseNumber, {\n            method: 'GET',\n            \n        }).then(res => {\n            var registeredUsers= []\n            for(var i = 0; i < res.registered.length;i++){\n                registeredUsers.push(res.registered[i]['userId'])\n            }\n            var availableUsers= []\n            for(var ii = 0; ii < res.availableToRegister.length;ii++){\n                if(registeredUsers.indexOf(res.availableToRegister[ii]['userId']) === -1){\n                    availableUsers.push(res.availableToRegister[ii])\n                }\n            }\n            res.availableToRegister = availableUsers;\n            return Promise.resolve(res);\n        })\n    }\n    addEmpCourse(userId, companyCode, courseNumber) {\n        return axios.post(`${this.domain}/add-employee-course.php`, JSON.stringify({\n            userId, companyCode, courseNumber\n        })).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    deleteEmpCourse(userId, companyCode, courseNumber) {\n        return axios.post(`${this.domain}/remove-employee-course.php`, JSON.stringify({\n            userId, companyCode, courseNumber\n        })).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    setCompanyCode(companyCode) {\n        // Saves user token to localStorage\n        localStorage.setItem('company_code', companyCode)\n    }\n    getCompanyCode() {\n        return localStorage.getItem('company_code')\n    }\n    setCompanyName(companyName) {\n        // Saves user token to localStorage\n        localStorage.setItem('company_name', companyName)\n    }\n    getCompanyName() {\n        return localStorage.getItem('company_name')\n    }\n    setAccessLevel(access_level) {\n        // Saves user token to localStorage\n        localStorage.setItem('access_level', access_level)\n    }\n    getAccessLevel() {\n        return localStorage.getItem('access_level')\n    }\n    //get Overview for company\t\n    getOverView(companyCode) {\t\n        return this.fetch(`${this.domain}/overview.php?companyCode=`+companyCode, {\t\n            method: 'GET',\t\n            \t\n        }).then(res => {\t\n            return Promise.resolve(res);\t\n        })\t\n    }\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        /* if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        } */\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}","import React from \"react\";\n\nclass OverView extends React.Component {\n\n  constructor(props) {\n        super(props);\n        \n        this.state = {\n          data : [],\n          \n        }\n        \n  }\n  \n  componentDidMount() {\n    global.api.getOverView(global.companyCode)\n                .then(res => res)\n                .then(data => this.setState({data}))\n                .catch(err =>{\n                    alert(err);\n                })\n    \n  }  \n  \n  render() {\n    const { totalUsers, activeCourses, ongoingBatches } = this.state.data;\n    \n    return (\n        <main className=\"offset\" id=\"content\">\n          <section className=\"section_box\">\n            <h1 className=\"title1 mb115\">Overview</h1>\n            \n            <div className=\"overview-wrap\">\n              <div className=\"overview-wrap-left\">\n                <div className=\"overview-wrap-div-up\">\n                  <div className=\"overview-wrap-div-up-heading\">Total Users</div>\n                  <div className=\"overview-wrap-div-up-border\"></div>\n                  <div className=\"overview-wrap-div-up-text\">{totalUsers}</div>\n                </div>\n                <div className=\"overview-wrap-div-down\">\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\n                  <div className=\"overview-wrap-div-down-img\">\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\n                  </div>*/}\n                </div>\n              </div>\n              <div className=\"overview-wrap-center\">\n                <div className=\"overview-wrap-div-up\">\n                  <div className=\"overview-wrap-div-up-heading\">Active Courses</div>\n                  <div className=\"overview-wrap-div-up-border\"></div>\n                  <div className=\"overview-wrap-div-up-text\">{activeCourses}</div>\n                </div>\n                <div className=\"overview-wrap-div-down\">\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\n                  <div className=\"overview-wrap-div-down-img\">\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\n                  </div>*/}\n                </div>\n              </div>\n              <div className=\"overview-wrap-right\">\n                <div className=\"overview-wrap-div-up\">\n                  <div className=\"overview-wrap-div-up-heading\">Ongoing Cohorts</div>\n                  <div className=\"overview-wrap-div-up-border\"></div>\n                  <div className=\"overview-wrap-div-up-text\">{ongoingBatches}</div>\n                </div>\n                <div className=\"overview-wrap-div-down\">\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\n                  <div className=\"overview-wrap-div-down-img\">\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\n                  </div>*/}\n                </div>\n              </div>\n            </div>\n          </section>\n      </main>\n    )\n  }\n}\n\nexport default OverView;\n\n","import React, { Component } from 'react';\nimport AuthService from '../components/AuthService';\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.Auth = new AuthService();\n        //temp email/pass\n    }\n    componentDidMount(){\n          if(this.Auth.loggedIn())\n              this.props.history.replace('/');\n      }\n    render() {\n        return (\n            <div>\n                <div className=\"overlay\"></div>\n                <div id=\"page-preloader\">\n                    <div className=\"preloader\">\n                        <div className=\"preload_inner preload-one\"></div>\n                        <div className=\"preload_inner preload-two\"></div>\n                        <div className=\"preload_inner preload-three\"></div>\n                    </div>\n                </div>\n                <main className=\"type2\" id=\"content\">\n                    <section className=\"section_box section_offset1 zoom\">\n                        <div className=\"form_wrapper \">\n                            <div className=\"form_logos mb35\">\n                                <img src=\"/images/logos.png\" alt=\"\" />\n                            </div>\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\n                                <h3 className=\"form_title al_center mb35\">Please login to your account.</h3>\n                                <div className=\"form_row type2\">\n                                    <input className=\"form_input type2\" placeholder=\"Username\" name=\"email\" type=\"text\" onChange={this.handleChange}/>\n                                </div>\n                                <div className=\"form_row type2\">\n                                    <input className=\"form_input type2\" placeholder=\"Password \" name=\"password\" type=\"password\" onChange={this.handleChange} />\n                                </div>\n                                <div className=\"form_row type2 form_flex mb115\">\n                                    <label className=\"form_checkbox login\">\n                                        <input type=\"checkbox\" hidden=\"hidden\" />\n                                        <span>Remember me</span>\n                                    </label>\n                                    <a className=\"link link-size1 link_color\" href=\"/forgotpass\">Forgot password</a>\n                                </div>\n                                <div className=\"form_row_btn type2\">\n                                    <button className=\"btn btn-radius btn-orange btn-login\" type=\"submit\">\n                                        <span>LOG IN</span>\n                                    </button>\n                                </div>\n                            </form>\n                            <div className=\"link_wrapp\">\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\n                        </div>\n                        </div>\n                        \n                    </section>\n                </main>\n      \n      </div>\n          \n        );\n    }\n\n    handleChange(e){\n        this.setState(\n            {\n                [e.target.name]: e.target.value\n            }\n        )\n    }\n    handleFormSubmit(e){\n        e.preventDefault();\n          this.Auth.login(this.state.email,this.state.password)\n              .then(res =>{\n                  if(res.message){\n                    alert(res.message);\n                    return false;\n                  }else{\n                      if(res.accesslevel !== \"0\" ){\n                        window.location.href = '/overview';\n                      }else{\n                        alert('Access Level Disabled, Contact Admin');\n                      }\n                  }\n              })\n              .catch(err =>{\n                  alert(err);\n              })\n      }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport AuthService from '../components/AuthService';\n\nclass Forgot extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email : '',\n            showError: false,\n            messageFromServer:'',\n            showSuccess: ''\n        }\n        this.Auth = new AuthService();\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        const email = this.state.email;\n        if(email === ''){\n            alert(\"Please Enter Email\");\n        }else{\n            \n            this.Auth.forgotpass(email)\n                .then(res =>{\n                    if(res.message === 'Please check email for reset link.'){\n                        this.setState({\n                            showError : true,\n                            showSuccess: 'success_message',\n                            messageFromServer : res.message\n                        });\n                    }else{\n                        this.setState({\n                            showError : true,\n                            showSuccess: 'error_message',\n                            messageFromServer : res.message\n                        });\n                    }\n                })\n                .catch(err =>{\n                    alert(err);\n                })\n        }\n    };\n    \n    render() {\n        //const {email} = this.state;\n        return (\n            <div>\n                <div className=\"overlay\"></div>\n                <div id=\"page-preloader\">\n                    <div className=\"preloader\">\n                        <div className=\"preload_inner preload-one\"></div>\n                        <div className=\"preload_inner preload-two\"></div>\n                        <div className=\"preload_inner preload-three\"></div>\n                    </div>\n                </div>\n                <main className=\"type2\" id=\"content\">\n                    <section className=\"section_box section_offset1 zoom\">\n                        <div className=\"form_wrapper \">\n                            <div className=\"form_logos mb35\">\n                                <img src=\"/images/logos.png\" alt=\"\" />\n                            </div>\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\n                            <h3 className=\"form_title al_center mb50\" style={{'fontSize':'25px'}}>Enter your email and we send you a password reset link.</h3>\n                            \n                            <div className=\"form_row type2\">\n                                <input className=\"form_input type2\" type=\"text\" placeholder=\"Email\" id=\"email\" label=\"email\" onChange={this.handleChange('email')}/> \n                            </div>\n                            <div className={this.state.showSuccess}>{this.state.showError=== true ? this.state.messageFromServer:' '}&nbsp;</div>\n\n                            <div className=\"form_row_btn type2\">\n                                <button className=\"btn btn-radius btn-orange btn-size5\" type=\"submit\">\n                                    <span>SEND REQUEST</span>\n                                </button>\n                            </div>\n                        </form>\n                        <div className=\"link_wrapp\">\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\n                        </div>\n                        </div>\n                        \n                    </section>\n                </main>\n      \n      </div>\n          \n        );\n    }\n}\n\nexport default Forgot;","import React, { Component } from \"react\";\r\nimport CampaignsWeeklyCompletion from './Campaigns-weekly-completion'\r\nimport CampaignsWeeklyTask from './Campaigns-weekly-task'\r\nimport CampaignsWelcomeEmail from './Campaigns-welcome-email'\r\n\r\nclass Campaigns extends Component {\r\n  \r\n  render(){\r\n      return (\r\n        <main className=\"offset\" id=\"content\">\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Messaging & Notification Center</h4>\r\n              <h1 className=\"title1 mb115\">Campaigns</h1>\r\n              <form className=\"form_employee js-tabs\">\r\n                <ul className=\"js-tabs-list tab-list\">\r\n                  <li data-id=\"weeklycompletion\"><span>Weekly Completion</span></li>\r\n                  <li data-id=\"weeklytasks\"><span>Weekly Tasks</span></li>\r\n                  <li data-id=\"welcomemail\"><span>Welcome - Email</span></li>\r\n                </ul>\r\n                <div>\r\n                  <div className=\"js-tabs-box tab-box\">\r\n                    <CampaignsWeeklyCompletion />\r\n                    <CampaignsWeeklyTask />\r\n                    <CampaignsWelcomeEmail />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Campaigns;\r\n\r\n\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport AuthService from './components/AuthService';\nimport Employees from \"./pages/Employees\";\nimport AddEmployees from \"./pages/AddEmployee\";\n//import Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport EmployeestoCourses from \"./pages/EmployeestoCourses\";\nimport Reports from \"./pages/Reports\";\nimport Forgot from \"./pages/Forgot\";\nimport CourseDetails from \"./pages/CourseDetails\";\nimport Courses from \"./pages/Courses\";\nimport Firebase from \"./pages/Firebase\";\nimport Campaigns from \"./pages/Campaigns\";  \nimport OverView from \"./pages/OverView\";\n\nconst Auth = new AuthService();\nclass Router extends React.Component {\n  render() {\n    return (\n    <Switch>\n      <Route exact path='/login' component={Login}/>\n      <Route exact path='/forgotpass' component={Forgot}/>\n      <ProtectedRoute path=\"/employee\" component={Employees} />\n      <ProtectedRoute path=\"/add-employee\" component={AddEmployees} />\n      <ProtectedRoute path=\"/employeestocourses\" component={EmployeestoCourses} />\n      <ProtectedRoute path=\"/reports\" component={Reports} />\n      <ProtectedRoute path=\"/coursedetail\" component={CourseDetails} />\n      <ProtectedRoute path=\"/courses\" component={Courses} />\n      <ProtectedRoute path=\"/firebase\" component={Firebase} />\n      <ProtectedRoute path=\"/campaigns\" component={Campaigns} />\n      <ProtectedRoute path=\"/overview\" component={OverView} />\n      <ProtectedRoute path=\"/\" component={OverView} />\n      \n      <Route\n          render={function () {\n            return <h1>Not Found</h1>;\n          }}\n        />\n    </Switch>\n   );\n  }\n}\n const ProtectedRoute = ({ component: Component, ...rest }) => {\n  if(Auth.loggedIn()){\n    return (<Route {...rest} render={(props) => (\n      Auth.loggedIn() === true ? \n          <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location }}} />   \n    )} />)\n  }else{\n    window.location.href = '/login';\n  }\n  }\n\n\n\nexport default Router;\n","import React, { Component } from 'react';\nimport ReactNotifications from 'react-notifications-component';\n\nimport Menu from \"./pages/Menu\";\nimport Header from \"./pages/Header\";\nimport Router from './Routes';\nimport ApiService from './components/ApiService';\nconst Api = new ApiService();\nconst pathName = window.location.pathname;\n//const companyCode = '115'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    global.api = Api // API server domain\n    //global.companyCode = companyCode // API server domain\n    //global.companyCode = Api.getCompanyCode()\n  }\n  render() {\n    \n    if((pathName==='/login' || pathName==='/forgotpass')){\n      return (<div>\n       <Router />\n      </div>)\n    }else{\n      return (<div className=\"page_wrap\"><ReactNotifications /><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>)\n    }\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\n//import { Link } from 'react-router-dom'\nconsole.log(window.location.pathname);\nconst pathName = window.location.pathname;\n\nclass Menu extends Component {\n   \n  render() {\n    return (\n        <aside className=\"js-sticky\" id=\"aside\">\n        <nav className=\"navigation_menu\">\n            <menu className=\"menu \">\n                <li className=\"menu_item\">\n                <a className={pathName==='/overview' ? 'menu_link current' : 'menu_link'} href=\"/overview\">\n                        <i className=\"menu_link_icon\">\n                            <img src=\"/images/icons/icon1.svg\" alt=\"\" />\n                            <img src=\"/images/icons/icon1hover.svg\" alt=\"\" />\n                        </i>\n                        <span>Overview</span>\n                    </a>\n                </li>\n                <li className=\"menu_item\">\n                <a className={pathName==='/employee' ? 'menu_link current' : 'menu_link'} href=\"/employee\">\n                        <i className=\"menu_link_icon\">\n                            <img src=\"/images/icons/icon2.svg\" alt=\"\" />\n                            <img src=\"/images/icons/icon2hover.svg\" alt=\"\" />\n                        </i>\n                        <span>Employees</span>\n                    </a>\n                </li>\n                <li className=\"menu_item\">\n                <a className={pathName==='/reports' ? 'menu_link current' : 'menu_link'} href=\"/reports\">\n                        <i className=\"menu_link_icon\">\n                            <img src=\"/images/icons/icon3.svg\" alt=\"\" />\n                            <img src=\"/images/icons/icon3hover.svg\" alt=\"\" />\n                        </i>\n                        <span>Reports</span>\n                    </a>\n                </li>\n                <li className=\"menu_item\">\n                    <a className={pathName==='/courses' ? 'menu_link current' : 'menu_link'} href=\"/courses\">\n                        <i className=\"menu_link_icon\">\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\n                        </i>\n                        <span>Courses</span>\n                    </a>\n                </li>\n                <li className=\"menu_item\">\t\n                    <a className={pathName==='/campaigns' ? 'menu_link current' : 'menu_link'} href=\"/campaigns\">\t\n                        <i className=\"menu_link_icon\">\t\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\t\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\t\n                        </i>\t\n                        <span>Campaigns</span>\t\n                    </a>\t\n                </li>\n            </menu>\n        </nav>\n    </aside>  \n\n    );\n  }\n}\n\nexport default Menu;\n\n","import React from \"react\";\nimport AuthService from '../components/AuthService';\nimport ApiService from '../components/ApiService';\nimport Select from 'react-select';\n\nconst pathName = window.location.pathname;\nconst Auth = new AuthService();\nconst Api = new ApiService();\n\nclass Header extends React.Component {\n    constructor(props){\n        super(props);\n        this.user = '';\n        if(Auth.loggedIn()){\n            this.user = Auth.getProfile()\n        }\n        global.companyCode = Api.getCompanyCode()\n        global.companyName = Api.getCompanyName()\n        global.access_level =Api.getAccessLevel()\n        \n        if(global.companyCode === null && global.access_level === \"1\"){\n            global.companyCode = 115\n            global.companyName = 'Taplingua Empresas Demo 1'\n        }\n        this.state = {\n            companyList: [],\n            selectedOption: [{\"value\":global.companyCode,\"label\":global.companyCode+\" - \"+global.companyName}],\n            companyDisable:\"\"\n        };\n        \n    }\n    componentDidMount() {\n        if(global.access_level === \"3\"){\n            this.setState({companyDisable:\"disabled\"})\n        }\n        let api = ''\n        if(global.access_level === \"1\"){\n            api = global.api.getCompanyList ();\n        }else{\n            api = global.api.getCompanyList (global.companyCode);\n        }\n        api\n        .then(companyList => {\n            companyList.sort(function(a, b) {\n              return a.value - b.value;\n            });\n            this.setState({ companyList: companyList });\n        })\n        .catch(err =>{\n            alert(err);\n        })\n                \n    }\n    \n    handleLogout = (props) => {\n        Auth.logout()\n        window.location.href = '/login';\n     }\n     handleChange = selectedOption => {\n        this.setState({ selectedOption });\n        var selValue = selectedOption.value;\n        Api.setCompanyCode(selValue);\n        var CompanyName = selectedOption.label;\n        var res = CompanyName.split(\" - \");\n        Api.setCompanyName(res[1]);\n        window.location.href = pathName; \n      };\n      \n  render() {\n    \n    \n    return (\n      <div>\n        <div className=\"overlay\"></div>\n            {/* <!-- Preloader Start     ============================================ --> */}\n            <div id=\"page-preloader\">\n                <div className=\"preloader\">\n                    <div className=\"preload_inner preload-one\"></div>\n                    <div className=\"preload_inner preload-two\"></div>\n                    <div className=\"preload_inner preload-three\"></div>\n                </div>\n            </div>\n            {/* <!-- Preloader End       ============================================ -->\n            <!-- Header Start     ============================================ --> */}\n            <header className=\"header\" id=\"header\">\n                <div className=\"container-fluid\">\n                    <div className=\"header_wrap\">\n                        <div className=\"header_left\">\n                            <a className=\"logo_box\" href=\"index.html\">\n                                <div className=\"logo\">\n                                    <img src=\"images/logo.svg\" alt=\"\" />\n                                </div>\n                                <div className=\"logo_description\">Dashboard</div>\n                            </a>\n                        </div>\n                        \n                        <div className=\"header_right\">\n                            <div className=\"head_box_l switch\">\n                                <h6 className=\"title1 mr15\"  style={{'fontSize':'15px'}}>\n                                Company\n                                </h6>\n                                <div style={{'width':'350px'}}>\n                                <Select id=\"company\" value={this.state.selectedOption}  onChange={this.handleChange} options={this.state.companyList} className=\"Select has-value is-clearable is-searchable Select--multi\"\n    classNamePrefix=\"company\" isDisabled={this.state.companyDisable}/>\n                                \n                                </div>\n                            </div>\n                            \n                            <a className=\"link link-black support_link\" href=\"/help\">\n                                <span>Help & Support</span>\n                            </a>\n                            <a className=\"header_reminder\" href=\"/\">\n                                <span>8</span>\n                            </a>\n                            <div className=\"header_login_box\">\n                                <span className=\"header_login_name\">Hi,\n                                    <span className=\"fw700 header-logout\">{this.user}</span>\n                                </span>\n                                <span className=\"header_login_photo\" onClick={this.handleLogout}><img src=\"/images/logout.png\" alt=\"Logout\" /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            \n      </div>\n    );\n  }\n}\n\nexport default Header;\n\n","import React, { Component } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {  Search } from 'react-bootstrap-table2-toolkit';\nimport filterFactory from 'react-bootstrap-table2-filter';\nimport Loader from \"react-loader-spinner\";\nimport Select from 'react-select';\nimport $ from 'jquery';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { Progress } from 'reactstrap';  \nconst { SearchBar } = Search;\n\nclass Employees extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    function formatter(cell, row) {\n      return (\n        <div className=\"table_dots\">\n        <div className=\"table_dots_icon\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    </div>\n        );\n    }\n    \n   \n    function courseFormater(cell, row,rowIndex) {\n      const courseItems = [];\n      if(row.courseRegistered.length !== 0){\n        var moduleCompletionPercent = '0'\n        for (var i=0; i < 1; i++) {\n           moduleCompletionPercent = row.courseRegistered[i].moduleCompletion_percent\n          if(moduleCompletionPercent===\"\"){\n            moduleCompletionPercent = '0';\n          }\n          \n          courseItems.push(<div className=\"table_course_wrap\" key={row.i_d +'_'+ i}><div className=\"table_course\">{row.courseRegistered[i][\"courseName\"]}</div><div className=\"progress_status_container hide\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div><div className=\"table_number\">{row.courseCount}</div></div>);\n          \n        }\n        for (var j=1; j < row.courseRegistered.length; j++) {\n           moduleCompletionPercent = row.courseRegistered[j].moduleCompletion_percent\n          if(moduleCompletionPercent===\"\"){\n            moduleCompletionPercent = '0';\n          }\n          courseItems.push(<div className=\"table_course_wrap hide\" key={row.i_d +'_'+ j}><div className=\"table_course\">{row.courseRegistered[j][\"courseName\"]}</div><div className=\"progress_status_container\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div></div>);\n        }\n      }\n      var trId = \"courses_\"+rowIndex\n      return (\n        <div id={trId}>{courseItems}</div>\n      )\n    }\n    function statusFormater(cell, row) {\n      const status = []\n      if(row.status === \" \"){\n        status.push(<div key={row.i_d}><div className=\"status\" >\n        <i className=\"green\"></i>\n        <span>Status</span>\n      </div><div className=\"session\">\n          <span>Last session</span>\n          <time>{row.lastLoginDate}</time>\n      </div></div>)\n      }\n      return (\n        status\n      )\n    }\n    function locationFormater(cell, row) {\n      \n      return (<div>\n        <div className=\"table_location\">{row.Location}</div>\n        <div className=\"table_location_it\">Department Name</div>\n        </div>\n      )\n    }\n    \n    this.state = {\n      columns:[{\n        dataField: \"i_d\",\n        text: \"Id\",\n        hidden: true,\n        csvExport: false\n       },\n       {\n         text: 'EMAIL',\n         dataField: 'userId',\n         sort: true,\n         csvExport: true,\n         classes:'entry-text',\n         headerStyle: {\n          width:'25%'\n        }\n       },\n       {\n        dataField: \"FirstName\",\n        text: \"FirstName\",\n        sort: true,\n        csvExport: true,\n        headerStyle: {\n          width:'12%'\n        }\n       },\n       {\n        dataField: \"LastName\",\n        text: \"LastName\",\n        csvExport: true,\n        headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'COURSES',\n         dataField: 'courseRegistered',\n         formatter: courseFormater,\n         csvExport: false,\n         headerStyle: {\n          width:'22%'\n        }\n       },\n       {\n         text: 'PHONE',\n         dataField: 'Mobile',\n         sort: true,\n         csvExport: true,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'device',\n         dataField: 'deviceMake',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'deviceOS',\n         dataField: 'deviceOsVersion',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'appVersion',\n         dataField: 'versionNumber',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'gdprAccepted',\n         dataField: 'acceptedGDPR',\n         sort: true,\n         csvExport: true,\n         headerStyle: {\n          width:'15%'\n        }\n       },\n       {\n         text: 'LOCATION',\n         dataField: 'Location',\n         formatter:locationFormater,\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'15%'\n        }\n       },\n       {\n        dataField: \"status\",\n        text: \"STATUS\",\n        csvExport: false,\n        formatter:statusFormater,\n        headerStyle: {\n          width:'10%'\n        }\n       },{\n        text: '',\n        dataField: \"\",\n        formatter: formatter,\n        csvExport: false,\n        classes:'',\n        headerStyle: {\n          width:'30px'\n        },\n        events: {\n         onClick: (e, column, columnIndex, row, rowIndex) => {\n          \n          var currentClass = e.target.className;\n          var statusIndex = this.state.statusIndex\n          var courseIndex = this.state.courseIndex\n          var locationIndex = this.state.locationIndex\n          if(currentClass === 'table_dots'){\n            if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\n              var coursesClass = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className;\n              var courseCount = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0]).get(0).childNodes\n              if(coursesClass !== 'table_course_wrap'){\n                //status\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session'\n                }\n                //courses\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap'\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container hide'\n                \n                for(var i = 1 ; i < courseCount.length; i++){\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[i]).get( 0 ).className= 'table_course_wrap hide'\n                }\n                \n                //location\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it'\n                }\n              }else{\n                //status\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session show'\n                }\n                //courses\n                if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap is-active height'\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container'\n                  for(var j = 1 ; j < courseCount.length; j++){\n                    $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[j]).get( 0 ).className= 'table_course_wrap is-active height'\n                  }\n                  /* $(e.target.parentNode.parentNode.childNodes[4].children[0].children[1]).get( 0 ).className= 'table_course_wrap is-active height' */\n                }\n                //location\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it show'\n                }\n              }\n              $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).slideDown='400'\n            }\n          }\n         }\n       }\n       \n      }],\n      data : []\n       \n    }\n    this.state.selected = []\n    this.state.statusIndex = 3\n    this.state.courseIndex = 4\n    this.state.locationIndex = 11\n    this.state.batchData = [];\n\n    this.state.csvFileName = global.companyName + \"-Employee-\" + this.getDate() +\".csv\";\n    this.state.notification = {\n      title: '',\n      message: '',\n      type: 'default',                // 'default', 'success', 'info', 'warning'\n      container: 'top-right',                // where to position the notifications\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    };\n    \n  }\n\n  getDate() {\n    var tempDate = new Date();\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\n    return date;\n  }\n  \n  componentDidMount() {\n    global.api.getEmployeeList(global.companyCode)\n    .then(res => res)\n                .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n                .catch(err =>{\n                    alert(err);\n                })\n    //For Batch\n    global.api.getBatch(global.companyCode)\n    .then(\n      data => {\n        data.sort(function(a, b) {\n          return a.batchNumber - b.batchNumber;\n        });\n        this.setState({ batchData: data });\n    });\n  }\n  onBatchChange = selectedBatch => {\n    this.setState({ selectedBatch });\n    console.log(`Batch selected:`, selectedBatch.value);\n    var batchNumber = selectedBatch.value;\n    $(\"#gdpr\").prop(\"checked\", false);\n    this.setState({checked: false});\n    global.api.getEmployeeList(global.companyCode,batchNumber)\n      .then(res => res)\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide();})\n      .catch(err =>{\n          alert(err);\n      })\n  };\n  onBatchChangeOld= (e) => {\n    //List of Batches for selected Company\n    this.setState({selectedBatch: e.target.value});\n    var batchNumber = e.target.value;\n    global.api.getEmployeeList(global.companyCode,batchNumber)\n      .then(res => res)\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n      .catch(err =>{\n          alert(err);\n      })\n      /* if(e.target.value === \"\"){\t\n      //alert(\"You must select Batch\");\t\n      this.setState({ data: []});\t\n      $('#employee-content').hide();\t\n      $('#spinner').hide();\t\n    }else{\t\n      var batchNumber = e.target.value;\t\n      global.api.getEmployeeList(global.companyCode,batchNumber)\t\n      .then(res => res)\t\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\t\n      .catch(err =>{\t\n          alert(err);\t\n      })\t\n    } */\n  }\n  handleCheck = () => {\n    var notification=this.state.notification;\n    let batchNumber = \"\";\n    if(this.state.selectedBatch === undefined){\n      notification.type='danger'\n      notification.title='Error';\n      notification.message='Please select batch before GDPR'\n            store.addNotification({\n              ...notification\n            });\n      $(\"#gdpr\").prop(\"checked\", false);\n      return false;\n    }else{\n      batchNumber = this.state.selectedBatch.value;\n      this.setState({checked: !this.state.checked});\n      let gdprCheck = \"\";\n      if(!this.state.checked === true){\n        gdprCheck = \"Y\";\n      }\n      global.api.getEmployeeList(global.companyCode,batchNumber,gdprCheck)\n        .then(res => res)\n        .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n        .catch(err =>{\n          alert(err);\n      })\n    }\n  }\n  handleBtnClick = () => {\n    console.log(this.state.selected)\n    /* if(this.state.selected.length === 0){\n      alert('please select one emp')\n      return false;\n    }else{      \n      this.props.history.push({ //browserHistory.push should also work here\n            pathname: '/employeestocourses',\n            state: {userid: this.state.selected}\n          });\n    } */\n  }\n  \n  handleOnSelect = (row, isSelect, rowIndex, e) => {\n    \n    var columnCount = $(e.target.parentNode.parentNode).get(0).cells;\n    \n    if (isSelect) {\n      \n      for (var i=1; i < columnCount.length; i++) {\n        if(i === 6){\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td entry-text is-active';\n        }else{\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td is-active';\n        }\n      }\n      /* this.setState(() => ({\n        selected: [...this.state.selected, row.i_d]\n      })); */\n    } else {\n      for (var j=1; j < columnCount.length; j++) {\n        if(j === 6){\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td entry-text';\n        }else{\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td';\n        }\n        \n      }\n      /* this.setState(() => ({\n        selected: this.state.selected.filter(x => x !== row.i_d)\n      })); */\n    }\n  }\n  handleOnSelectAll = (isSelect, rows, e) => {\n    //console.log($(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[0].cells))\n    var rowCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1]).get(0).childNodes;\n    //const ids = rows.map(r => r.i_d);\n    if (isSelect) {\n      for (var i=0; i < rowCount.length; i++) {\n        var colCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i]).get(0).cells;\n        for (var j=1; j < colCount.length; j++) {\n          if(j === 6){\n          $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td entry-text is-active';\n          }else{\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td is-active';\n          }\n        }\n      }\n      /* this.setState(() => ({\n        selected: ids\n      })); */\n    } else {\n      for (var ii=0; ii < rowCount.length; ii++) {\n        var coldCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii]).get(0).cells;\n        for (var jj=1; jj < coldCount.length; jj++) {\n          if(jj === 6){\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td entry-text';\n          }else{\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td';\n          }\n          \n        }\n      }\n      /* this.setState(() => ({\n        selected: []\n      })); */\n    }\n  }\n  render() {\n    \n    const options = {\n      custom: true,\n      /* page: 1, */\n      /* totalSize: this.state.data.length */\n      slected:[],\n    };\n    const MyExportCSV = props => {\n      const handleClick = () => {\n        props.onExport();\n      };\n      return (\n        \n        <span\n          className=\"btn btn-radius btn-size btn-white export\"\n          onClick={handleClick} style={{marginTop:'20px'}}\n        >\n          <span>Export CSV</span>\n        </span>\n      );\n    };\n    function chkFormatter(cell, row) {\n      return (\n        <div class=\"table_check\">\n          <label class=\"form_checkbox\">\n            <input type=\"checkbox\" hidden=\"hidden\" />\n            <span> </span>\n            </label>\n            </div>\n        );\n    }\n    const selectRow = {\n      mode: 'checkbox',\n      formatter:chkFormatter,\n      clickToSelect: false,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll,\n      headerColumnStyle: {\n        width:'45px',\n        paddingLeft:'5px'\n      }\n      \n    };\n    const rowEvents = {onClick:(e, row, rowIndex) => {\n          \n      //console.log($(e.target.parentNode).get(0).tagName)\n      var elementName = ''\n      if($(e.target.parentNode).get(0).tagName === 'TR'){\n        elementName = e.target.parentNode\n      }else {\n        elementName = e.target.parentNode.parentNode.parentNode.parentNode\n      }\n      \n      if(elementName.tagName === 'TBODY'){\n        \n        elementName = elementName.childNodes[rowIndex]\n      }\n      var statusIndex = this.state.statusIndex\n      var courseIndex = this.state.courseIndex\n      var locationIndex = this.state.locationIndex\n      /* console.log(elementName)\n      console.log(rowIndex) */\n      if(elementName.tagName === 'TR'){\n        \n        if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\n          /* $('#courses_'+rowIndex).css('height','')\n          $('#courses_'+rowIndex).css('overflow','') */\n          var coursesClass = elementName.childNodes[4].children[0].children[0].className;\n          var courseCount = elementName.childNodes[4].children[0].childNodes\n          if(coursesClass !== 'table_course_wrap'){\n            //status\n            if(elementName.childNodes[statusIndex].children.length !== 0){\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session'\n            }\n            //courses\n            elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap'\n            elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container hide'\n            \n            for(var i = 1 ; i < courseCount.length; i++){\n              elementName.childNodes[courseIndex].children[0].children[i].className= 'table_course_wrap hide'\n            }\n            \n            //location\n            if(elementName.childNodes[locationIndex].children.length !== 0){\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it'\n            }\n          }else{\n            \n            //status\n            if(elementName.childNodes[statusIndex].children.length !== 0){\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session show'\n            }\n            //courses\n            if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\n              elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap is-active height'\n              elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container'\n              for(var j = 1 ; j < courseCount.length; j++){\n                elementName.childNodes[courseIndex].children[0].children[j].className= 'table_course_wrap is-active height'\n              }\n              if(courseCount.length>3){\n                /* $('#courses_'+rowIndex).css('height','200px')\n                $('#courses_'+rowIndex).css('overflow','auto') */\n              }\n             \n            }\n            //location\n            if(elementName.childNodes[locationIndex].children.length !== 0){\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it show'\n            }\n          }\n          elementName.childNodes[courseIndex].children[0].children[0].slideDown='400'\n        }\n      }\n      }\n     };\n    \n    const NoDataIndication = () => (\n      <div className=\"table_wraps\" id=\"spinner\">\n        <div className=\"spinner\" >\n          <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\n                  Loading....\n        </div>\n        </div>\n    );\n    \n    const NoDataAvailable = () => (\n      <div className=\"spinner nodata-available\">\n       No Data Available...\n      </div>\n    );\n    return (\n      \n          <ToolkitProvider\n          keyField=\"i_d\"\n          data={ this.state.data }\n          columns={ this.state.columns }\n          classes=\"table\"\n          search\n          exportCSV = {{ fileName: this.state.csvFileName }}\n          >\n          {\n            props => (\n              <main className=\"offset\" id=\"content\">\n                    <section className=\"section_box\">\n                        <h1 className=\"title1 mb50\">Employees</h1>\n                        <div className=\"head_box type2 mb50\">\n                            <div className=\"head_box_l\">\n                                <div className=\"activated_employee\">\n                                    <div className=\"activated_employee_it\">\n                                        <h4 className=\"title4 mb10\">Activated Employees</h4>\n                                        <div className=\"color5 fz28 fw700\">{this.state.data.length}</div>\n                                    </div>\n                                    <div className=\"activated_employee_it2\">\n                                        <span>Available Slots: 36</span>\n                                        <img src=\"images/icons/twotone-people.svg\" alt=\"\" />\n                                    </div>\n                                </div>\n                              <div className=\"batch-select-box\">\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\n                                <div style={{'width':'100px'}}>\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n      classNamePrefix=\"batch\"/>\n                                </div>\n                              </div>\n                              <div className=\"gdpr-check-box title4\">\n                                  GDPR <input type=\"checkbox\" name=\"gdpr\" id=\"gdpr\" onChange={this.handleCheck} defaultChecked={this.state.checked}/>\n                              </div>\n                            </div>\n                            <div className=\"head_box_c\">\n                                <form className=\"form_search\">\n                                <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\n                                    <button>\n                                        <img src=\"images/icons/search-icon.svg\" alt=\"\" />\n                                    </button>\n                                </form>\n                            </div>\n                            <div className=\"head_box_r\">\n                                <a className=\"btn btn-radius btn-size btn-white\" href=\"/add-employee\">\n                                    <i>\n                                        <img src=\"images/icons/User.svg\" alt=\"\" />\n                                    </i>\n                                    <span>Add new</span>\n                                </a>\n                                <span className=\"btn btn-radius btn-size btn-blue btn-icon-right export\" onClick={ this.handleBtnClick }>\n                                    <i>\n                                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\n                                    </i>\n                                    <span>Add to Course</span>\n                                </span>\n                            </div>\n                        </div>\n              <div id=\"employee-content\" style={{'display':'none','width':'145%'}}>\n                {(this.state.data.length !== 0) ?<div className=\"head_box_l mb15\"><MyExportCSV {...props.csvProps} /></div>:''}\n              \n                {this.state.data.length !== 0? \n                <PaginationProvider pagination={ paginationFactory(options) }>\n                {({ paginationProps, paginationTableProps}) => (\n                  <div>\n                    \n                  <BootstrapTable\n                    { ...props.baseProps }\n                    selectRow={ selectRow } \n                    rowEvents={ rowEvents }\n                    { ...paginationTableProps }\n                    filter={ filterFactory() }\n                    classes=\"table\"\n                    noDataIndication={ () => <NoDataAvailable /> }\n                  />\n                  <PaginationListStandalone\n                    { ...paginationProps }\n                  />\n                  </div>\n                  ) \n                }\n                </PaginationProvider>\n                 : <NoDataAvailable /> } \n               \n              </div>\n              <NoDataIndication />\n              </section>\n        </main>\n            )\n          }\n        </ToolkitProvider>\n        \n    );\n  }\n}\nexport default Employees;\n\n\n","import React, { Component } from \"react\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport ReactFormInputValidation from \"react-form-input-validation\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport $ from 'jquery';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Upload, Icon, message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nclass AddEmployee extends Component {\r\n constructor() {\r\n    super();\r\n    this.state = {\r\n      countryCode: '+34',\r\n      phone: '+34',\r\n      startDate: new Date(),\r\n      fields: {\r\n        fname: \"\",\r\n        email: \"\",\r\n        lname:\"\",\r\n        location:\"\",\r\n        dni:\"\",\r\n        deptname:\"\",\r\n      },\r\n      errors: {}\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.errors = [];\r\n    this.form = new ReactFormInputValidation(this);\r\n    this.form.useRules({\r\n        fname: \"required\",\r\n        email: \"required|email\",\r\n    });\r\n\r\n    this.form.onformsubmit = (fields) => {\r\n      \r\n      var notification=this.state.notification\r\n      let actVal = this.refs['actionVal'].value;\r\n      if((actVal === '') || (actVal === 'fillform')){\r\n        let countryCode = \"\";\t\r\n        let mobile = \"\";\t\r\n        let mobileData = this.state.phone;\t\r\n        if(mobileData !== \"\"){\t\r\n          /*let mobileDataArr = mobileData.split(\" \",1);\t\r\n          countryCode = (mobileDataArr[\"0\"]).replace ( /[^0-9]/g, '' );\t\r\n          let n = mobileData.indexOf(\" \");\t\r\n          mobile = (mobileData.substr(parseInt(n+1))).replace ( /[^0-9]/g, '' );*/\t\r\n          let mobileDataArr = mobileData.split(\" \");  \r\n          countryCode = (mobileDataArr[\"0\"]).replace ( /[^0-9]/g, '' ); \r\n          let n = mobileData.indexOf(\" \");  \r\n          if(n >= 0){\r\n            mobile = (mobileData.substr(parseInt(n+1))).replace ( /[^0-9]/g, '' );\r\n          }\r\n        }\t\r\n        var params = {\r\n          userId:fields.email,\r\n          CompanyCode:global.companyCode,\r\n          FirstName:fields.fname,\r\n          LastName:fields.lname,\r\n          Location:fields.location,\r\n          Mobile:mobile,\t\r\n          CountryCode:countryCode,\r\n          DNI:fields.dni,\r\n          mobileOS:$('#mobileos').val(),\r\n          subscriptionValidDate:this.state.startDate,\r\n          company:fields.deptname,\r\n          weeklyEmail:$('#wemail').val(),\r\n          disable:$('#status').val(),\t\r\n          status:\"\",\r\n          lastLoginDate:\"\",\r\n          fcmToken:\"\",\r\n          versionNumber:\"\",\r\n          accountActivated:\"\",\r\n          activationDate:\"\",\r\n          deviceMake:\"\",\r\n          deviceOsVersion:\"\",\r\n          Mobilewcode:\"\",\r\n          token:\"\",\r\n          verification_code:\"\",\r\n          acceptedGDPR:\"\",\r\n          versionName:\"\",\r\n          updatedAt:\"\",\r\n          altEmail:\"\"\r\n        }\r\n        global.api.addEmployee(params)\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          if(json.data.message===\"Employee data inserted Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n        })\r\n        .catch(err =>{\r\n            //alert(err);\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=err.data.error\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n        });\r\n    }else{\r\n      alert(\"Upload File\");\r\n    }\r\n  }\r\n }\r\n  handleChange(e){\r\n    this.setState({countryCode: e.target.value});\r\n  }\r\n  handleCheck(e) {\r\n     this.setState({actionVal: e.currentTarget.dataset.id})\r\n     this.refs['actionVal'].value = e.currentTarget.dataset.id;\r\n  }\r\n  \r\n  render(){\r\n    const props = {\r\n      name: 'file',\r\n      accept: \".csv\",\r\n      multiple: true,\r\n      action: 'https://none',\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n           let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n               console.log(e.target.result);\r\n            }\r\n            reader.readAsText(info.file.originFileObj);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n    return (\r\n        \r\n      <main className=\"offset\" id=\"content\">\r\n      <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n    <section className=\"section_box\">\r\n      <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n        <h1 className=\"title1 mb185\">Add Employees</h1>\r\n        <form onSubmit={this.form.handleSubmit} className=\"form_employee js-tabs\">\r\n          <ul className=\"js-tabs-list tab-list\">\r\n            <li data-id=\"fillform\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Fill Form</span>\r\n            </li>\r\n            <li data-id=\"uploadfile\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Upload from File</span>\r\n            </li>\r\n          </ul>\r\n          <div className=\"js-tabs-box tab-box\">\r\n            <div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Personal Information</h2>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">FIRST Name</label>\r\n                    \r\n                    <input type=\"text\" className=\"form_input\" name=\"fname\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.fname}/>\r\n                    <label className=\"error_message\"> {this.state.errors.fname ? this.state.errors.fname : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">LAST Name</label>\r\n                    <input type=\"text\" className=\"form_input\" name=\"lname\" onChange={this.form.handleChangeEvent} value={this.state.fields.lname}/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">EMAIL</label>\r\n                    <input className=\"form_input\" type=\"email\" name=\"email\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.email}/>\r\n                    <label className=\"error_message\"> {this.state.errors.email ? this.state.errors.email : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">mobile</label>\r\n                    <div className=\"p_rel selectt\">\r\n                        <PhoneInput className=\"form_input form_input_tel\" country={'us'} value={this.state.phone} \r\n                        onChange={phone => this.setState({ phone })} \r\n                        enableSearch required= 'true' ref=\"mobile\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Location</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"location\" name=\"location\" ref=\"location\" onChange={this.form.handleChangeEvent} value={this.state.fields.location}/> \r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">dni</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"dni\" name=\"dni\" ref=\"dni\" onChange={this.form.handleChangeEvent} value={this.state.fields.dni}/> \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Work Information</h2>\r\n                <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Department</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"deptname\" name=\"deptname\" ref=\"deptname\" onChange={this.form.handleChangeEvent} value={this.state.fields.deptname}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                  <h2 className=\"title2 fw400 form_title mb25\">Additional Information</h2>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">MOBILE OS</label>\r\n                        <select className=\"styler select2 w182\" id=\"mobileos\" name=\"mobileos\" ref=\"mobileos\" >\r\n                            <option value=\"android\">Android</option>\r\n                            <option value=\"IOS\">IOS</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Subscription valid date</label>\r\n                        <div>\r\n                            <div className=\"datepicker_box mb20\">\r\n                                <div className=\"p_rel\">\r\n                                <DatePicker className=\" form_input\" selected={this.state.startDate} onChange= {date => this.setState({ startDate: date })} dateFormat=\"dd-MM-yyyy\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">weekly email</label>\r\n                        <select className=\"styler select2 w182\" id=\"wemail\" name=\"wemail\" ref=\"wemail\">\r\n                          <option value=\"No\">No</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Status</label>\r\n                        <select className=\"styler select2 w182\" id=\"status\" name=\"status\" ref=\"status\" >\r\n                        <option value=\"F\">Unarchive</option>\r\n                        <option value=\"T\">Archive</option>\r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"form_row_btn\">\r\n                <button className=\"btn btn-white btn-radius btn-size\">\r\n                  <span>Cancel</span>\r\n                </button>\r\n                <button className=\"btn btn-blue btn-radius btn-icon-left\">\r\n                  \r\n                  <span>Add employee</span>\r\n                </button>\r\n                <input type=\"hidden\" id=\"action\" name=\"actionVal\" ref=\"actionVal\"/>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              \r\n              <Dragger {...props} style={{width:'100%'}}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <Icon type=\"inbox\" />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  Support for a single or bulk upload. Strictly prohibit from uploading company data or other band fileList\r\n                </p>\r\n              </Dragger>\r\n            </div>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n</main>\r\n    )\r\n  }\r\n}\r\nexport default AddEmployee;\r\n\r\n","import React, { Component } from \"react\";\n//import DataTable from 'react-data-table-component';\nimport $ from 'jquery';\nclass EmployeestoCourses extends Component {\n  constructor(props) {\n    super(props);\n    if(this.props.location.state===undefined){\n      window.location.href = '/employee';\n    }\n  //console.log(this.props.location.state.userid)\n    this.state = {\n      data : [],\n      userid:this.props.location.state.userid\n    }\n    this.state.selected = []\n    \n  }\n  componentDidMount() {\n    global.api.getCourseList(global.companyCode)\n                .then(res => res)\n                .then(data => this.setState({data}))\n                .catch(err =>{\n                    alert(err);\n                })\n    \n  }\n  \n  handleChkChange = (e) => {\n    console.log(e.target.value)\n    \n    //console.log(e.target.checked)\n    var isSelect = e.target.checked\n    var chkValue = e.target.value\n    if (isSelect) {\n      this.setState(() => ({\n        selected: [...this.state.selected, chkValue]\n      }));\n    } else {\n      this.setState(() => ({\n        selected: this.state.selected.filter(x => x !== chkValue)\n      }));\n    }\n  }\n  \n  onSubmit = (e) => {\n    console.log($(e.target.parentNode.parentNode.parentNode))\n    console.log($('#popup_box').get(0).className)\n    window.location.href = '#popup_box'\n    //$('#popup_box').get(0).className = 'mfp popup_container'\n   /*  e.preventDefault();\n    let arr = [];\n    for (var key in this.state) {\n      if(this.state[key] === true) {\n        arr.push(key);\n      }\n    }\n    console.log(arr) */\n    /* let data = {\n      check: arr.toString() \n    }; */\n   /*  axios.post('http://localhost:4000/checks/add', data)\n          .then(res => console.log(res.data)); */\n  }\n  render() {\n    \n    const courseList = this.state.data.map((item, index) => {\n      var imgPath = '/images/icons/icon_module_'+item.moduleNumber+'.svg'\n      return (\n        <label className=\"course_wraps_radio\" key={index} >\n            <input type=\"radio\" id={item.Id} name=\"courses\" hidden=\"hidden\" onChange={this.handleChkChange} value={item.Id}/>\n            <span>\n                <span className=\"course_wraps_img course_wraps_img_radio\">\n                    <img src={imgPath} alt=\"\" />\n                </span>\n                <span className=\"course_wraps_text\">\n                    <h3 className=\"title3\">{item.courseName}</h3>\n                    <p>{item.Id} Weeks</p>\n                </span>\n            </span>\n        </label>\n        \n      );\n    });\n    \n    return (<main className=\"offset\" id=\"content\">\n    <section className=\"section_box\">\n        <h1 className=\"title1 mb50\">Employees</h1>\n        {/* <form onSubmit = {this.onSubmit}> */}\n        <div className=\"head_box type2 mb20\">\n            <div className=\"head_box_l\">\n                <div className=\"activated_employee type2\">\n                    <div className=\"activated_employee_it mr30\">\n                        <img className=\"img\" src=\"/images/icons/twotone-people2.svg\" alt=\"\" />\n                    </div>\n                    <div className=\"activated_employee_it mr60\">\n                        <h4 className=\"title4 fw400 mb10\">Activated Employees</h4>\n                        <div className=\"color5 fz28 fw700\">54</div>\n                    </div>\n                    <div className=\"activated_employee_it\">\n                        <h4 className=\"title4 fw400 mb10\">Open Slots</h4>\n                        <div className=\"color5 fz28 fw300\">35</div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"head_box_c\">\n                <span className=\"form_search\">\n                    <input type=\"text\" placeholder=\"Search for employee\" />\n                    <button>\n                        <img src=\"/images/icons/search-icon.svg\" alt=\"\" />\n                    </button>\n                </span>\n            </div>\n            <div className=\"head_box_r\">\n                <a className=\"btn btn-radius btn-size btn-white\" href=\"/employee\">\n                    <i>\n                        <img src=\"/images/icons/User.svg\" alt=\"\" />\n                    </i>\n                    <span>Add new</span>\n                </a>\n                <a className=\"btn btn-radius btn-size btn-blue btn-icon-right popup-link\" href='#popup_box1' onClick={this.onSubmit}>\n                    <i>\n                        <img src=\"/images/icons/arrow_next2.svg\" alt=\"\" />\n                    </i>\n                    <span>Add to Course</span>\n                </a>\n            </div>\n        </div>\n        <div className=\"head_box type2 mb105\">\n            <div className=\"head_box_l fd\">\n                <div className=\"following_box\">\n                    <span className=\"following_img\">\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\n                    </span>\n                    <span>\n                        <b>+65 more</b>&nbsp;will be added to the following</span>\n                </div>\n            </div>\n            \n        </div>\n        \n        <div className=\"course_wraps mb105\">\n            <h2 className=\"mb30 fw400\">General Courses</h2>\n            <div className=\"course_wraps_it\">\n            {courseList}\n                \n            </div>\n        </div>\n        {/* <div className=\"course_wraps\">\n            <h2 className=\"mb30 fw400\">Management</h2>\n            <div className=\"course_wraps_it\">\n            {courseList}\n            </div>\n        </div> */}\n        {/* </form> */}\n    </section>\n    \n</main>)\n\n  }\n}\n\n\nexport default EmployeestoCourses;\n","import React, { Component } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationListStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport Loader from \"react-loader-spinner\";\nimport $ from 'jquery';\nimport {Pie } from 'react-chartjs-2';\nimport Select from 'react-select';\n\nclass Reports extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      columns:[],\n      data:[]\n    };\n    this.state.selected = [];\n    this.state.userData = [];\n    this.state.companyData = [];\n    this.state.selectedCompany = global.companyCode;\n    this.state.selectedCompanyName = global.companyName;\n    this.state.batchData = [];\n    this.state.selectedBatch = '';\n    this.state.courseData = [];\n    this.state.selectedCourse = '';\n    this.state.routeData = [];\n    this.state.selectedRoute = [];\n    this.state.selectedRouteText = [];\n    this.state.noDataIndication = 'none'\n    this.state.noDataAvailable = 'none'\n    this.state.avgVals = [];\t\t\n    this.state.avgPercentTable = \"\";\t\t\n    this.state.grp1Val = 0;\t\t\n    this.state.grp2Val = 0;\t\t\n    this.state.grp3Val = 0;\t\t\n    this.state.grp1PVal = 0;\t\t\n    this.state.grp2PVal = 0;\t\t\n    this.state.grp3PVal = 0;\n    this.state.csvFileName = global.companyName +  \"-\" + this.getDate() +\".csv\";\n    this.state.pieChartDisplay = false\n    this.state.baseColNames = [{\n      dataField: \"i_d\",\n      text: \"Id\",\n      hidden: true\n    },\n    {\n      dataField: \"userId\",\n      text: \"Employee\",\n      classes:'reports-text',\n      sort: true,\n       headerStyle: {\n        width:'250px',\n        textTransform: 'none',\n        cursor:'pointer'\n      }\n    },\n    {\n      text: 'Name',\n      dataField: 'Name',\n      classes:'reports-text',\n      headerStyle: {\n        width:'200px',\n        textTransform: 'none'\n      }\n    } ,\n    {\n      text: 'MobileOS',\n      dataField: 'mobileOS',\n      headerStyle: {\n        width:'150px',\n        textTransform: 'none'\n      }\n    }]\n  }\n  getDate() {\n    var tempDate = new Date();\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\n    return date;\n  }\n  \n  componentDidMount() {\n    const companyCode = this.state.selectedCompany;\n   \n    //For Batch\n    global.api.getBatch(companyCode)\n    \n    .then(\n      data => {\n        data.sort(function(a, b) {\n          return a.value - b.value;\n        });\n        this.setState({ batchData: data });\n    });\n  } \n  onBatchChange = selectedBatch => {\n    this.setState({ selectedBatch });\n    console.log(`Option selected:`, selectedBatch.value);\n    var companyCode = this.state.selectedCompany;\n      var batchNo = selectedBatch.value;\n      global.api.getCourseBatch(companyCode,batchNo)\n      .then(\n        data => {\n        this.setState({ courseData: data });\n      });\n      this.setState({ selectedCourse: ''});\n      this.setState({ routeData: []});\n      this.setState({selectedRouteText: []});\n      this.setState({selectedRoute: []});\n      this.setState({data: []}); \n  };\n  \n  onCourseChange = selectedCourse => {\n    this.setState({ selectedCourse });\n    console.log(`Option selected:`, selectedCourse);\n    const selectedCourseId = selectedCourse.value;\n    \t\n    global.api.getRouteList(selectedCourseId)\n    .then(response => response)\n    .then(\n      data => {\n        this.setState({ routeData: data});\n    });\n    this.setState({ selectedRoute: []})\n    this.setState({selectedRouteText: []});\t\n    this.setState({selectedRoute: []});\n    this.setState({data: []});\n    \n    /*reports call*/\n    \n    this.setState({noDataIndication:'block'});\n    this.setState({noDataAvailable:'none'});\n    $('#reports').show();\n    $('#table_wraps').show();\n    $('#attenPagination').hide();\n    var colNames = this.state.baseColNames;\n    this.setState({columns: colNames});\n    const selectedCompany = this.state.selectedCompany;\n    const selectedBatch = this.state.selectedBatch.value;\n    var courseId =  selectedCourse.value;\n    this.setState({pieChartDisplay:false})\n    var selectedRoute = \"\";\n    \n\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\n    .then(res => res)\n    .then(\n      result => {\n        console.log('spinner hide')\n        this.setState({noDataIndication:'none'});\n        this.setState({noDataAvailable:'block'});\n        $('#attenPagination').show();\n        this.setState({data: result});\n      }\n    )\n  };\n  \n  onRouteSelect = selectedRoute => {\n    this.setState({ selectedRoute });\n    console.log(`Option selected:`, selectedRoute);\n    this.setState({selectedRouteText: []});\n    let selRoute = [];\n    let value = [];\n    if(selectedRoute !== null){\n      for (var i = 0; i < selectedRoute.length; i++) {\n          value.push(selectedRoute[i]);\n          selRoute.push(selectedRoute[i].label);\n      }\n    }\n    this.setState({selectedRouteText: selRoute});\n    this.setState({selectedRoute: value}); \n  };\n  handleBtnClick = () => {\n    this.setState({noDataIndication:'block'});\n    this.setState({noDataAvailable:'none'});\n    $('#reports').show();\n    $('#table_wraps').show();\n    $('#attenPagination').hide();\n    this.setState({data: []});\n    this.forceUpdate();\n    \n    let colNames = [...this.state.baseColNames];\n    \n    var selectedRouteText = this.state.selectedRouteText;\n    console.log('selectedRouteText',selectedRouteText)\n    console.log('colNames',this.state.baseColNames)\n    var colCount = 0\n    for (var row1 of selectedRouteText) {\n      row1 = row1.replace(\"\\r\\n\", \" \");\n     var routeCols = {\n        text: row1,\n        dataField: row1,\n        headerStyle: {\n          width:'100px',\n          whiteSpace: 'normal'\n        }\n      };\n      colCount = colCount+1\n      colNames.push(routeCols);\n      \n    }\n    if(selectedRouteText.length > 0){\n      var avg = {\n        text: \"Avg\",\n        dataField: \"avg\",\n        sort:true,\n        headerStyle: {\n          cursor:'pointer',\n          width:'100px',\n        },\n      }\n      colCount = colCount+1\n      colNames.push(avg);\n    }\n    \n    this.setState({columns: colNames});\n    \n    this.setState({avgVals: []});\t\t\n    let avgValsarr = [];\n\n    const selectedCompany = this.state.selectedCompany;\n    const selectedBatch = this.state.selectedBatch.value;\n    var selectedCourse =  this.state.selectedCourse.value;\n    \n    let selectedRoute = this.state.selectedRoute;\n    if(selectedRoute.length > 0){\n      var value = [];\n      for (var i = 0; i < selectedRoute.length; i++) {\n          value.push(selectedRoute[i].value);\n      }\n      selectedRoute = value.toString();\n    }else{\n      selectedRoute = \"\";\n      this.setState({pieChartDisplay:false})\n    }\n\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\n    .then(res => res)\n    .then(\n      result => {\n        console.log('spinner hide')\n        this.setState({noDataIndication:'none'});\n        this.setState({noDataAvailable:'block'});\n        $('#attenPagination').show();\n        const items = [];\n        for (const row of result) {\n          let item = row;\n          let totRoutes = 0;\n          let avgRoutes = 0;\n          if(selectedRouteText.length > 0){\n            for (var row1 of selectedRouteText){\n              row1 = row1.replace(\"\\r\\n\", \" \");\n              if(row.Routes[row1] !== undefined){\n                item[row1] = row.Routes[row1]['routePercent'];\n                totRoutes = parseInt(totRoutes)+parseInt(row.Routes[row1]['routePercent']);\n              }\n            }\n            if(totRoutes > 0){\n              avgRoutes = Math.round(totRoutes/(selectedRouteText.length));\n            }\n            item['avg'] = avgRoutes;\n            avgValsarr.push(avgRoutes);\n          }\n          items.push(item);\n        }\n        this.setState({avgVals: avgValsarr});\t\n        if(selectedRoute.length > 0){\t\n\n          let grp1 = 0;\t\t\n          let grp2 = 0;\t\t\n          let grp3 = 0;\t\t\n          let grp1Percent = 0;\t\t\n          let grp2Percent = 0;\t\t\n          let grp3Percent = 0;\t\t\n          for (const avgData of avgValsarr){\t\t\n            if (avgData >= 61 && avgData <= 100) {\t\t\n              grp3 = grp3+1;\t\t\n            }else if(avgData >= 31 && avgData <= 60){\t\t\n              grp2 = grp2+1;\t\t\n            }else{\t\t\n              grp1 = grp1+1;\t\t\n            }\t\t\n          }\t\t\n          grp1Percent = Math.round((grp1/(avgValsarr.length))*100);\t\t\n          grp2Percent = Math.round((grp2/(avgValsarr.length))*100);\t\t\n          grp3Percent = Math.round((grp3/(avgValsarr.length))*100);\t\t\n          this.setState({grp1Val: grp1});\t\t\n          this.setState({grp2Val: grp2});\t\t\n          this.setState({grp3Val: grp3});\t\t\n          this.setState({grp1PVal: grp1Percent});\t\t\n          this.setState({grp2PVal: grp2Percent});\t\t\n          this.setState({grp3PVal: grp3Percent});\n          this.setState({pieChartDisplay:true})\n        }\n        this.setState({data: items});\n        \n      }\n    )\n  }\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\n    var elementName = ''\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\n      elementName = e.target.parentNode.parentNode\n    } \n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\n      \n      elementName = e.target.parentNode\n    }\n\n    var columnCount = $(elementName).get(0).cells;\n    if(columnCount !== undefined){\n      if (isSelect) {\n        for (var i=0; i < columnCount.length; i++) {\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\n        }\n        this.setState(() => ({\n          selected: [...this.state.selected, row]\n        }));\n      } else {\n        for (var j=0; j < columnCount.length; j++) {\n          \n            $(elementName.cells[j]).get(0).className='reports-text';\n        }\n        this.setState(() => ({\n          selected: this.state.selected.filter(x => x !== row)\n        }));\n      }\n    }\n  }\n  handleOnSelectAll = (isSelect, rows, e) => {\n    \n    var elementName = ''\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\n      elementName = e.target.parentNode.parentNode\n    }else{\n      elementName = e.target.parentNode\n    }\n    var columnCount = $(elementName).get(0).cells;\n    \n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\n    \n    if (isSelect) {\n      for (var i=0; i < rowCount.length; i++) {\n        for (var j=0; j < columnCount.length; j++) {\n          \n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\n        }\n      }\n      this.setState(() => ({\n        selected: rows\n      }));\n    } else {\n      for (var ii=0; ii < rowCount.length; ii++) {\n        for (var jj=0; jj < columnCount.length; jj++) {\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\n        }\n      }\n      this.setState(() => ({\n        selected: []\n      }));\n    }\n    \n  }\n  \n  render() {\n    const pieChat = {\t\t\n      labels: ['0-30%', '30%-60%','60%-100%'],\t\t\n      datasets: [\t\t\n      {\t\t\n        label: 'Avg % Completion',\t\t\n        backgroundColor: [\t\t\n          '#B21F00',\t\t\n          '#2FDE00',\t\t\n          '#00A6B4',\t\t\n        ],\t\t\n        hoverBackgroundColor: [\t\t\n        '#501800',\t\t\n        '#175000',\t\t\n        '#003350'\t\t\n        ],\t\t\n        data: [this.state.grp1PVal, this.state.grp2PVal, this.state.grp3PVal]\t\t\n        }\t\t\n      ]\t\t\n    };\n    const MyExportCSV = props => {\n      const handleClick = () => {\n        props.onExport();\n      };\n      return (\n        \n        <span\n          className=\"btn btn-radius btn-size btn-white export\"\n          onClick={handleClick} style={{marginTop:'20px'}}\n        >\n          <span>Export CSV</span>\n        </span>\n      );\n    };\n    \n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: false,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll,\n      headerColumnStyle: {\n        width:'1px',\n        paddingLeft:'5px'\n      }\n      \n    };\n    const options = {\n      custom: true,\n      totalSize: this.state.data.length,\n      sizePerPage: 100,\n    };\n    const NoDataIndication = () => (\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\n                Loading....\n      </div>\n    ); \n    const NoDataAvailable = () => (\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\n       No Data Available...\n      </div>\n    );\n    const ReportSummary = () =>(\n      <div className=\"section_wrap\">\n            <div className=\"box w1\">\n             \n              <div className=\"white_box type2\" data-mh=\"white_box\">\n                <table className=\"activity_table\">\n                    <thead>\n                        <tr>\n                            <th className=\"percent-table-th\"></th>\n                            <th>\n                                <span>Range</span>\n                            </th>\n                            <th className=\"percent-table-th-width\">\n                                <span>User</span>\n                            </th>\n                            <th className=\"percent-table-th-width\">\n                                <span>Percentage(%)</span>\n                            </th>\n                            <th className=\"percent-table-th\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                          <td className=\"percent-table-th\"></td>\n                          <td>\n                              <div className=\"activity_name\">\n                                  <span>60-100%</span>\n                              </div>\n                          </td>\n                          <td>\n                              <div className=\"activity_couse\">{this.state.grp3Val}</div>\n                          </td>\n                          <td>\n                              <div className=\"activity_time\">{this.state.grp3PVal}%</div>\n                          </td>\n                          <td className=\"percent-table-th\"></td>\n                      </tr>\n                      <tr>\n                          <td className=\"percent-table-th\"></td>\n                          <td>\n                              <div className=\"activity_name\">\n                                  <span>30-60%</span>\n                              </div>\n                          </td>\n                          <td>\n                              <div className=\"activity_couse\">{this.state.grp2Val}</div>\n                          </td>\n                          <td>\n                              <div className=\"activity_time\">{this.state.grp2PVal}%</div>\n                          </td>\n                          <td className=\"percent-table-th\"></td>\n                      </tr>\n                      <tr>\n                          <td className=\"percent-table-th\"></td>\n                          <td>\n                              <div className=\"activity_name\">\n                                  <span>0-30%</span>\n                              </div>\n                          </td>\n                          <td>\n                              <div className=\"activity_couse\">{this.state.grp1Val}</div>\n                          </td>\n                          <td>\n                              <div className=\"activity_time\">{this.state.grp1PVal}%</div>\n                          </td>\n                          <td className=\"percent-table-th\"></td>\n                      </tr>\n                    </tbody>\n                </table>\n            </div>\n          </div>\n          <div className=\"box w2\">\n          \n            <div className=\"white_box\" data-mh=\"white_box\">\n            <Pie\n          data={pieChat}\n          options={{\n            title:{\n              display:true,\n              text:'Average % Completion Reports',\n              fontSize:15\n            }\n          }}\n        />\n            </div>\n          </div>\n          \n        </div>\n    );\n    return (\n      <main className=\"offset\" id=\"content\">\n        <section className=\"section_box\">\n          <h1 className=\"title1 mb25\">Completion Reports</h1>\n          <h4 className=\"title4 mb40\">For {this.state.selectedCompanyName}</h4>\n          <div className=\"head_box type2 mb5\" id=\"completion_reports\">\n            <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\n              <div className=\"head_box_l\">\n                <div className=\"activated_employee type2\">\n                  <div style={{ paddingRight: \"20px\" }}>\n                    <h4 className=\"title4 mb15 fw500\">Batch</h4>\n                    <div style={{'width':'100px'}}>\n                    <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n    classNamePrefix=\"batch\"/>\n                      \n                    </div>\n                  </div>\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\n                    <h4 className=\"title4 mb15 fw500\">Course</h4>\n                    <div style={{'width':'300px'}}>\n                    <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n    classNamePrefix=\"course\"/>\n                      \n                    </div>\n                  </div>\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\n                    <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\n                    <div style={{'width':'400px'}}>\n                    <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n    classNamePrefix=\"route \" closeMenuOnSelect={false}/>\n                     \n                    </div>\n                  </div>\n                  <div className=\"head_box_r\">\n                  <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\n                    <span\n                      className=\"btn btn-radius btn-size btn-blue btn-icon-right export\"\n                      onClick={this.handleBtnClick}\n                    >\n                      <i>\n                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\n                      </i>\n                      <span>Submit</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"reports\" className=\"scrollmenu\" style={{'display':'none'}}>\n          <ToolkitProvider\n          keyField=\"i_d\"\n          data={this.state.data}\n          columns={this.state.columns}\n          className=\"table type2\"\n          exportCSV = {{ fileName: this.state.csvFileName }}\n        >\n        {props => (\n              <div  id=\"table_wraps\" style={{'display':'none'}} >\n              {(this.state.pieChartDisplay === true && this.state.data.length !== 0) ?<ReportSummary />:''}\n              <div className=\"head_box_c mb15\"><MyExportCSV {...props.csvProps} /></div>\t\n              <div className=\"table_wraps\">\n                {this.state.data.length !== 0? \n                <PaginationProvider pagination={paginationFactory(options)}>\n                  {({ paginationProps, paginationTableProps }) => (\n                    <div className=\"attenPagination\" id=\"attenPagination\">\n                      <BootstrapTable\n                      selectRow={ selectRow } \n                      bootstrap4\n                        {...props.baseProps}\n                        {...paginationTableProps}\n                        classes=\"reports_table\"\n                        noDataIndication={ () => <NoDataAvailable /> }\n                      />\n                      <PaginationListStandalone {...paginationProps} />\n                    </div>\n                  )}\n                </PaginationProvider>\n                :  <NoDataAvailable />}\n                <NoDataIndication />\n              </div>\n              </div>\n        )}\n      </ToolkitProvider>\n      \n      </div>\n      \n      </section>\n          </main>\n    );\n  }\n}\nexport default Reports;\n\n\n","import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {PaginationProvider,PaginationListStandalone} from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\n//import Loader from \"react-loader-spinner\";\nimport filterFactory from 'react-bootstrap-table2-filter';\nimport { Progress } from 'reactstrap';  \nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport * as moment from 'moment'\n\nconst { SearchBar } = Search;\n\nclass CourseDetails extends Component {\n  \n  constructor(props) {\n    super(props);\n    if(this.props.location.state===undefined){\n      window.location.href = '/courses';\n    }\n    \n    //Set attendance Table Settings\n    this.state = {\n      courseId:this.props.location.state.courseId,\n      courseName:this.props.location.state.courseName,\n      attendanceColumns: [\n        { dataField: \"Id\", text: \"Id\", csvExport: false, hidden: true },\n        { \n          text: \"Email\",\n          dataField: \"userId\",\n          sort: true,\n          classes:'entry-text',\n          headerStyle: {\n            width: \"25%\"\n          }\n        },\n        {\n          dataField: \"FirstName\",\n          text: \"FirstName\",\n          sort: true,\n          headerStyle: {\n            width: \"15%\"\n          }\n        },\n        {\n          dataField: \"LastName\",\n          text: \"LastName\",\n          headerStyle: {\n            width: \"15%\"\n          }\n        },\n        {\n          text: \"Registered\",\n          dataField: \"dateRegistered\",\n          headerStyle: {\n            width: \"10%\"\n          }\n        },\n        {\n          text: \"TimeSpent\",\n          dataField: \"totalTimeSpent\",\n          headerStyle: {\n            width: \"10%\"\n          }\n        },\n        {\n          text: \"Completion\",\n          dataField: \"completionPercentage\",\n          formatter: completionFormater,\n          headerStyle: {\n            width: \"20%\"\n          }\n        }\n      ],\n      attendanceData: [{'message':'nodata'}],\n      empColumns: [\n        \n        {\n          dataField: \"FirstName\",\n          text: \"FirstName\",\n          sort: true,\n          headerStyle: {\n            width: \"15%\"\n          }\n        },\n        {\n          dataField: \"LastName\",\n          text: \"LastName\",\n          headerStyle: {\n            width: \"15%\"\n          }\n        },\n        {\n          text: \"EMAIL\",\n          dataField: \"userId\",\n          sort: true,\n          classes: \"entry-text\",\n          headerStyle: {\n            width: \"30%\"\n          }\n        },\n        {\n          text: \"PHONE\",\n          dataField: \"Mobile\",\n          sort: true,\n          headerStyle: {\n            width: \"20%\"\n          }\n        },\n        {\n          text: \"LOCATION\",\n          dataField: \"Location\",\n          formatter: locationFormater,\n          sort: true,\n          headerStyle: {\n            width: \"20%\"\n          }\n        }\n      ],\n      empData: []\n    };\n    \n    this.state.attenSelected = [];\n    this.state.empSelected = [];\n    this.state.empNodata = false;\n    this.state.totalData=[];\n    this.state.notification = {\n      title: '',\n      message: '',\n      type: 'default',                // 'default', 'success', 'info', 'warning'\n      container: 'top-right',                // where to position the notifications\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    };\n    \n    //Column Formatter methods\n    function completionFormater(cell, row) {\n      return (\n        <div className=\"table_progres_bar\">\n          <Progress value={row.completedStatus}>{row.completedStatus}%</Progress>\n        </div>\n      );\n    }\n    function locationFormater(cell, row) {\n      return (\n        <div>\n          <div className=\"table_location\">{row.Location}</div>\n          <div className=\"table_location_it\">Department Name</div>\n        </div>\n      );\n    }\n    \n  }\n  //remote Data Load\n  componentDidMount() {\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\n                .then(res => res)\n                .then((json)=>{\n                  this.setState({attendanceData:json.registered})\n                  this.setState({empData:json.availableToRegister})\n                })\n                .catch(err =>{\n                    alert(err);\n                })\n  }\n  componentWillReceiveProps(newProps) {\n    this.setState(() => ({\n      attenSelected: []\n    }));\n    this.setState(() => ({\n      empSelected: []\n    }));\n    this.setState({attendanceData:[]})\n                  this.setState({empData:[]})\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\n      .then(res => res)\n      .then((json)=>{\n        this.setState({attendanceData:json.registered})\n        this.setState({empData:json.availableToRegister})\n      })\n      .catch(err =>{\n          alert(err);\n      })\n  }\n\n  handleDeleteClick = e => {\n    e.preventDefault();\n    if (this.state.attenSelected.length === 0) {\n      alert(\"please select one user\");\n      return false;\n    } else {\n      var userIds = this.state.attenSelected[0]\n      var companyCode = global.companyCode;\n      //var courseNumber = this.state.courseId\n      global.api.deleteEmpCourse(userIds, companyCode, this.state.courseId)\n      .then(res => res)\n                .then((json)=>{\n                  var notification=this.state.notification\n                  if(json.data.message==='Employee is removed from this Course'){\n                    notification.type='success';\n                    notification.title='Success';\n                    notification.message=json.data.message\n                    store.addNotification({\n                      ...notification\n                    });\n                    this.setState(() => ({\n                      attenSelected: []\n                    }));\n                    this.setState(() => ({\n                      empSelected: []\n                    }));\n                    this.props.history.replace({ //browserHistory.push should also work here\n                      pathname: '/coursedetail',\n                      state: {courseId:this.state.courseId,\n                      courseName:this.state.courseName}\n                    });\n                  }else{\n                    notification.type='danger'\n                    notification.title='Error';\n                    notification.message=json.data.message\n                    store.addNotification({\n                      ...notification\n                    });\n                  }\n                })\n                .catch(err =>{\n                    alert(err);\n                })\n    }\n  };\n  handleAddClick = e => {\n    e.preventDefault();\n    if (this.state.empSelected.length === 0) {\n      alert(\"please select one user\");\n      return false;\n    } else {\n      var userIds = this.state.empSelected[0]\n      var companyCode = global.companyCode;\n      \n      global.api.addEmpCourse(userIds, companyCode, this.state.courseId)\n      .then(res => res)\n                .then((json)=>{\n                  var notification=this.state.notification\n                  if(json.data.message==='Employee is successfully registered for this Course'){\n                    notification.type='success'\n                    notification.title='Success';\n                    notification.message=json.data.message\n                    store.addNotification({\n                      ...notification\n                    });\n                    this.setState(() => ({\n                      attenSelected: []\n                    }));\n                    this.setState(() => ({\n                      empSelected: []\n                    }));\n                    this.props.history.replace({ //browserHistory.push should also work here\n                      pathname: '/coursedetail',\n                      state: {courseId:this.state.courseId,\n                        courseName:this.state.courseName}\n                    });\n                  }else{\n                    notification.type='danger'\n                    notification.title='Error';\n                    notification.message=json.data.message\n                    store.addNotification({\n                      ...notification\n                    });\n                  }\n                })\n                .catch(err =>{\n                    alert(err);\n                })\n    }\n  };\n  handleEmpOnSelect = (row, isSelect, rowIndex, e) => {\n    if (isSelect) {\n      this.setState(() => ({\n        empSelected: [...this.state.empSelected, row.userId]\n      }));\n    } else {\n      this.setState(() => ({\n        empSelected: this.state.empSelected.filter(x => x !== row.userId)\n      }));\n    }\n  }\n  handleEmpOnSelectAll = (isSelect, rows, e) => {\n    const ids = rows.map(r => r.userId);\n    \n    if (isSelect) {\n      \n      this.setState(() => ({\n        empSelected: ids\n      }));\n    } else {\n      this.setState(() => ({\n        empSelected: []\n      }));\n    }\n  }\n  handleAttenOnSelect = (row, isSelect, rowIndex, e) => {\n    \n    if (isSelect) {\n      this.setState(() => ({\n        attenSelected: [...this.state.attenSelected, row.userId]\n      }));\n    } else {\n      this.setState(() => ({\n        attenSelected: this.state.attenSelected.filter(x => x !== row.userId)\n      }));\n    }\n  }\n  handleAttenOnSelectAll = (isSelect, rows, e) => {\n    const ids = rows.map(r => r.userId);\n    if (isSelect) {\n      \n      this.setState(() => ({\n        attenSelected: ids\n      }));\n    } else {\n      this.setState(() => ({\n        attenSelected: []\n      }));\n    }\n  }\n  \n  render() {\n    const MyExportCSV = props => {\n      const handleClick = () => {\n        props.onExport();\n      };\n      return (\n        <span className=\"btn btn-radius btn-size btn-blue export\"  onClick={handleClick}>\n          <span>Export CSV</span>\n        </span>\n      );\n    };\n    const options = {\n      custom: true,\n      sizePerPage: 30,\n      selected:[],\n      /* totalSize: this.state.attendanceData.length, */\n      noDataText: 'Your_custom_text',\n      withoutNoDataText: true\n    };\n    const empOptions = {\n      custom: true,\n      sizePerPage: 30,\n      selected:[],\n      /* totalSize: this.state.empData.length */\n    };\n    const selectRow = {\n      mode: \"radio\",\n      clickToSelect: false,\n      onSelect: this.handleAttenOnSelect,\n      //onSelectAll: this.handleAttenOnSelectAll,\n      headerColumnStyle: {\n        width: \"25px\",\n        paddingLeft: \"5px\"\n      }\n    };\n    \n    const empSelectRow = {\n      mode: \"radio\",\n      clickToSelect: false,\n      onSelect: this.handleEmpOnSelect,\n      /* onSelectAll: this.handleEmpOnSelectAll, */\n      headerColumnStyle: {\n        width: \"25px\",\n        paddingLeft: \"5px\"\n      }\n    };\n    \n    const NoDataAvailable = () => (\n      <div className=\"spinner nodata-available\">\n       No Data Available....\n      </div>\n    );\n    const toDate = moment().format(\"DD-MM-YYYY\");\n    \n    return (\n      <main className=\"offset\" id=\"content\">\n        <section className=\"section_box\">\n          <h4 className=\"title4 mb15 fw500\">Courses</h4>\n          <div className=\"head_box type2 mb55\">\n            <div className=\"head_box_l\">\n              <h1 className=\"title1 mr15\">\n                {this.state.courseName}\n              </h1>\n            </div>\n          </div>\n          \n          <ToolkitProvider\n            keyField=\"i_d\"\n            data={this.state.attendanceData}\n            columns={this.state.attendanceColumns}\n            classes=\"table-atten type2\"\n            exportCSV={{ fileName: `employeeperformace_for_${global.companyName}_${this.state.courseName}_${toDate}.csv` }}\n            search\n            >\n            {props => (\n              <div>\n                <div className=\"head_box type2 mb20\">\n                  <div className=\"head_box_l\">\n                    <h2 className=\"title2 fw400 mr12\">\n                      Attendance / Performance\n                    </h2>\n                  </div>\n                  <div className=\"head_box_c\">\n                    <div className=\"form_search\">\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\n                      <button>\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"head_box_r\">\n                    <MyExportCSV {...props.csvProps} />\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleDeleteClick}>\n                      <span>Delete</span>\n                    </span>\n                  </div>\n                </div>\n                <div className=\"table_wraps\">\n                  <PaginationProvider pagination={paginationFactory(options)}>\n                    {({ paginationProps, paginationTableProps }) => (\n                      <div className=\"attenPagination\">\n                        <BootstrapTable\n                          {...props.baseProps}\n                          selectRow={selectRow}\n                          {...paginationTableProps}\n                          filter={ filterFactory() }\n                          classes=\"table-atten\"\n                          noDataIndication={ () => <NoDataAvailable /> }\n                        />\n                        <PaginationListStandalone {...paginationProps} />\n                      </div>\n                    )}\n                  </PaginationProvider>\n                </div>\n                <div className=\"table_after\"></div>\n              </div>\n            )}\n          </ToolkitProvider>\n          <ToolkitProvider\n            keyField=\"userId\"\n            data={this.state.empData}\n            columns={this.state.empColumns}\n            classes=\"table-atten type2\"\n            search>\n            {props => (\n              <div>\n                <div className=\"head_box type2 mb20\">\n                  <div className=\"head_box_l\">\n                    <h2 className=\"title2 fw400 mr12\">\n                      Available Employees for Enrollment\n                    </h2>\n                  </div>\n                  <div className=\"head_box_c\">\n                    <div className=\"form_search\">\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\n                      <button>\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"head_box_r al_itc\">\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleAddClick}>\n                      <i>\n                        <img src=\"images/icons/User.svg\" alt=\"\" />\n                      </i>\n                      <span> Add new</span>\n                    </span>\n                  </div>\n                </div>\n                <div className=\"table_wraps\">\n                  <PaginationProvider\n                    pagination={paginationFactory(empOptions)}\n                  >\n                    {({ paginationProps, paginationTableProps }) => (\n                      <div className=\"attenPagination\">\n                        <BootstrapTable\n                          {...props.baseProps}\n                          selectRow={empSelectRow}\n                          {...paginationTableProps}\n                          classes=\"table-atten\"\n                          noDataIndication={ () => <NoDataAvailable /> }\n                        />\n                        <PaginationListStandalone {...paginationProps} />\n                      </div>\n                    )}\n                  </PaginationProvider>\n                </div>\n              </div>\n            )}\n          </ToolkitProvider>\n        </section>\n      </main>\n    );\n  }\n}\nexport default CourseDetails;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Select from 'react-select';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\nconst { SearchBar } = Search;\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    function formatter(cell, row) {\n      return (\n        <div className=\"course_child_it\">\n                  <span className=\"btn btn-size3 btn-blue btn-radius export\" name={row.courseName} id={row.courseNumber}>\n                      <span name={row.courseName} id={row.courseNumber}>Go to course</span>\n                  </span>\n              </div>\n    \n        );\n    }\n    \n   \n    function courseFormater(cell, row,rowIndex) {\n\n      let imgPath = '/images/icons/icon_module_'+row.moduleNo+'.svg'      \n      let trId = \"courses_\"+rowIndex\n      return (\n              <div id={trId} className=\"course_child_it\">\n                <div className=\"course_child_img\">\n                    <img src={imgPath} alt=\"\"/>\n                </div>                  \n                <div className=\"course_child_text\">\n                    <div className=\"course_child_title\">{row.courseName}</div>\n                </div>\n              </div>\n              )\n    }\n    this.state = {\n      columns:[{\n        dataField: \"i_d\",\n        text: \"Id\",\n        hidden: true\n       },\n       {\n         text: 'COURSE',\n         dataField: 'courseName',\n         formatter: courseFormater,\n         headerStyle: {\n          width:'38%'\n        }\n       },\n       {\n        text: 'course Number',\n        dataField: \"courseNumber\",\n        headerStyle: {\n          width:'15%'\n        },\n      },\n       {\n        text: \"Batch\",\n        dataField: \"batchNumber\",\n        headerStyle: {\n          width:'7%'\n        }\n       },\n       {\n        dataField: \"moduleNo\",\n        text: \"Module \",\n        headerStyle: {\n          width:'8%'\n        }\n       },\n      \n       {\n        dataField: \"courseStartDate\",\n        text: \"Start Date\",\n        headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'Enrolled',\n         dataField: 'enrolled',\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n        text: '',\n        dataField: \"\",\n        formatter: formatter,\n        headerStyle: {\n          width:'12%'\n        },\n        events: {\n          onClick: (e, column, columnIndex, row, rowIndex) => {\n            \n            this.props.history.push({\n              pathname: '/coursedetail',\n              state: {courseId: row.courseNumber, courseName:row.courseName}\n            });\n          }\n        }\n       \n      }],\n      data : []\n       \n    }\n    \n  }\n  componentDidMount() {\n\n    global.api.getCourseList(global.companyCode)\n                .then(res => res)\n                .then(data => this.setState({data}))\n                .catch(err =>{\n                    alert(err);\n                })\n    //For Batch\n    global.api.getBatch(global.companyCode)\n    .then(\n      data => {\n        data.sort(function(a, b) {\n          return a.value - b.value;\n        });\n        this.setState({ batchData: data });\n    });\n    \n  }\n  onBatchChange = selectedBatch => {\n    this.setState({ selectedBatch });\n    console.log(`Batch selected:`, selectedBatch.value);\n    var batchNumber = selectedBatch.value;\n    global.api.getCourseList(global.companyCode,batchNumber)\n                .then(res => res)\n                .then(data => this.setState({data}))\n                .catch(err =>{\n                    alert(err);\n                })\n    \n  };\n\n  render() {\n    \n    const NoDataIndication = () => (\n      <div className=\"spinner\">\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\n                Loading....\n      </div>\n    );\n    const NoDataAvailable = () => (\n      <div className=\"spinner nodata-available\">\n       No Data Available...\n      </div>\n    );\n        \n    return (<main className=\"offset\" id=\"content\" style={{'backgroundColor':'#f2f3f8'}}>\n            <section className=\"section_box\">\n                <div className=\"head_box type2 mb25\">\n                    <div className=\"head_box_l\">\n                        <h1 className=\"title1 m_b_zero\">Courses</h1>\n                        <div className=\"batch-select-box\">\n                          <span className=\"title4 \">Batch</span>\n                        </div>\n                        <div className=\"batch-select-box\">\n                          <div style={{'width':'100px'}}>\n                            <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n      classNamePrefix=\"batch\"/>\n                          </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                <div className=\"course_container\">\n                {this.state.data.length !== 0? \n                    \n                        <ToolkitProvider\n                        keyField=\"i_d\"\n                        data={ this.state.data }\n                        columns={ this.state.columns }\n                        classes=\"course_table\"\n                        search\n                        >\n                        {props => (\n                            <div className=\"head_box type2 mb20\">\n                              <div className=\"head_box_c\">\n                                <div className=\"form_search\">\n                                  <SearchBar { ...props.searchProps } placeholder=\"Search for course \"/>\n                                  <button>\n                                      <img src=\"images/icons/search-icon.svg\" alt=\"\" />\n                                  </button>\n                                </div>\n                              </div>\n                              <BootstrapTable\n                                { ...props.baseProps }\n                                filter={ filterFactory() }\n                                classes=\"course_table\"\n                                noDataIndication={ () => <NoDataAvailable /> }\n                              />\n                              </div>\n                        )}\n                      </ToolkitProvider>\n                    :<NoDataIndication />}\n                </div>\n            </section>\n        </main>)\n  }\n}\nexport default Courses;\n","import React, { Component } from \"react\";\r\n\r\nimport { Textbox, Textarea } from 'react-inputs-validation';\r\n    import \"../styles/react-inputs-validation.min.css\";\r\n    import Select from 'react-select';\r\n    import $ from 'jquery';\r\nclass Firebase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n          title: \"\",\r\n          message: \"\",\r\n          validate: false\r\n        };\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.state.emailData = [];\r\n    }\r\n    componentDidMount() {\r\n        \r\n        global.api.getEmailList(global.companyCode)\r\n        .then(response => response)\r\n        .then(\r\n        data => {\r\n        this.setState({ emailData: data});\r\n        });\r\n    }\r\n    onEmailSelect = email => {\r\n        this.setState({ email });\r\n        console.log(`Option selected:`, email);\r\n        \r\n        let value = [];\r\n        if(email !== null){\r\n          for (var i = 0; i < email.length; i++) {\r\n              value.push(email[i]);\r\n          }\r\n        }\r\n        this.setState({email: value}); \r\n      };\r\n    toggleValidating(validate) {\r\n        this.setState({ validate });\r\n    }\r\n    validateForm(e) {\r\n        e.preventDefault();\r\n        this.toggleValidating(true);\r\n        const {\r\n          hasEmailError,\r\n          hasTitleError,\r\n          hasMessageError\r\n        } = this.state;\r\n        if (\r\n          !hasEmailError &&\r\n          !hasTitleError &&\r\n          !hasMessageError \r\n        ) {\r\n          \r\n        }\r\n        if(this.state.email.length===0){\r\n            this.setState({hasEmailError:'please one email'})\r\n            alert('please select atleast one email')\r\n            return false;\r\n        }else{\r\n            var data = {\r\n                'email':this.state.email,\r\n            'message':this.state.message,\r\n                'title':this.state.title,\r\n                'include_image':$('#include_img').is(\":checked\"),\r\n            }\r\n            console.log('data',data)\r\n            \r\n        }\r\n      }\r\n\r\n  render(){\r\n    const {\r\n        email,\r\n        title,\r\n        message,\r\n        validate,\r\n      } = this.state;\r\n      \r\n    return (\r\n        \r\n        <main className=\"offset\" id=\"content\">\r\n            <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n              <h1 className=\"title1 mb50\">Push Notification</h1>\r\n              <form onSubmit={this.validateForm}  className=\"form_employee  js-tabs\">\r\n                \r\n                <div className=\"js-tabs-box tab-box\">\r\n                  <div>\r\n                    <div className=\"form_row_box\">\r\n                      <h2 className=\"title2 fw400 form_title mb30\">Send to Single Device</h2>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Select Email</label>\r\n                           <Select  attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }} value={email} isMulti onChange={this.onEmailSelect} \r\n                            onBlur={() => {}}  options={this.state.emailData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            classNamePrefix=\"route \" closeMenuOnSelect={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasEmailError: res, validate: false })\r\n                            } \r\n                            validationOption={{\r\n                                name: \"Email\",\r\n                                check: true, \r\n                                required: true \r\n                                }}/> \r\n                          {/* <Select attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }}\r\n                            isMulti\r\n                            classNameSelect=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            value={email}\r\n                            disabled={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasMovieError: res, validate: false })\r\n                            } \r\n                            optionList={this.state.emailData} \r\n                            customStyleOptionListContainer={{\r\n                            maxHeight: \"200px\",\r\n                            overflow: \"auto\",\r\n                            fontSize: \"14px\"\r\n                            }} // Optional.[Object].Default: {}.\r\n                            onChange={(res, e) => {\r\n                            this.setState({ country: res.id });\r\n                            console.log(e);\r\n                            }} \r\n                            onBlur={() => {}} \r\n                            \r\n                            validationOption={{\r\n                            name: \"Email\",\r\n                            check: true, \r\n                            required: true \r\n                            }}\r\n                        /> */}\r\n                         \r\n                        </div>\r\n                        {/* <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">LAST Name</label>\r\n                          <input className=\"form_input\" type=\"text\" id=\"lname\" name=\"lname\" ref=\"lname\"/> \r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Title</label>\r\n                          <Textbox classNameInput=\"form_input\" attributesInput={{\r\n                            id: \"Title\",\r\n                            name: \"Title\",\r\n                            type: \"text\",\r\n                            placeholder: \"Enter Title\"\r\n                            }}\r\n                            value={title}  validationOption={{ name: 'Title',\r\n                           check: true, required: true}}\r\n                           validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasTitleError: res, validate: false })\r\n                            }\r\n                            onChange={(title, e) => {\r\n                                this.setState({ title });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Message</label>\r\n                          <Textarea classNameInput=\"form_textarea emalform_textarea\" \r\n                          attributesWrapper={{}}\r\n                          attributesInput={{\r\n                            id: \"message\",\r\n                            name: \"message\",\r\n                            placeholder: \"Notification Message\",\r\n                             cols: '10',\r\n                             rows: '0',\r\n                          }} value={message} placeholder=\"Notification Message\" validationOption={{name: 'Message', // Optional.[String].Default: \"\". To display in the Error message. i.e Please enter your {name}.\r\n                          check: true, required: true}}\r\n                          validate={validate} \r\n                          validationCallback={res =>\r\n                            this.setState({\r\n                                hasMessageError: res,\r\n                                validate: false\r\n                            })\r\n                            }\r\n                            onChange={(message, e) => {\r\n                                this.setState({ message });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                       \r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\" style={{'textTransform':'none'}}>Include Image?</label>\r\n                          <span className=\"form_label\"><input type=\"checkbox\"  id= \"include_img\"  name=\"include_img\" onChange={( e) => { }}/></span>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"\">\r\n                  \r\n                  <button className=\"btn btn-blue btn-radius btn-icon-center btn-size\" onClick={this.validateForm}>\r\n                    \r\n                    <span>Send</span>\r\n                  </button>\r\n                  <input type=\"submit\" style={{ display: \"none\" }} />\r\n                </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n                \r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Firebase;\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyCompletion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeData = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({ routeData: []});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        this.setState({ routeData: data});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onRouteSelect = selectedRoute => {\r\n    this.setState({ selectedRoute });\r\n    console.log(`Option selected:`, selectedRoute);\r\n    this.setState({selectedRouteText: []});\r\n    let selRoute = [];\r\n    let value = [];\r\n    if(selectedRoute !== null){\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i]);\r\n          selRoute.push(selectedRoute[i].label);\r\n      }\r\n    }\r\n    this.setState({selectedRouteText: selRoute});\r\n    this.setState({selectedRoute: value}); \r\n  };\r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleBtnClick = () => {\r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    this.setState({data: []});\r\n    this.forceUpdate();\r\n    \r\n    let colNames = [...this.state.baseColNames];\r\n    \r\n    this.setState({columns: colNames});\r\n    \r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    \r\n    let selectedRoute = this.state.selectedRoute;\r\n    \r\n\r\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        const items = [];\r\n        for (const row of result) {\r\n          let item = row;\r\n          items.push(item);\r\n        }\r\n        this.setState({data: items});\r\n      }\r\n    )\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      var selectedRoutes = this.state.selectedRoute;\r\n      let routes = [];\r\n      for (var ii = 0; ii < selectedRoutes.length; ii++) {\r\n        routes.push(selectedRoutes[ii].value);\r\n      }  \r\n      \r\n      //to = ['reachatbhakti@gmail.com']\r\n      //var params={\"emails\":emails}\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"from\":'',\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"routeNumber\":routes,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      let api = ''\r\n      if(type === 'push-notification'){\r\n        api = global.api.sendPush(params)\r\n      }else{\r\n        api = global.api.sendEmail(params)\r\n      }\r\n        api\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          // console.log(json.data)\r\n          if(json.data.message===\"Email Sent Successfully.\" || json.data.message===\"Push Notification sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Completion\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"push-notification\" style={{marginTop:'20px'}}><span id=\"push-notification\">Push Notification</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              {/* <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px'}}>\r\n                                <ReactMultiSelectCheckboxes classNamePrefix=\"route \" options={this.state.routeData}  /> \r\n                                  <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"route \" closeMenuOnSelect={false}/>\r\n                                </div>\r\n                              </div> \r\n                              <div className=\"head_box_r\">\r\n                                <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\r\n                                <span\r\n                                  className=\"btn btn-radius btn-size btn-blue  export\"\r\n                                  onClick={this.handleBtnClick}\r\n                                >\r\n                                  <span>Submit</span>\r\n                                </span>\r\n                              </div>*/}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-comple\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyCompletion;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeList = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.mailType = [{  \r\n      label: \"Route Mail\",  \r\n      value: \"route_email\"  \r\n    },\r\n    { \r\n      label: \"Weekly Send Mail\",  \r\n      value: \"weekly_email\" \r\n    },\r\n    { \r\n      label: \"Weekly Push Notification\",  \r\n      value: \"weekly_push\"  \r\n    }]\t\r\n    this.state.langData = [{  \t\r\n      label: \"Español\", \t\r\n      value: \"ES\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Portuguese\",  \t\r\n      value: \"PT\" \t\r\n    }]  \t\r\n    this.state.mailModeData = [{  \t\r\n      label: \"Test Email\",  \t\r\n      value: \"Test\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Real Email\",  \t\r\n      value: \"Real\" \t\r\n    }]  \t\r\n    \t\r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };  \t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedMailType = { label: 'Route Mail', value: 'route_email' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n    this.state.routeStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        let routeListData = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          routeListData.push({\"value\":data[i]['id'],\"label\":data[i]['label'],\"routeNo\":data[i]['value']});\r\n        }\r\n        this.setState({ routeList: routeListData});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#task-reports').show();\r\n    $('#task-table_wraps').show();\r\n    $('#campain-week-task').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-task').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onLangSelect = selectedLang => {  \t\r\n    this.setState({ selectedLang });  \t\r\n    console.log(`Option selected:`, selectedLang);  \t\r\n    const selValue = selectedLang.value;  \t\r\n    const selLabel = selectedLang.label;  \t\r\n    const selLangOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedLang: selLangOption});   \t\r\n  } \t\r\n  onModeSelect = selectedMode => {  \t\r\n    this.setState({ selectedMode });  \t\r\n    console.log(`Option selected:`, selectedMode);  \t\r\n    const selValue = selectedMode.value;  \t\r\n    const selLabel = selectedMode.label;  \t\r\n    const selModeOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedMode: selModeOption});   \t\r\n  }\r\n  onRouteNameChange = selectedRouteName => {\r\n    const moment = require('moment-timezone');\r\n    this.setState({ selectedRouteName });\r\n    let routeNo = selectedRouteName.routeNo;\r\n    let routeStartDate = this.state.courseStartDate;\r\n    routeStartDate = routeStartDate.replace(\"Course StartDate : \", \"\");\r\n    routeNo = (routeNo - 1)*7;\r\n    let routeDate =  moment(routeStartDate,\"DD-MM-YYYY\");\r\n    routeDate = moment(routeDate).add(routeNo, 'day').format('DD-MM-YYYY'); \r\n    this.setState({ routeStartDate: 'Route StartDate : ' + routeDate});\r\n    //console.log(`Option selected:`,routeDate);\r\n  };\r\n  onMailTypeSelect = selectedMailType => {  \r\n    this.setState({ selectedMailType });  \r\n    console.log(`selectedMailType selected:`, selectedMailType);  \r\n    const selValue = selectedMailType.value;  \r\n    const selLabel = selectedMailType.label;  \r\n    const selMailTypeOption = { label: selLabel, value: selValue }; \r\n    this.setState({selectedMailType: selMailTypeOption});   \r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{\r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      const routes = this.state.selectedRouteName.value;\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n      var params = {\r\n        \"to\":emails,\r\n        \"routeNumber\":routes,\r\n        \"mailMode\":this.state.selectedMode.value,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"type\":type\r\n      }\r\n      global.api.sendWeeklyEmail(params)\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          if(json.data.message===type+\" Sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Tasks\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        \r\n                        <div className=\"campaign-container-right-div-2\">\r\n                        <div className=\"head_box mb15\">\t\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\t\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/> \t\r\n                            </span> \t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \t\r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/> \t\r\n                            </span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_email\" style={{marginTop:'20px'}}><span id=\"weekly_email\">SendEmail</span></span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_push\" style={{marginTop:'20px'}}><span id=\"weekly_push\">Push Notification</span></span>\t\r\n                          </div>\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\"}}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"routeList\" value={this.state.selectedRouteName}  onChange={this.onRouteNameChange} options={this.state.routeList} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"Route List\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.routeStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"task-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"task-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-task\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyTask;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({data: []});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    this.setState({data: []});\r\n        \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#welcome-reports').show();\r\n    $('#welcome-table_wraps').show();\r\n    $('#campain-welcome-mail').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    var selectedRoute = \"\";\r\n    \r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-welcome-mail').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  \r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    //const type = e.target.id\r\n    var notification=this.state.notification\r\n    \r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n            \r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    }\r\n    \r\n  }\r\n  sendEmailAll = (e) => {\r\n    var notification=this.state.notification\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    if(selectedCourse === undefined){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Course'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      \r\n      this.setState({loading:true});\r\n      var params = {\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    } \r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return ( <div><LoadingOverlay \r\n      active={loading}\r\n      spinner\r\n      text='Processing your content...'\r\n      >\r\n    </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Welcome Email\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.sendEmailAll } id=\"send-email-all\" style={{marginTop:'20px'}}><span id=\"send-email-all\">SendEmail To All</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"\" style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>    \r\n                    </div>\r\n                <div id=\"welcome-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"welcome-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-welcome-mail\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyEmail;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter><App />\n    </BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n","import decode from 'jwt-decode';\nexport default class AuthService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\n        this.fetch = this.fetch.bind(this) // React binding stuff\n        this.login = this.login.bind(this)\n        this.getProfile = this.getProfile.bind(this)\n    }\n    forgotpass(email) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/password_reset.php`, {\n            method: 'POST',\n            body: JSON.stringify({\n                email\n            })\n        }).then(res => {\n            return Promise.resolve(res);\n            /* if(res.token){\n                this.setToken(res.token) // Setting the token in localStorage\n                this.setProfile(res.firstName, res.email)\n                return Promise.resolve(res);\n            }\n            if(res.message){\n                return Promise.reject(res.message);\n            } */\n        })\n    }\n    login(email, password) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/api-login.php`, {\n            method: 'POST',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        }).then(res => {\n            if(res.token){\n                if(res.accesslevel!== \"0\"){\n                    this.setToken(res.token) // Setting the token in localStorage\n                    this.setProfile(res)\n                    return Promise.resolve(res);\n                }else{\n                    const result = {firstName: '', email: '', company_code:'', company_name: '',  access_level:'', accepted_gdpr:''}\n                    this.setProfile(result)\n                    return {message: \"Disabled Access.\"};\n                }\n            }\n            if(res.message){\n                return Promise.reject(res.message);\n            }\n        })\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(idToken) {\n        console.log('idToken',idToken)\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n    setProfile(data) {//res.firstName, res.email\n        // Saves user token to localStorage\n        localStorage.setItem('firstName', data.firstName)\n        localStorage.setItem('email', data.email)\n        localStorage.setItem('company_code', data.CompanyCode)\n        localStorage.setItem('company_name', data.companyName)\n        localStorage.setItem('access_level', data.accesslevel)\n        localStorage.setItem('accepted_gdpr', data.acceptedGDPR)\n    }\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    setCompanyName(companyName) {\n        // Saves user token to localStorage\n        localStorage.setItem('company_name', companyName)\n    }\n    \n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getProfile() {\n        // Using jwt-decode npm package to decode the token\n        //return decode(this.getToken());\n        return localStorage.getItem('email')\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}"],"sourceRoot":""}