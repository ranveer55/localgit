{"version":3,"sources":["components/ApiService.js","pages/OverView.js","pages/Home.js","pages/Login.js","pages/Forgot.js","pages/Campaigns.js","Routes.js","App.js","pages/Menu.js","pages/Header.js","pages/Employees.js","pages/AddEmployee.js","pages/EmployeestoCourses.js","pages/Reports.js","pages/CourseDetails.js","pages/Courses.js","pages/Firebase.js","pages/Campaigns-weekly-completion.js","pages/Campaigns-weekly-task.js","pages/Campaigns-welcome-email.js","components/AuthService.js","serviceWorker.js","index.js"],"names":["ApiService","domain","this","fetch","bind","addEmpCourse","params","axios","post","JSON","stringify","then","res","Promise","resolve","companyCode","get","emailList","i","data","length","push","moduleNo","batchNumber","routeNumber","courseNo","routeList","batchNo","courseList","batchList","url","companies","optName","Name","gdprCheck","courseNumber","method","registeredUsers","registered","availableUsers","ii","availableToRegister","indexOf","userId","localStorage","setItem","getItem","companyName","access_level","options","headers","_checkStatus","response","json","status","error","Error","statusText","OverView","props","state","global","api","getOverView","setState","catch","err","alert","totalUsers","activeCourses","ongoingBatches","className","id","React","Component","Login","handleChange","handleFormSubmit","Auth","AuthService","loggedIn","history","replace","src","alt","onSubmit","placeholder","name","type","onChange","hidden","href","e","target","value","preventDefault","login","email","password","message","accesslevel","window","location","Forgot","event","forgotpass","showError","showSuccess","messageFromServer","style","label","Campaigns","data-id","Router","exact","path","component","Employees","AddEmployees","EmployeestoCourses","Reports","CourseDetails","Courses","Firebase","render","ProtectedRoute","rest","to","pathname","from","Api","pathName","App","console","log","Menu","Header","handleLogout","logout","selectedOption","selValue","setCompanyCode","split","setCompanyName","user","getProfile","getCompanyCode","getCompanyName","getAccessLevel","companyList","companyDisable","getCompanyList","sort","a","b","classNamePrefix","isDisabled","onClick","SearchBar","Search","gotoCourse","courseName","courseId","onBatchChange","selectedBatch","$","prop","checked","getEmployeeList","show","hide","onBatchChangeOld","handleCheck","notification","undefined","title","store","addNotification","handleBtnClick","selected","handleOnSelect","row","isSelect","rowIndex","columnCount","parentNode","cells","j","handleOnSelectAll","rows","rowCount","childNodes","colCount","coldCount","jj","columns","dataField","text","csvExport","formatter","cell","headerStyle","width","events","column","columnIndex","currentClass","statusIndex","courseIndex","locationIndex","children","coursesClass","courseCount","slideDown","classes","courseItems","courseRegistered","moduleCompletionPercent","moduleCompletion_percent","key","i_d","trId","Location","lastLoginDate","batchData","csvFileName","getDate","container","animationIn","animationOut","dismiss","duration","onScreen","tempDate","Date","getFullYear","getMonth","getBatch","custom","slected","MyExportCSV","onExport","marginTop","selectRow","mode","class","clickToSelect","onSelect","onSelectAll","headerColumnStyle","paddingLeft","rowEvents","elementName","tagName","NoDataIndication","color","height","NoDataAvailable","keyField","search","exportCSV","fileName","defaultChecked","searchProps","csvProps","pagination","paginationFactory","paginationProps","paginationTableProps","baseProps","filter","filterFactory","noDataIndication","Dragger","Upload","AddEmployee","countryCode","phone","startDate","fields","fname","lname","dni","deptname","errors","form","ReactFormInputValidation","useRules","onformsubmit","actVal","refs","mobile","mobileData","n","substr","parseInt","CompanyCode","FirstName","LastName","Mobile","CountryCode","DNI","mobileOS","val","subscriptionValidDate","company","weeklyEmail","disable","fcmToken","versionNumber","accountActivated","activationDate","deviceMake","deviceOsVersion","Mobilewcode","token","verification_code","acceptedGDPR","versionName","updatedAt","altEmail","addEmployee","actionVal","currentTarget","dataset","accept","multiple","action","info","file","reader","FileReader","onload","result","readAsText","originFileObj","success","rel","media","handleSubmit","onBlur","handleBlurEvent","handleChangeEvent","country","enableSearch","required","ref","date","dateFormat","handleChkChange","chkValue","x","userid","getCourseList","map","item","index","imgPath","moduleNumber","Id","selectedCompany","getCourseBatch","courseData","selectedCourse","routeData","selectedRouteText","selectedRoute","onCourseChange","selectedCourseId","getRouteList","noDataAvailable","colNames","baseColNames","pieChartDisplay","getCompletionReports","onRouteSelect","selRoute","forceUpdate","row1","routeCols","whiteSpace","cursor","avgVals","avgValsarr","toString","items","totRoutes","avgRoutes","Routes","Math","round","grp1Percent","grp2Percent","grp3Percent","grp1","grp2","grp3","avgData","grp1Val","grp2Val","grp3Val","grp1PVal","grp2PVal","grp3PVal","userData","companyData","selectedCompanyName","avgPercentTable","textTransform","pieChat","labels","datasets","backgroundColor","hoverBackgroundColor","totalSize","sizePerPage","ReportSummary","data-mh","display","fontSize","paddingRight","isMulti","closeMenuOnSelect","bootstrap4","handleDeleteClick","attenSelected","userIds","deleteEmpCourse","empSelected","handleAddClick","handleEmpOnSelect","handleEmpOnSelectAll","ids","r","handleAttenOnSelect","handleAttenOnSelectAll","queryString","parse","attendanceColumns","completedStatus","attendanceData","empColumns","empData","empNodata","totalData","getCourseDetails","newProps","noDataText","withoutNoDataText","empOptions","empSelectRow","toDate","moment","format","onEmailSelect","validate","validateForm","emailData","getEmailList","toggleValidating","hasEmailError","hasTitleError","hasMessageError","is","attributesWrapper","attributesInput","validationCallback","validationOption","check","classNameInput","cols","CampaignsWeeklyCompletion","selectedRouteName","courseStartDate","routeStartDate","onLangSelect","selectedLang","selLangOption","onModeSelect","selectedMode","selModeOption","handleSendEmail","loading","selectedEmails","emails","selectedRoutes","routes","sendPush","sendEmail","langData","mailModeData","active","spinner","paddingTop","fontWeight","CampaignsWeeklyTask","routeListData","onRouteNameChange","require","routeNo","routeDate","add","onMailTypeSelect","selectedMailType","selMailTypeOption","sendWeeklyEmail","mailType","CampaignsWeeklyEmail","sendEmailAll","body","setToken","setProfile","firstName","company_code","company_name","accepted_gdpr","reject","getToken","isTokenExpired","decode","exp","now","idToken","removeItem","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c55666a.chunk.js","sourcesContent":["import axios from \"axios\"\r\nexport default class ApiService {\r\n    // Initializing important variables\r\n    constructor(domain) {\r\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\r\n        //this.domain = domain || 'http://local.ybrantcompass.com/taplingua-prod/taplingua-api' // API server domain\r\n        this.fetch = this.fetch.bind(this) // React binding stuff\r\n        this.addEmpCourse = this.addEmpCourse.bind(this)\r\n    }\r\n    //Add Single Employee\t\r\n    addEmployee(params) {\t\r\n        return axios.post(`${this.domain}/saveEmployee.php`, \t\r\n        JSON.stringify(params)\t\r\n        ).then(res => {\t\r\n            return Promise.resolve(res);\t\r\n        })\t\r\n    }\r\n    //All email sent list\r\n    sendEmailAll(params) {\r\n        return axios.post(`${this.domain}/send-welcome-email.php`, \r\n        JSON.stringify({params})\r\n        ).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    //weekly email sent list\r\n    sendWeeklyEmail(params) {\r\n        return axios.post(`${this.domain}/send-weekly-email.php`, \r\n        JSON.stringify({params})\r\n        ).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    //route email sent list\r\n    sendRouteEmail(params) {\r\n        return axios.post(`${this.domain}/send-route-email.php`, \r\n        JSON.stringify({params})\r\n        ).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    //firebase email list\r\n    sendPush(params) {\r\n        return axios.post(`${this.domain}/send-push-notification.php`, \r\n        JSON.stringify({params})\r\n        ).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    //email sent list\r\n    sendEmail(params) {\r\n        return axios.post(`${this.domain}/send-email.php`, \r\n        JSON.stringify({params})\r\n        ).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    //firebase email list\r\n    getEmailList(companyCode) {\r\n        var params=\"CompanyCode=\"+companyCode;\r\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\r\n            var emailList = []\r\n            for(var i = 0; i < res.data.length; i++){\r\n                if(res.data[i]['fcmToken']!==\"\"){\r\n                    emailList.push({\"value\":res.data[i]['fcmToken'],\"label\":res.data[i]['userId']})\r\n                }\r\n            }\r\n            return Promise.resolve(emailList);\r\n        })\r\n    }\r\n    \r\n    //get Completion Reports Data\r\n    getCompletionReports(companyCode,moduleNo,batchNumber,routeNumber){\r\n        return axios.get(`${this.domain}/completion-reports-api.php?companyCode=`+companyCode+`&courseNumber=`+moduleNo+`&batchNumber=`+batchNumber+`&routeNumber=`+routeNumber).then(res => {\r\n           return Promise.resolve(res.data);\r\n        })\r\n    }\r\n    //get Route Data\r\n    getRouteList(courseNo) {\r\n        return axios.get(`${this.domain}/routeList.php?courseNo=`+courseNo).then(res => {\r\n            let routeList = []\r\n            for(var i = 0; i < res.data.length; i++){\r\n                routeList.push({\"value\":res.data[i]['routeNo'],\"label\":res.data[i]['description'],\"id\":res.data[i]['id']})\r\n            }\r\n            return Promise.resolve(routeList);\r\n        })\r\n    }\r\n    //get course batch Data\r\n    getCourseBatch(companyCode,batchNo) {\r\n        return axios.get(`${this.domain}/courseListBatch.php?companyCode=`+companyCode+`&batchNumber=`+batchNo).then(res => {\r\n            var courseList = []\r\n            for(var i = 0; i < res.data.length; i++){\r\n                courseList.push({\"value\":res.data[i]['courseNumber'],\"label\":res.data[i]['courseName'],\"courseStartDate\":res.data[i]['courseStartDate']})\r\n            }\r\n            return Promise.resolve(courseList);\r\n        })\r\n    }\r\n    //get batch Data\r\n    getBatch(companyCode) {\r\n        return axios.get(`${this.domain}/batch.php?companyCode=`+companyCode).then(res => {\r\n            //console.log(res.data)\r\n            var batchList = []\r\n            for(var i = 0; i < res.data.length; i++){\r\n                batchList.push({\"value\":res.data[i]['batchNumber'],\"label\":res.data[i]['batchNumber']})\r\n            }\r\n            return Promise.resolve(batchList);\r\n        })\r\n    }\r\n    //get company list\r\n    getCompanyList(companyCode = null) {\r\n        let url = `${this.domain}/company.php`;\r\n        if(companyCode){\r\n            url = `${this.domain}/company.php?companyCode=${companyCode}`\r\n        }\r\n        return axios.get(`${url}`).then(res => {\r\n            var companies= []\r\n            for(var i = 0; i < res.data.length;i++){\r\n                if(res.data[i]['Id'] !== \"\" && res.data[i]['Id'] !== \"0\"){\r\n                    var optName = res.data[i]['Id']+\" - \"+res.data[i].Name\r\n                    companies.push({'value':res.data[i]['Id'],'label':optName})\r\n                }\r\n            }\r\n            return Promise.resolve(companies);\r\n        })\r\n    }\r\n    //get employee list\r\n    getEmployeeList(companyCode,batchNumber,gdprCheck=\"\") {\r\n        var params=\"CompanyCode=\"+companyCode;\r\n        if(batchNumber !== \"0\"){\r\n            params = params+ \"&batchno=\"+batchNumber\r\n        }\t\r\n        if(gdprCheck !== \"\"){\t\r\n            params = params+ \"&acceptedGDPR=\"+gdprCheck\r\n        }\r\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\r\n            return Promise.resolve(res.data);\r\n        })\r\n    }\r\n    //get course list\r\n    getCourseList(companyCode, batchNumber = 0) {\r\n        let params=\"companyCode=\"+companyCode;\r\n        if(batchNumber !== 0){\r\n            params = params+ \"&batchNumber=\"+batchNumber\r\n        }\r\n        return axios.get(`${this.domain}/courseListBatch.php?`+params).then(res => {\r\n            return Promise.resolve(res.data);\r\n        })\r\n    }\r\n    //get course list\r\n    getCourseDetails(companyCode,courseNumber) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/getEmployeeCourseAll.php?companyCode=`+companyCode+`&courseNumber=`+courseNumber, {\r\n            method: 'GET',\r\n            \r\n        }).then(res => {\r\n            var registeredUsers= []\r\n            for(var i = 0; i < res.registered.length;i++){\r\n                registeredUsers.push(res.registered[i]['userId'])\r\n            }\r\n            var availableUsers= []\r\n            for(var ii = 0; ii < res.availableToRegister.length;ii++){\r\n                if(registeredUsers.indexOf(res.availableToRegister[ii]['userId']) === -1){\r\n                    availableUsers.push(res.availableToRegister[ii])\r\n                }\r\n            }\r\n            res.availableToRegister = availableUsers;\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    addEmpCourse(userId, companyCode, courseNumber) {\r\n        return axios.post(`${this.domain}/add-employee-course.php`, JSON.stringify({\r\n            userId, companyCode, courseNumber\r\n        })).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    deleteEmpCourse(userId, companyCode, courseNumber) {\r\n        return axios.post(`${this.domain}/remove-employee-course.php`, JSON.stringify({\r\n            userId, companyCode, courseNumber\r\n        })).then(res => {\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n    setCompanyCode(companyCode) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('company_code', companyCode)\r\n    }\r\n    getCompanyCode() {\r\n        return localStorage.getItem('company_code')\r\n    }\r\n    setCompanyName(companyName) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('company_name', companyName)\r\n    }\r\n    getCompanyName() {\r\n        return localStorage.getItem('company_name')\r\n    }\r\n    setAccessLevel(access_level) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('access_level', access_level)\r\n    }\r\n    getAccessLevel() {\r\n        return localStorage.getItem('access_level')\r\n    }\r\n    //get Overview for company\t\r\n    getOverView(companyCode) {\t\r\n        return this.fetch(`${this.domain}/overview.php?companyCode=`+companyCode, {\t\r\n            method: 'GET',\t\r\n            \t\r\n        }).then(res => {\t\r\n            return Promise.resolve(res);\t\r\n        })\t\r\n    }\r\n\r\n    fetch(url, options) {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        /* if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        } */\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nclass OverView extends React.Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          data : []\r\n        }\r\n        \r\n  }\r\n  componentDidMount() {\r\n    global.api.getOverView(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  }  \r\n  \r\n  render() {\r\n    const { totalUsers, activeCourses, ongoingBatches } = this.state.data;\r\n    return (\r\n        <main className=\"offset\" id=\"content\">\r\n          <section className=\"section_box\">\r\n            <h1 className=\"title1 mb115\">Overview</h1>\r\n            \r\n            <div className=\"overview-wrap\">\r\n              <div className=\"overview-wrap-left\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Total Users</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{totalUsers}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-wrap-center\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Active Courses</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{activeCourses}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-wrap-right\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Ongoing Cohorts</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{ongoingBatches}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OverView;\r\n\r\n","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n    \r\n        return (\r\n            <main id=\"content\">\r\n            <div className=\"bg_gradient bg_content\"></div>\r\n            <section className=\"section_salute_box\">\r\n                <div className=\"section_salute_wrap\">\r\n                    <h1 className=\"title1 salute_title\">Hello There.</h1>\r\n                    <p className=\"salute_descr\">This page seems a little bit empty. Why don't we start by adding in some of your employees information?</p>\r\n                    <div className=\"salute_img\">\r\n                        <img src=\"images/img.svg\" alt=\"\" />\r\n                    </div>\r\n                    <a className=\"btn btn-blue btn-radius\" href=\"/employee\">\r\n                        <span>Add Employees</span>\r\n                    </a>\r\n                </div>\r\n            </section>\r\n        </main>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport AuthService from '../components/AuthService';\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.Auth = new AuthService();\r\n        //temp email/pass\r\n    }\r\n    componentDidMount(){\r\n          if(this.Auth.loggedIn())\r\n              this.props.history.replace('/');\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div id=\"page-preloader\">\r\n                    <div className=\"preloader\">\r\n                        <div className=\"preload_inner preload-one\"></div>\r\n                        <div className=\"preload_inner preload-two\"></div>\r\n                        <div className=\"preload_inner preload-three\"></div>\r\n                    </div>\r\n                </div>\r\n                <main className=\"type2\" id=\"content\">\r\n                    <section className=\"section_box section_offset1 zoom\">\r\n                        <div className=\"form_wrapper \">\r\n                            <div className=\"form_logos mb35\">\r\n                                <img src=\"/images/logos.png\" alt=\"\" />\r\n                            </div>\r\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\r\n                                <h3 className=\"form_title al_center mb35\">Please login to your account.</h3>\r\n                                <div className=\"form_row type2\">\r\n                                    <input className=\"form_input type2\" placeholder=\"Username\" name=\"email\" type=\"text\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"form_row type2\">\r\n                                    <input className=\"form_input type2\" placeholder=\"Password \" name=\"password\" type=\"password\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"form_row type2 form_flex mb115\">\r\n                                    <label className=\"form_checkbox login\">\r\n                                        <input type=\"checkbox\" hidden=\"hidden\" />\r\n                                        <span>Remember me</span>\r\n                                    </label>\r\n                                    <a className=\"link link-size1 link_color\" href=\"/forgotpass\">Forgot password</a>\r\n                                </div>\r\n                                <div className=\"form_row_btn type2\">\r\n                                    <button className=\"btn btn-radius btn-orange btn-login\" type=\"submit\">\r\n                                        <span>LOG IN</span>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"link_wrapp\">\r\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\r\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n                </main>\r\n      \r\n      </div>\r\n          \r\n        );\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    }\r\n    handleFormSubmit(e){\r\n        e.preventDefault();\r\n          this.Auth.login(this.state.email,this.state.password)\r\n              .then(res =>{\r\n                  if(res.message){\r\n                    alert(res.message);\r\n                    return false;\r\n                  }else{\r\n                      if(res.accesslevel !== \"0\" ){\r\n                        window.location.href = '/overview';\r\n                      }else{\r\n                        alert('Access Level Disabled, Contact Admin');\r\n                      }\r\n                  }\r\n              })\r\n              .catch(err =>{\r\n                  alert(err);\r\n              })\r\n      }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport AuthService from '../components/AuthService';\r\n\r\nclass Forgot extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email : '',\r\n            showError: false,\r\n            messageFromServer:'',\r\n            showSuccess: ''\r\n        }\r\n        this.Auth = new AuthService();\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const email = this.state.email;\r\n        if(email === ''){\r\n            alert(\"Please Enter Email\");\r\n        }else{\r\n            \r\n            this.Auth.forgotpass(email)\r\n                .then(res =>{\r\n                    if(res.message === 'Please check email for reset link.'){\r\n                        this.setState({\r\n                            showError : true,\r\n                            showSuccess: 'success_message',\r\n                            messageFromServer : res.message\r\n                        });\r\n                    }else{\r\n                        this.setState({\r\n                            showError : true,\r\n                            showSuccess: 'error_message',\r\n                            messageFromServer : res.message\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        //const {email} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div id=\"page-preloader\">\r\n                    <div className=\"preloader\">\r\n                        <div className=\"preload_inner preload-one\"></div>\r\n                        <div className=\"preload_inner preload-two\"></div>\r\n                        <div className=\"preload_inner preload-three\"></div>\r\n                    </div>\r\n                </div>\r\n                <main className=\"type2\" id=\"content\">\r\n                    <section className=\"section_box section_offset1 zoom\">\r\n                        <div className=\"form_wrapper \">\r\n                            <div className=\"form_logos mb35\">\r\n                                <img src=\"/images/logos.png\" alt=\"\" />\r\n                            </div>\r\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\r\n                            <h3 className=\"form_title al_center mb50\" style={{'fontSize':'25px'}}>Enter your email and we send you a password reset link.</h3>\r\n                            \r\n                            <div className=\"form_row type2\">\r\n                                <input className=\"form_input type2\" type=\"text\" placeholder=\"Email\" id=\"email\" label=\"email\" onChange={this.handleChange('email')}/> \r\n                            </div>\r\n                            <div className={this.state.showSuccess}>{this.state.showError=== true ? this.state.messageFromServer:' '}&nbsp;</div>\r\n\r\n                            <div className=\"form_row_btn type2\">\r\n                                <button className=\"btn btn-radius btn-orange btn-size5\" type=\"submit\">\r\n                                    <span>SEND REQUEST</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"link_wrapp\">\r\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\r\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n                </main>\r\n      \r\n      </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default Forgot;","import React, { Component } from \"react\";\r\nimport CampaignsWeeklyCompletion from './Campaigns-weekly-completion'\r\nimport CampaignsWeeklyTask from './Campaigns-weekly-task'\r\nimport CampaignsWelcomeEmail from './Campaigns-welcome-email'\r\n\r\nclass Campaigns extends Component {\r\n  \r\n  render(){\r\n      return (\r\n        <main className=\"offset\" id=\"content\">\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Messaging & Notification Center</h4>\r\n              <h1 className=\"title1 mb115\">Campaigns</h1>\r\n              <form className=\"form_employee js-tabs\">\r\n                <ul className=\"js-tabs-list tab-list\">\r\n                  <li data-id=\"weeklycompletion\"><span>Weekly Completion</span></li>\r\n                  <li data-id=\"weeklytasks\"><span>Weekly Tasks</span></li>\r\n                  <li data-id=\"welcomemail\"><span>Welcome - Email</span></li>\r\n                </ul>\r\n                <div>\r\n                  <div className=\"js-tabs-box tab-box\">\r\n                    <CampaignsWeeklyCompletion />\r\n                    <CampaignsWeeklyTask />\r\n                    <CampaignsWelcomeEmail />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Campaigns;\r\n\r\n\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from './components/AuthService';\r\nimport Employees from \"./pages/Employees\";\r\nimport AddEmployees from \"./pages/AddEmployee\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport EmployeestoCourses from \"./pages/EmployeestoCourses\";\r\nimport Reports from \"./pages/Reports\";\r\nimport Forgot from \"./pages/Forgot\";\r\nimport CourseDetails from \"./pages/CourseDetails\";\r\nimport Courses from \"./pages/Courses\";\r\nimport Firebase from \"./pages/Firebase\";\r\nimport Campaigns from \"./pages/Campaigns\";  \r\nimport OverView from \"./pages/OverView\";\r\n\r\nconst Auth = new AuthService();\r\nclass Router extends React.Component {\r\n  render() {\r\n    return (\r\n    <Switch>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/forgotpass' component={Forgot}/>\r\n      <ProtectedRoute path=\"/employee\" component={Employees} />\r\n      <ProtectedRoute path=\"/add-employee\" component={AddEmployees} />\r\n      <ProtectedRoute path=\"/employeestocourses\" component={EmployeestoCourses} />\r\n      <ProtectedRoute path=\"/reports\" component={Reports} />\r\n      <ProtectedRoute path=\"/coursedetail\" component={CourseDetails} />\r\n      <ProtectedRoute path=\"/courses\" component={Courses} />\r\n      <ProtectedRoute path=\"/firebase\" component={Firebase} />\r\n      <ProtectedRoute path=\"/campaigns\" component={Campaigns} />\r\n      <ProtectedRoute path=\"/overview\" component={OverView} />\r\n      <ProtectedRoute path=\"/\" component={OverView} />\r\n      \r\n      <Route\r\n          render={function () {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n    </Switch>\r\n   );\r\n  }\r\n}\r\n const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  if(Auth.loggedIn()){\r\n    return (<Route {...rest} render={(props) => (\r\n      Auth.loggedIn() === true ? \r\n          <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location }}} />   \r\n    )} />)\r\n  }else{\r\n    window.location.href = '/login';\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport ReactNotifications from 'react-notifications-component';\n\nimport Menu from \"./pages/Menu\";\nimport Header from \"./pages/Header\";\nimport Router from './Routes';\nimport ApiService from './components/ApiService';\nconst Api = new ApiService();\nconst pathName = window.location.pathname;\n//const companyCode = '115'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    global.api = Api // API server domain\n    //global.companyCode = companyCode // API server domain\n    //global.companyCode = Api.getCompanyCode()\n  }\n  render() {\n    \n    if((pathName==='/login' || pathName==='/forgotpass')){\n      return (<div>\n       <Router />\n      </div>)\n    }else{\n      return (<div className=\"page_wrap\"><ReactNotifications /><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>)\n    }\n    /*{pathName!=='/login' ? <div className=\"page_wrap\"><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>  : <Router />}\n    return (\n      <div>\n      {(pathName!=='/login' || pathName!=='/forgot') ? <div className=\"page_wrap\"><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>  : <Router />}\n      </div>\n    );*/\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\r\n//import { Link } from 'react-router-dom'\r\nconsole.log(window.location.pathname);\r\nconst pathName = window.location.pathname;\r\n\r\nclass Menu extends Component {\r\n   \r\n  render() {\r\n    return (\r\n        <aside className=\"js-sticky\" id=\"aside\">\r\n        <nav className=\"navigation_menu\">\r\n            <menu className=\"menu \">\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/overview' ? 'menu_link current' : 'menu_link'} href=\"/overview\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon1.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon1hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Overview</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/employee' ? 'menu_link current' : 'menu_link'} href=\"/employee\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon2.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon2hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Employees</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/reports' ? 'menu_link current' : 'menu_link'} href=\"/reports\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon3.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon3hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Reports</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                    <a className={pathName==='/courses' ? 'menu_link current' : 'menu_link'} href=\"/courses\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Courses</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\t\r\n                    <a className={pathName==='/campaigns' ? 'menu_link current' : 'menu_link'} href=\"/campaigns\">\t\r\n                        <i className=\"menu_link_icon\">\t\r\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\t\r\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\t\r\n                        </i>\t\r\n                        <span>Campaigns</span>\t\r\n                    </a>\t\r\n                </li>\r\n            </menu>\r\n        </nav>\r\n    </aside>  \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n\r\n","import React from \"react\";\r\nimport AuthService from '../components/AuthService';\r\nimport ApiService from '../components/ApiService';\r\nimport Select from 'react-select';\r\n\r\nconst pathName = window.location.pathname;\r\nconst Auth = new AuthService();\r\nconst Api = new ApiService();\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.user = '';\r\n        if(Auth.loggedIn()){\r\n            this.user = Auth.getProfile()\r\n        }\r\n        global.companyCode = Api.getCompanyCode()\r\n        global.companyName = Api.getCompanyName()\r\n        global.access_level =Api.getAccessLevel()\r\n        \r\n        if(global.companyCode === null && global.access_level === \"1\"){\r\n            global.companyCode = 115\r\n            global.companyName = 'Taplingua Empresas Demo 1'\r\n        }\r\n        this.state = {\r\n            companyList: [],\r\n            selectedOption: [{\"value\":global.companyCode,\"label\":global.companyCode+\" - \"+global.companyName}],\r\n            companyDisable:\"\"\r\n        };\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if(global.access_level === \"3\"){\r\n            this.setState({companyDisable:\"disabled\"})\r\n        }\r\n        let api = ''\r\n        if(global.access_level === \"1\"){\r\n            api = global.api.getCompanyList ();\r\n        }else{\r\n            api = global.api.getCompanyList (global.companyCode);\r\n        }\r\n        api\r\n        .then(companyList => {\r\n            companyList.sort(function(a, b) {\r\n              return a.value - b.value;\r\n            });\r\n            this.setState({ companyList: companyList });\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n                \r\n    }\r\n    \r\n    handleLogout = (props) => {\r\n        Auth.logout()\r\n        window.location.href = '/login';\r\n     }\r\n     handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        var selValue = selectedOption.value;\r\n        Api.setCompanyCode(selValue);\r\n        var CompanyName = selectedOption.label;\r\n        var res = CompanyName.split(\" - \");\r\n        Api.setCompanyName(res[1]);\r\n        window.location.href = pathName; \r\n      };\r\n      \r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"overlay\"></div>\r\n            {/* <!-- Preloader Start     ============================================ --> */}\r\n            <div id=\"page-preloader\">\r\n                <div className=\"preloader\">\r\n                    <div className=\"preload_inner preload-one\"></div>\r\n                    <div className=\"preload_inner preload-two\"></div>\r\n                    <div className=\"preload_inner preload-three\"></div>\r\n                </div>\r\n            </div>\r\n            {/* <!-- Preloader End       ============================================ -->\r\n            <!-- Header Start     ============================================ --> */}\r\n            <header className=\"header\" id=\"header\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header_wrap\">\r\n                        <div className=\"header_left\">\r\n                            <a className=\"logo_box\" href=\"index.html\">\r\n                                <div className=\"logo\">\r\n                                    <img src=\"images/logo.svg\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"logo_description\">Dashboard</div>\r\n                            </a>\r\n                        </div>\r\n                        \r\n                        <div className=\"header_right\">\r\n                            <div className=\"head_box_l switch\">\r\n                                <h6 className=\"title1 mr15\"  style={{'fontSize':'15px'}}>\r\n                                Company\r\n                                </h6>\r\n                                <div style={{'width':'350px'}}>\r\n                                <Select id=\"company\" value={this.state.selectedOption}  onChange={this.handleChange} options={this.state.companyList} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"company\" isDisabled={this.state.companyDisable}/>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <a className=\"link link-black support_link\" href=\"/help\">\r\n                                <span>Help & Support</span>\r\n                            </a>\r\n                            <a className=\"header_reminder\" href=\"/\">\r\n                                <span>8</span>\r\n                            </a>\r\n                            <div className=\"header_login_box\">\r\n                                <span className=\"header_login_name\">Hi,\r\n                                    <span className=\"fw700 header-logout\">{this.user}</span>\r\n                                </span>\r\n                                <span className=\"header_login_photo\" onClick={this.handleLogout}><img src=\"/images/logout.png\" alt=\"Logout\" /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, {  Search } from 'react-bootstrap-table2-toolkit';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport Loader from \"react-loader-spinner\";\r\nimport Select from 'react-select';\r\nimport $ from 'jquery';\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { Progress } from 'reactstrap';  \r\nconst { SearchBar } = Search;\r\n\r\nclass Employees extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    function formatter(cell, row) {\r\n      return (\r\n        <div className=\"table_dots\">\r\n        <div className=\"table_dots_icon\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    </div>\r\n        );\r\n    }\r\n    \r\n   \r\n    function courseFormater(cell, row,rowIndex) {\r\n      const courseItems = [];\r\n      \r\n      if(row.courseRegistered.length !== 0){\r\n        var moduleCompletionPercent = '0'\r\n        for (var i=0; i < 1; i++) {\r\n           moduleCompletionPercent = row.courseRegistered[i].moduleCompletion_percent\r\n          if(moduleCompletionPercent===\"\"){\r\n            moduleCompletionPercent = '0';\r\n          }\r\n          let courseName = row.courseRegistered[i]['courseName'];\r\n          let courseNumber = row.courseRegistered[i]['courseNumber'];\r\n          courseItems.push(<div className=\"table_course_wrap\" key={row.i_d +'_'+ i}><div className=\"table_course\"><a href={`/coursedetail/?courseId=${courseNumber}&courseName=${courseName}`}>{row.courseRegistered[i][\"courseName\"]}</a></div><div className=\"progress_status_container hide\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div><div className=\"table_number\">{row.courseCount}</div></div>);\r\n          \r\n        }\r\n        for (var j=1; j < row.courseRegistered.length; j++) {\r\n           moduleCompletionPercent = row.courseRegistered[j].moduleCompletion_percent\r\n          if(moduleCompletionPercent===\"\"){\r\n            moduleCompletionPercent = '0';\r\n          }\r\n          let courseName = row.courseRegistered[j]['courseName'];\r\n          let courseNumber = row.courseRegistered[j]['courseNumber'];\r\n          courseItems.push(<div className=\"table_course_wrap hide\" key={row.i_d +'_'+ j}><div className=\"table_course\" ><a href={`/coursedetail/?courseId=${courseNumber}&courseName=${courseName}`}>{row.courseRegistered[j][\"courseName\"]}</a></div><div className=\"progress_status_container\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div></div>);\r\n        }\r\n      }\r\n      var trId = \"courses_\"+rowIndex\r\n      return (\r\n        <div id={trId}>{courseItems}</div>\r\n      )\r\n    }\r\n     \r\n    function statusFormater(cell, row) {\r\n      const status = []\r\n      if(row.status === \" \"){\r\n        status.push(<div key={row.i_d}><div className=\"status\" >\r\n        <i className=\"green\"></i>\r\n        <span>Status</span>\r\n      </div><div className=\"session\">\r\n          <span>Last session</span>\r\n          <time>{row.lastLoginDate}</time>\r\n      </div></div>)\r\n      }\r\n      return (\r\n        status\r\n      )\r\n    }\r\n    function locationFormater(cell, row) {\r\n      \r\n      return (<div>\r\n        <div className=\"table_location\">{row.Location}</div>\r\n        <div className=\"table_location_it\">Department Name</div>\r\n        </div>\r\n      )\r\n    }\r\n    function addLink(cell, row) {\r\n      //return (<div><a href={`/add-employee/?userId=${row.userId}`}>{row.userId}</a></div>);\r\n      return (<div><a href>{row.userId}</a></div>);\r\n    }\r\n    this.state = {\r\n      columns:[{\r\n        dataField: \"i_d\",\r\n        text: \"Id\",\r\n        hidden: true,\r\n        csvExport: false\r\n       },{\r\n        text: '',\r\n        dataField: \"\",\r\n        formatter: formatter,\r\n        headerStyle: {\r\n          width:'10px'\r\n        },\r\n        events: {\r\n         onClick: (e, column, columnIndex, row, rowIndex) => {\r\n          \r\n          var currentClass = e.target.className;\r\n          var statusIndex = this.state.statusIndex\r\n          var courseIndex = this.state.courseIndex\r\n          var locationIndex = this.state.locationIndex\r\n          if(currentClass === 'table_dots'){\r\n            \r\n            if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\r\n              var coursesClass = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className;\r\n              var courseCount = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0]).get(0).childNodes\r\n              if(coursesClass !== 'table_course_wrap'){\r\n                //status\r\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\r\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session'\r\n                }\r\n                //courses\r\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap'\r\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container hide'\r\n                \r\n                for(var i = 1 ; i < courseCount.length; i++){\r\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[i]).get( 0 ).className= 'table_course_wrap hide'\r\n                }\r\n                \r\n                //location\r\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\r\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it'\r\n                }\r\n              }else{\r\n                //status\r\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\r\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session show'\r\n                }\r\n                //courses\r\n                if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\r\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap is-active height'\r\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container'\r\n                  for(var j = 1 ; j < courseCount.length; j++){\r\n                    $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[j]).get( 0 ).className= 'table_course_wrap is-active height'\r\n                  }\r\n                  /* $(e.target.parentNode.parentNode.childNodes[4].children[0].children[1]).get( 0 ).className= 'table_course_wrap is-active height' */\r\n                }\r\n                //location\r\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\r\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it show'\r\n                }\r\n              }\r\n              $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).slideDown='400'\r\n            }\r\n          }\r\n         }\r\n       }\r\n       \r\n      },\r\n       {\r\n         text: 'EMAIL',\r\n         dataField: 'userId',\r\n         sort: true,\r\n         csvExport: true,\r\n         classes:'entry-text',\r\n         formatter: addLink,\r\n         headerStyle: {\r\n          width:'25%'\r\n        }\r\n       },\r\n       {\r\n        dataField: \"FirstName\",\r\n        text: \"FirstName\",\r\n        sort: true,\r\n        csvExport: true,\r\n        headerStyle: {\r\n          width:'12%'\r\n        }\r\n       },\r\n       {\r\n        dataField: \"LastName\",\r\n        text: \"LastName\",\r\n        csvExport: true,\r\n        headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'COURSES',\r\n         dataField: 'courseRegistered',\r\n         formatter: courseFormater,\r\n         csvExport: false,\r\n         headerStyle: {\r\n          width:'22%'\r\n        }\r\n       },\r\n       {\r\n         text: 'PHONE',\r\n         dataField: 'Mobile',\r\n         sort: true,\r\n         csvExport: true,\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'device',\r\n         dataField: 'deviceMake',\r\n         sort: true,\r\n         csvExport: false,\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'deviceOS',\r\n         dataField: 'deviceOsVersion',\r\n         sort: true,\r\n         csvExport: false,\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'appVersion',\r\n         dataField: 'versionNumber',\r\n         sort: true,\r\n         csvExport: false,\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'gdprAccepted',\r\n         dataField: 'acceptedGDPR',\r\n         sort: true,\r\n         csvExport: true,\r\n         headerStyle: {\r\n          width:'15%'\r\n        }\r\n       },\r\n       {\r\n         text: 'LOCATION',\r\n         dataField: 'Location',\r\n         formatter:locationFormater,\r\n         sort: true,\r\n         csvExport: false,\r\n         headerStyle: {\r\n          width:'15%'\r\n        }\r\n       },\r\n       {\r\n        dataField: \"status\",\r\n        text: \"STATUS\",\r\n        csvExport: false,\r\n        formatter:statusFormater,\r\n        headerStyle: {\r\n          width:'10%'\r\n        }\r\n       }],\r\n      data : []\r\n       \r\n    }\r\n    this.state.selected = []\r\n    this.state.statusIndex = 4\r\n    this.state.courseIndex = 5\r\n    this.state.locationIndex = 12\r\n    this.state.batchData = [];\r\n\r\n    this.state.csvFileName = global.companyName + \"-Employee-\" + this.getDate() +\".csv\";\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    \r\n  }\r\n  gotoCourse = (courseNumber,courseName) =>{\r\n    this.props.history.push({pathname: '/coursedetail',state: {courseId: courseNumber,courseName:courseName}});\r\n  }\r\n  getDate() {\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    global.api.getEmployeeList(global.companyCode)\r\n    .then(res => res)\r\n                .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    //For Batch\r\n    global.api.getBatch(global.companyCode)\r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.batchNumber - b.batchNumber;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  }\r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Batch selected:`, selectedBatch.value);\r\n    var batchNumber = selectedBatch.value;\r\n    $(\"#gdpr\").prop(\"checked\", false);\r\n    this.setState({checked: false});\r\n    global.api.getEmployeeList(global.companyCode,batchNumber)\r\n      .then(res => res)\r\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide();})\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n  };\r\n  onBatchChangeOld= (e) => {\r\n    //List of Batches for selected Company\r\n    this.setState({selectedBatch: e.target.value});\r\n    var batchNumber = e.target.value;\r\n    global.api.getEmployeeList(global.companyCode,batchNumber)\r\n      .then(res => res)\r\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n  }\r\n  handleCheck = () => {\r\n    var notification=this.state.notification;\r\n    let batchNumber = \"\";\r\n    if(this.state.selectedBatch === undefined){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select batch before GDPR'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      $(\"#gdpr\").prop(\"checked\", false);\r\n      return false;\r\n    }else{\r\n      batchNumber = this.state.selectedBatch.value;\r\n      this.setState({checked: !this.state.checked});\r\n      let gdprCheck = \"\";\r\n      if(!this.state.checked === true){\r\n        gdprCheck = \"Y\";\r\n      }\r\n      global.api.getEmployeeList(global.companyCode,batchNumber,gdprCheck)\r\n        .then(res => res)\r\n        .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\r\n        .catch(err =>{\r\n          alert(err);\r\n      })\r\n    }\r\n  }\r\n  handleBtnClick = () => {\r\n    console.log(this.state.selected)\r\n  }\r\n  \r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    \r\n    var columnCount = $(e.target.parentNode.parentNode).get(0).cells;\r\n    \r\n    if (isSelect) {\r\n      \r\n      for (var i=1; i < columnCount.length; i++) {\r\n        if(i === 6){\r\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td entry-text is-active';\r\n        }else{\r\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td is-active';\r\n        }\r\n      }\r\n      \r\n    } else {\r\n      for (var j=1; j < columnCount.length; j++) {\r\n        if(j === 6){\r\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td entry-text';\r\n        }else{\r\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td';\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var rowCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        var colCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i]).get(0).cells;\r\n        for (var j=1; j < colCount.length; j++) {\r\n          if(j === 6){\r\n          $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td entry-text is-active';\r\n          }else{\r\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td is-active';\r\n          }\r\n        }\r\n      }\r\n      \r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        var coldCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii]).get(0).cells;\r\n        for (var jj=1; jj < coldCount.length; jj++) {\r\n          if(jj === 6){\r\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td entry-text';\r\n          }else{\r\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td';\r\n          }\r\n          \r\n        }\r\n      }\r\n      /* this.setState(() => ({\r\n        selected: []\r\n      })); */\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    const options = {\r\n      custom: true,\r\n      /* page: 1, */\r\n      /* totalSize: this.state.data.length */\r\n      slected:[],\r\n    };\r\n    const MyExportCSV = props => {\r\n      const handleClick = () => {\r\n        props.onExport();\r\n      };\r\n      return (\r\n        \r\n        <span\r\n          className=\"btn btn-radius btn-size btn-white export\"\r\n          onClick={handleClick} style={{marginTop:'20px'}}\r\n        >\r\n          <span>Export CSV</span>\r\n        </span>\r\n      );\r\n    };\r\n    function chkFormatter(cell, row) {\r\n      return (\r\n        <div class=\"table_check\">\r\n          <label class=\"form_checkbox\">\r\n            <input type=\"checkbox\" hidden=\"hidden\" />\r\n            <span> </span>\r\n            </label>\r\n            </div>\r\n        );\r\n    }\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      formatter:chkFormatter,\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'45px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const rowEvents = {onClick:(e, row, rowIndex) => {\r\n          \r\n      //console.log($(e.target.parentNode).get(0).tagName)\r\n      var elementName = ''\r\n      if($(e.target.parentNode).get(0).tagName === 'TR'){\r\n        elementName = e.target.parentNode\r\n      }else {\r\n        elementName = e.target.parentNode.parentNode.parentNode.parentNode\r\n      }\r\n      \r\n      if(elementName.tagName === 'TBODY'){\r\n        \r\n        elementName = elementName.childNodes[rowIndex]\r\n      }\r\n      var statusIndex = this.state.statusIndex\r\n      var courseIndex = this.state.courseIndex\r\n      var locationIndex = this.state.locationIndex\r\n      /* console.log(elementName)\r\n      console.log(rowIndex) */\r\n      if(elementName.tagName === 'TR'){\r\n        \r\n        if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\r\n          /* $('#courses_'+rowIndex).css('height','')\r\n          $('#courses_'+rowIndex).css('overflow','') */\r\n          var coursesClass = elementName.childNodes[courseIndex].children[0].children[0].className;\r\n          var courseCount = elementName.childNodes[courseIndex].children[0].childNodes\r\n          if(coursesClass !== 'table_course_wrap'){\r\n            //status\r\n            if(elementName.childNodes[statusIndex].children.length !== 0){\r\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session'\r\n            }\r\n            //courses\r\n            elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap'\r\n            elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container hide'\r\n            \r\n            for(var i = 1 ; i < courseCount.length; i++){\r\n              elementName.childNodes[courseIndex].children[0].children[i].className= 'table_course_wrap hide'\r\n            }\r\n            \r\n            //location\r\n            if(elementName.childNodes[locationIndex].children.length !== 0){\r\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it'\r\n            }\r\n          }else{\r\n            \r\n            //status\r\n            if(elementName.childNodes[statusIndex].children.length !== 0){\r\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session show'\r\n            }\r\n            //courses\r\n            if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\r\n              elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap is-active height'\r\n              elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container'\r\n              for(var j = 1 ; j < courseCount.length; j++){\r\n                elementName.childNodes[courseIndex].children[0].children[j].className= 'table_course_wrap is-active height'\r\n              }\r\n              if(courseCount.length>3){\r\n                /* $('#courses_'+rowIndex).css('height','200px')\r\n                $('#courses_'+rowIndex).css('overflow','auto') */\r\n              }\r\n             \r\n            }\r\n            //location\r\n            if(elementName.childNodes[locationIndex].children.length !== 0){\r\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it show'\r\n            }\r\n          }\r\n          elementName.childNodes[courseIndex].children[0].children[0].slideDown='400'\r\n        }\r\n      }\r\n      }\r\n     };\r\n    \r\n    const NoDataIndication = () => (\r\n      <div className=\"table_wraps\" id=\"spinner\">\r\n        <div className=\"spinner\" >\r\n          <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                  Loading....\r\n        </div>\r\n        </div>\r\n    );\r\n    \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\">\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    return (\r\n      \r\n          <ToolkitProvider\r\n          keyField=\"i_d\"\r\n          data={ this.state.data }\r\n          columns={ this.state.columns }\r\n          classes=\"table\"\r\n          search\r\n          exportCSV = {{ fileName: this.state.csvFileName }}\r\n          >\r\n          {\r\n            props => (\r\n              <main className=\"offset\" id=\"content\">\r\n                    <section className=\"section_box\">\r\n                        <h1 className=\"title1 mb50\">Employees</h1>\r\n                        <div className=\"head_box type2 mb50\">\r\n                            <div className=\"head_box_l\">\r\n                                <div className=\"activated_employee\">\r\n                                    <div className=\"activated_employee_it\">\r\n                                        <h4 className=\"title4 mb10\">Activated Employees</h4>\r\n                                        <div className=\"color5 fz28 fw700\">{this.state.data.length}</div>\r\n                                    </div>\r\n                                    <div className=\"activated_employee_it2\">\r\n                                        <span>Available Slots: 36</span>\r\n                                        <img src=\"images/icons/twotone-people.svg\" alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                              <div className=\"batch-select-box\">\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n      classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"gdpr-check-box title4\">\r\n                                  GDPR <input type=\"checkbox\" name=\"gdpr\" id=\"gdpr\" onChange={this.handleCheck} defaultChecked={this.state.checked}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"head_box_c\">\r\n                                <form className=\"form_search\">\r\n                                <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\r\n                                    <button>\r\n                                        <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"head_box_r\">\r\n                                <a className=\"btn btn-radius btn-size btn-white\" href=\"/add-employee\">\r\n                                    <i>\r\n                                        <img src=\"images/icons/User.svg\" alt=\"\" />\r\n                                    </i>\r\n                                    <span>Add new</span>\r\n                                </a>\r\n                                <span className=\"btn btn-radius btn-size btn-blue btn-icon-right export\" onClick={ this.handleBtnClick }>\r\n                                    <i>\r\n                                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\r\n                                    </i>\r\n                                    <span>Add to Course</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n              <div id=\"employee-content\" style={{'display':'none','width':'145%'}}>\r\n                {(this.state.data.length !== 0) ?<div className=\"head_box_l mb15\"><MyExportCSV {...props.csvProps} /></div>:''}\r\n              \r\n                {this.state.data.length !== 0? \r\n                <PaginationProvider pagination={ paginationFactory(options) }>\r\n                {({ paginationProps, paginationTableProps}) => (\r\n                  <div>\r\n                    \r\n                  <BootstrapTable\r\n                    { ...props.baseProps }\r\n                    selectRow={ selectRow } \r\n                    rowEvents={ rowEvents }\r\n                    { ...paginationTableProps }\r\n                    filter={ filterFactory() }\r\n                    classes=\"table\"\r\n                    noDataIndication={ () => <NoDataAvailable /> }\r\n                  />\r\n                  <PaginationListStandalone\r\n                    { ...paginationProps }\r\n                  />\r\n                  </div>\r\n                  ) \r\n                }\r\n                </PaginationProvider>\r\n                 : <NoDataAvailable /> } \r\n               \r\n              </div>\r\n              <NoDataIndication />\r\n              </section>\r\n        </main>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n        \r\n    );\r\n  }\r\n}\r\nexport default Employees;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport ReactFormInputValidation from \"react-form-input-validation\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport $ from 'jquery';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Upload, Icon, message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nclass AddEmployee extends Component {\r\n constructor() {\r\n    super();\r\n    this.state = {\r\n      countryCode: '+34',\r\n      phone: '+34',\r\n      startDate: new Date(),\r\n      fields: {\r\n        fname: \"\",\r\n        email: \"\",\r\n        lname:\"\",\r\n        location:\"\",\r\n        dni:\"\",\r\n        deptname:\"\",\r\n      },\r\n      errors: {}\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.errors = [];\r\n    this.form = new ReactFormInputValidation(this);\r\n    this.form.useRules({\r\n        fname: \"required\",\r\n        email: \"required|email\",\r\n    });\r\n\r\n    this.form.onformsubmit = (fields) => {\r\n      \r\n      var notification=this.state.notification\r\n      let actVal = this.refs['actionVal'].value;\r\n      if((actVal === '') || (actVal === 'fillform')){\r\n        let countryCode = \"\";\t\r\n        let mobile = \"\";\t\r\n        let mobileData = this.state.phone;\t\r\n        if(mobileData !== \"\"){\t\r\n          /*let mobileDataArr = mobileData.split(\" \",1);\t\r\n          countryCode = (mobileDataArr[\"0\"]).replace ( /[^0-9]/g, '' );\t\r\n          let n = mobileData.indexOf(\" \");\t\r\n          mobile = (mobileData.substr(parseInt(n+1))).replace ( /[^0-9]/g, '' );*/\t\r\n          let mobileDataArr = mobileData.split(\" \");  \r\n          countryCode = (mobileDataArr[\"0\"]).replace ( /[^0-9]/g, '' ); \r\n          let n = mobileData.indexOf(\" \");  \r\n          if(n >= 0){\r\n            mobile = (mobileData.substr(parseInt(n+1))).replace ( /[^0-9]/g, '' );\r\n          }\r\n        }\t\r\n        var params = {\r\n          userId:fields.email,\r\n          CompanyCode:global.companyCode,\r\n          FirstName:fields.fname,\r\n          LastName:fields.lname,\r\n          Location:fields.location,\r\n          Mobile:mobile,\t\r\n          CountryCode:countryCode,\r\n          DNI:fields.dni,\r\n          mobileOS:$('#mobileos').val(),\r\n          subscriptionValidDate:this.state.startDate,\r\n          company:fields.deptname,\r\n          weeklyEmail:$('#wemail').val(),\r\n          disable:$('#status').val(),\t\r\n          status:\"\",\r\n          lastLoginDate:\"\",\r\n          fcmToken:\"\",\r\n          versionNumber:\"\",\r\n          accountActivated:\"\",\r\n          activationDate:\"\",\r\n          deviceMake:\"\",\r\n          deviceOsVersion:\"\",\r\n          Mobilewcode:\"\",\r\n          token:\"\",\r\n          verification_code:\"\",\r\n          acceptedGDPR:\"\",\r\n          versionName:\"\",\r\n          updatedAt:\"\",\r\n          altEmail:\"\"\r\n        }\r\n        global.api.addEmployee(params)\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          if(json.data.message===\"Employee data inserted Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n        })\r\n        .catch(err =>{\r\n            //alert(err);\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=err.data.error\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n        });\r\n    }else{\r\n      alert(\"Upload File\");\r\n    }\r\n  }\r\n }\r\n  handleChange(e){\r\n    this.setState({countryCode: e.target.value});\r\n  }\r\n  handleCheck(e) {\r\n     this.setState({actionVal: e.currentTarget.dataset.id})\r\n     this.refs['actionVal'].value = e.currentTarget.dataset.id;\r\n  }\r\n  \r\n  render(){\r\n    const props = {\r\n      name: 'file',\r\n      accept: \".csv\",\r\n      multiple: true,\r\n      action: 'https://none',\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n           let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n               console.log(e.target.result);\r\n            }\r\n            reader.readAsText(info.file.originFileObj);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n    return (\r\n        \r\n      <main className=\"offset\" id=\"content\">\r\n      <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n    <section className=\"section_box\">\r\n      <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n        <h1 className=\"title1 mb185\">Add Employees</h1>\r\n        <form onSubmit={this.form.handleSubmit} className=\"form_employee js-tabs\">\r\n          <ul className=\"js-tabs-list tab-list\">\r\n            <li data-id=\"fillform\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Fill Form</span>\r\n            </li>\r\n            <li data-id=\"uploadfile\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Upload from File</span>\r\n            </li>\r\n          </ul>\r\n          <div className=\"js-tabs-box tab-box\">\r\n            <div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Personal Information</h2>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">FIRST Name</label>\r\n                    \r\n                    <input type=\"text\" className=\"form_input\" name=\"fname\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.fname}/>\r\n                    <label className=\"error_message\"> {this.state.errors.fname ? this.state.errors.fname : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">LAST Name</label>\r\n                    <input type=\"text\" className=\"form_input\" name=\"lname\" onChange={this.form.handleChangeEvent} value={this.state.fields.lname}/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">EMAIL</label>\r\n                    <input className=\"form_input\" type=\"email\" name=\"email\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.email}/>\r\n                    <label className=\"error_message\"> {this.state.errors.email ? this.state.errors.email : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">mobile</label>\r\n                    <div className=\"p_rel selectt\">\r\n                        <PhoneInput className=\"form_input form_input_tel\" country={'us'} value={this.state.phone} \r\n                        onChange={phone => this.setState({ phone })} \r\n                        enableSearch required= 'true' ref=\"mobile\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Location</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"location\" name=\"location\" ref=\"location\" onChange={this.form.handleChangeEvent} value={this.state.fields.location}/> \r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">dni</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"dni\" name=\"dni\" ref=\"dni\" onChange={this.form.handleChangeEvent} value={this.state.fields.dni}/> \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Work Information</h2>\r\n                <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Department</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"deptname\" name=\"deptname\" ref=\"deptname\" onChange={this.form.handleChangeEvent} value={this.state.fields.deptname}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                  <h2 className=\"title2 fw400 form_title mb25\">Additional Information</h2>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">MOBILE OS</label>\r\n                        <select className=\"styler select2 w182\" id=\"mobileos\" name=\"mobileos\" ref=\"mobileos\" >\r\n                            <option value=\"android\">Android</option>\r\n                            <option value=\"IOS\">IOS</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Subscription valid date</label>\r\n                        <div>\r\n                            <div className=\"datepicker_box mb20\">\r\n                                <div className=\"p_rel\">\r\n                                <DatePicker className=\" form_input\" selected={this.state.startDate} onChange= {date => this.setState({ startDate: date })} dateFormat=\"dd-MM-yyyy\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">weekly email</label>\r\n                        <select className=\"styler select2 w182\" id=\"wemail\" name=\"wemail\" ref=\"wemail\">\r\n                          <option value=\"No\">No</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Status</label>\r\n                        <select className=\"styler select2 w182\" id=\"status\" name=\"status\" ref=\"status\" >\r\n                        <option value=\"F\">Unarchive</option>\r\n                        <option value=\"T\">Archive</option>\r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"form_row_btn\">\r\n                <button className=\"btn btn-white btn-radius btn-size\">\r\n                  <span>Cancel</span>\r\n                </button>\r\n                <button className=\"btn btn-blue btn-radius btn-icon-left\">\r\n                  \r\n                  <span>Add employee</span>\r\n                </button>\r\n                <input type=\"hidden\" id=\"action\" name=\"actionVal\" ref=\"actionVal\"/>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              \r\n              <Dragger {...props} style={{width:'100%'}}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <Icon type=\"inbox\" />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  Support for a single or bulk upload. Strictly prohibit from uploading company data or other band fileList\r\n                </p>\r\n              </Dragger>\r\n            </div>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n</main>\r\n    )\r\n  }\r\n}\r\nexport default AddEmployee;\r\n\r\n","import React, { Component } from \"react\";\r\n//import DataTable from 'react-data-table-component';\r\nimport $ from 'jquery';\r\nclass EmployeestoCourses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(this.props.location.state===undefined){\r\n      window.location.href = '/employee';\r\n    }\r\n  //console.log(this.props.location.state.userid)\r\n    this.state = {\r\n      data : [],\r\n      userid:this.props.location.state.userid\r\n    }\r\n    this.state.selected = []\r\n    \r\n  }\r\n  componentDidMount() {\r\n    global.api.getCourseList(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  }\r\n  \r\n  handleChkChange = (e) => {\r\n    console.log(e.target.value)\r\n    \r\n    //console.log(e.target.checked)\r\n    var isSelect = e.target.checked\r\n    var chkValue = e.target.value\r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        selected: [...this.state.selected, chkValue]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        selected: this.state.selected.filter(x => x !== chkValue)\r\n      }));\r\n    }\r\n  }\r\n  \r\n  onSubmit = (e) => {\r\n    console.log($(e.target.parentNode.parentNode.parentNode))\r\n    console.log($('#popup_box').get(0).className)\r\n    window.location.href = '#popup_box'\r\n    //$('#popup_box').get(0).className = 'mfp popup_container'\r\n   /*  e.preventDefault();\r\n    let arr = [];\r\n    for (var key in this.state) {\r\n      if(this.state[key] === true) {\r\n        arr.push(key);\r\n      }\r\n    }\r\n    console.log(arr) */\r\n    /* let data = {\r\n      check: arr.toString() \r\n    }; */\r\n   /*  axios.post('http://localhost:4000/checks/add', data)\r\n          .then(res => console.log(res.data)); */\r\n  }\r\n  render() {\r\n    \r\n    const courseList = this.state.data.map((item, index) => {\r\n      var imgPath = '/images/icons/icon_module_'+item.moduleNumber+'.svg'\r\n      return (\r\n        <label className=\"course_wraps_checkbox\" key={index} >\r\n            <input type=\"checkbox\" id={item.Id} hidden=\"hiddden\" onChange={this.handleChkChange} value={item.Id}/>\r\n            <span>\r\n                <span className=\"course_wraps_img\">\r\n                    <img src={imgPath} alt=\"\" />\r\n                </span>\r\n                <span className=\"course_wraps_text\">\r\n                    <h3 className=\"title3\">{item.courseName}</h3>\r\n                    <p>{item.Id} Weeks</p>\r\n                </span>\r\n            </span>\r\n        </label>\r\n        \r\n      );\r\n    });\r\n    \r\n    return (<main className=\"offset\" id=\"content\">\r\n    <section className=\"section_box\">\r\n        <h1 className=\"title1 mb50\">Employees</h1>\r\n        {/* <form onSubmit = {this.onSubmit}> */}\r\n        <div className=\"head_box type2 mb20\">\r\n            <div className=\"head_box_l\">\r\n                <div className=\"activated_employee type2\">\r\n                    <div className=\"activated_employee_it mr30\">\r\n                        <img className=\"img\" src=\"/images/icons/twotone-people2.svg\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"activated_employee_it mr60\">\r\n                        <h4 className=\"title4 fw400 mb10\">Activated Employees</h4>\r\n                        <div className=\"color5 fz28 fw700\">54</div>\r\n                    </div>\r\n                    <div className=\"activated_employee_it\">\r\n                        <h4 className=\"title4 fw400 mb10\">Open Slots</h4>\r\n                        <div className=\"color5 fz28 fw300\">35</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"head_box_c\">\r\n                <span className=\"form_search\">\r\n                    <input type=\"text\" placeholder=\"Search for employee\" />\r\n                    <button>\r\n                        <img src=\"/images/icons/search-icon.svg\" alt=\"\" />\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <div className=\"head_box_r\">\r\n                <a className=\"btn btn-radius btn-size btn-white\" href=\"/employee\">\r\n                    <i>\r\n                        <img src=\"/images/icons/User.svg\" alt=\"\" />\r\n                    </i>\r\n                    <span>Add new</span>\r\n                </a>\r\n                <a className=\"btn btn-radius btn-size btn-blue btn-icon-right popup-link\" href='#popup_box1' onClick={this.onSubmit}>\r\n                    <i>\r\n                        <img src=\"/images/icons/arrow_next2.svg\" alt=\"\" />\r\n                    </i>\r\n                    <span>Add to Course</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div className=\"head_box type2 mb105\">\r\n            <div className=\"head_box_l fd\">\r\n                <div className=\"following_box\">\r\n                    <span className=\"following_img\">\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                    </span>\r\n                    <span>\r\n                        <b>+65 more</b>&nbsp;will be added to the following</span>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className=\"course_wraps mb105\">\r\n            <h2 className=\"mb30 fw400\">General Courses</h2>\r\n            <div className=\"course_wraps_it\">\r\n            {courseList}\r\n                \r\n            </div>\r\n        </div>\r\n        {/* <div className=\"course_wraps\">\r\n            <h2 className=\"mb30 fw400\">Management</h2>\r\n            <div className=\"course_wraps_it\">\r\n            {courseList}\r\n            </div>\r\n        </div> */}\r\n        {/* </form> */}\r\n    </section>\r\n    \r\n</main>)\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default EmployeestoCourses;\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport {Pie } from 'react-chartjs-2';\r\nimport Select from 'react-select';\r\n\r\nclass Reports extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      columns:[],\r\n      data:[]\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeData = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none'\r\n    this.state.noDataAvailable = 'none'\r\n    this.state.avgVals = [];\t\t\r\n    this.state.avgPercentTable = \"\";\t\t\r\n    this.state.grp1Val = 0;\t\t\r\n    this.state.grp2Val = 0;\t\t\r\n    this.state.grp3Val = 0;\t\t\r\n    this.state.grp1PVal = 0;\t\t\r\n    this.state.grp2PVal = 0;\t\t\r\n    this.state.grp3PVal = 0;\r\n    this.state.csvFileName = global.companyName +  \"-\" + this.getDate() +\".csv\";\r\n    this.state.pieChartDisplay = false\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n  }\r\n  getDate() {\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({ routeData: []});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []}); \r\n  };\r\n  \r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    \t\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        this.setState({ routeData: data});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    \r\n    /*reports call*/\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#attenPagination').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    \r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#attenPagination').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  \r\n  onRouteSelect = selectedRoute => {\r\n    this.setState({ selectedRoute });\r\n    console.log(`Option selected:`, selectedRoute);\r\n    this.setState({selectedRouteText: []});\r\n    let selRoute = [];\r\n    let value = [];\r\n    if(selectedRoute !== null){\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i]);\r\n          selRoute.push(selectedRoute[i].label);\r\n      }\r\n    }\r\n    this.setState({selectedRouteText: selRoute});\r\n    this.setState({selectedRoute: value}); \r\n  };\r\n  handleBtnClick = () => {\r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#attenPagination').hide();\r\n    this.setState({data: []});\r\n    this.forceUpdate();\r\n    \r\n    let colNames = [...this.state.baseColNames];\r\n    \r\n    var selectedRouteText = this.state.selectedRouteText;\r\n    console.log('selectedRouteText',selectedRouteText)\r\n    console.log('colNames',this.state.baseColNames)\r\n    var colCount = 0\r\n    for (var row1 of selectedRouteText) {\r\n      row1 = row1.replace(\"\\r\\n\", \" \");\r\n     var routeCols = {\r\n        text: row1,\r\n        dataField: row1,\r\n        headerStyle: {\r\n          width:'100px',\r\n          whiteSpace: 'normal'\r\n        }\r\n      };\r\n      colCount = colCount+1\r\n      colNames.push(routeCols);\r\n      \r\n    }\r\n    if(selectedRouteText.length > 0){\r\n      var avg = {\r\n        text: \"Avg\",\r\n        dataField: \"avg\",\r\n        sort:true,\r\n        headerStyle: {\r\n          cursor:'pointer',\r\n          width:'100px',\r\n        },\r\n      }\r\n      colCount = colCount+1\r\n      colNames.push(avg);\r\n    }\r\n    \r\n    this.setState({columns: colNames});\r\n    \r\n    this.setState({avgVals: []});\t\t\r\n    let avgValsarr = [];\r\n\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    \r\n    let selectedRoute = this.state.selectedRoute;\r\n    if(selectedRoute.length > 0){\r\n      var value = [];\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i].value);\r\n      }\r\n      selectedRoute = value.toString();\r\n    }else{\r\n      selectedRoute = \"\";\r\n      this.setState({pieChartDisplay:false})\r\n    }\r\n\r\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#attenPagination').show();\r\n        const items = [];\r\n        for (const row of result) {\r\n          let item = row;\r\n          let totRoutes = 0;\r\n          let avgRoutes = 0;\r\n          if(selectedRouteText.length > 0){\r\n            for (var row1 of selectedRouteText){\r\n              row1 = row1.replace(\"\\r\\n\", \" \");\r\n              if(row.Routes[row1] !== undefined){\r\n                item[row1] = row.Routes[row1]['routePercent'];\r\n                totRoutes = parseInt(totRoutes)+parseInt(row.Routes[row1]['routePercent']);\r\n              }\r\n            }\r\n            if(totRoutes > 0){\r\n              avgRoutes = Math.round(totRoutes/(selectedRouteText.length));\r\n            }\r\n            item['avg'] = avgRoutes;\r\n            avgValsarr.push(avgRoutes);\r\n          }\r\n          items.push(item);\r\n        }\r\n        this.setState({avgVals: avgValsarr});\t\r\n        if(selectedRoute.length > 0){\t\r\n\r\n          let grp1 = 0;\t\t\r\n          let grp2 = 0;\t\t\r\n          let grp3 = 0;\t\t\r\n          let grp1Percent = 0;\t\t\r\n          let grp2Percent = 0;\t\t\r\n          let grp3Percent = 0;\t\t\r\n          for (const avgData of avgValsarr){\t\t\r\n            if (avgData >= 61 && avgData <= 100) {\t\t\r\n              grp3 = grp3+1;\t\t\r\n            }else if(avgData >= 31 && avgData <= 60){\t\t\r\n              grp2 = grp2+1;\t\t\r\n            }else{\t\t\r\n              grp1 = grp1+1;\t\t\r\n            }\t\t\r\n          }\t\t\r\n          grp1Percent = Math.round((grp1/(avgValsarr.length))*100);\t\t\r\n          grp2Percent = Math.round((grp2/(avgValsarr.length))*100);\t\t\r\n          grp3Percent = Math.round((grp3/(avgValsarr.length))*100);\t\t\r\n          this.setState({grp1Val: grp1});\t\t\r\n          this.setState({grp2Val: grp2});\t\t\r\n          this.setState({grp3Val: grp3});\t\t\r\n          this.setState({grp1PVal: grp1Percent});\t\t\r\n          this.setState({grp2PVal: grp2Percent});\t\t\r\n          this.setState({grp3PVal: grp3Percent});\r\n          this.setState({pieChartDisplay:true})\r\n        }\r\n        this.setState({data: items});\r\n        \r\n      }\r\n    )\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    \r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const pieChat = {\t\t\r\n      labels: ['0-30%', '30%-60%','60%-100%'],\t\t\r\n      datasets: [\t\t\r\n      {\t\t\r\n        label: 'Avg % Completion',\t\t\r\n        backgroundColor: [\t\t\r\n          '#B21F00',\t\t\r\n          '#2FDE00',\t\t\r\n          '#00A6B4',\t\t\r\n        ],\t\t\r\n        hoverBackgroundColor: [\t\t\r\n        '#501800',\t\t\r\n        '#175000',\t\t\r\n        '#003350'\t\t\r\n        ],\t\t\r\n        data: [this.state.grp1PVal, this.state.grp2PVal, this.state.grp3PVal]\t\t\r\n        }\t\t\r\n      ]\t\t\r\n    };\r\n    const MyExportCSV = props => {\r\n      const handleClick = () => {\r\n        props.onExport();\r\n      };\r\n      return (\r\n        \r\n        <span\r\n          className=\"btn btn-radius btn-size btn-white export\"\r\n          onClick={handleClick} style={{marginTop:'20px'}}\r\n        >\r\n          <span>Export CSV</span>\r\n        </span>\r\n      );\r\n    };\r\n    \r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const ReportSummary = () =>(\r\n      <div className=\"section_wrap\">\r\n            <div className=\"box w1\">\r\n             \r\n              <div className=\"white_box type2\" data-mh=\"white_box\">\r\n                <table className=\"activity_table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"percent-table-th\"></th>\r\n                            <th>\r\n                                <span>Range</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th-width\">\r\n                                <span>User</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th-width\">\r\n                                <span>Percentage(%)</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>60-100%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp3Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp3PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>30-60%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp2Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp2PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>0-30%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp1Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp1PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"box w2\">\r\n          \r\n            <div className=\"white_box\" data-mh=\"white_box\">\r\n            <Pie\r\n          data={pieChat}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average % Completion Reports',\r\n              fontSize:15\r\n            }\r\n          }}\r\n        />\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n    );\r\n    return (\r\n      <main className=\"offset\" id=\"content\">\r\n        <section className=\"section_box\">\r\n          <h1 className=\"title1 mb25\">Completion Reports</h1>\r\n          <h4 className=\"title4 mb40\">For {this.state.selectedCompanyName}</h4>\r\n          <div className=\"head_box type2 mb5\" id=\"completion_reports\">\r\n            <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n              <div className=\"head_box_l\">\r\n                <div className=\"activated_employee type2\">\r\n                  <div style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                    <div style={{'width':'100px'}}>\r\n                    <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"batch\"/>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                    <div style={{'width':'300px'}}>\r\n                    <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"course\"/>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                    <div style={{'width':'400px'}}>\r\n                    <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"route \" closeMenuOnSelect={false}/>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r\">\r\n                  <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\r\n                    <span\r\n                      className=\"btn btn-radius btn-size btn-blue btn-icon-right export\"\r\n                      onClick={this.handleBtnClick}\r\n                    >\r\n                      <i>\r\n                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\r\n                      </i>\r\n                      <span>Submit</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"reports\" className=\"scrollmenu\" style={{'display':'none'}}>\r\n          <ToolkitProvider\r\n          keyField=\"i_d\"\r\n          data={this.state.data}\r\n          columns={this.state.columns}\r\n          className=\"table type2\"\r\n          exportCSV = {{ fileName: this.state.csvFileName }}\r\n        >\r\n        {props => (\r\n              <div  id=\"table_wraps\" style={{'display':'none'}} >\r\n              {(this.state.pieChartDisplay === true && this.state.data.length !== 0) ?<ReportSummary />:''}\r\n              <div className=\"head_box_c mb15\"><MyExportCSV {...props.csvProps} /></div>\t\r\n              <div className=\"table_wraps\">\r\n                {this.state.data.length !== 0? \r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => (\r\n                    <div className=\"attenPagination\" id=\"attenPagination\">\r\n                      <BootstrapTable\r\n                      selectRow={ selectRow } \r\n                      bootstrap4\r\n                        {...props.baseProps}\r\n                        {...paginationTableProps}\r\n                        classes=\"reports_table\"\r\n                        noDataIndication={ () => <NoDataAvailable /> }\r\n                      />\r\n                      <PaginationListStandalone {...paginationProps} />\r\n                    </div>\r\n                  )}\r\n                </PaginationProvider>\r\n                :  <NoDataAvailable />}\r\n                <NoDataIndication />\r\n              </div>\r\n              </div>\r\n        )}\r\n      </ToolkitProvider>\r\n      \r\n      </div>\r\n      \r\n      </section>\r\n          </main>\r\n    );\r\n  }\r\n}\r\nexport default Reports;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {PaginationProvider,PaginationListStandalone} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\r\n//import Loader from \"react-loader-spinner\";\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport { Progress } from 'reactstrap';  \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport * as moment from 'moment'\r\nimport queryString from 'query-string';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nclass CourseDetails extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    let params = queryString.parse(this.props.location.search)\r\n     \r\n    if(this.props.location.state===undefined && params.courseId===undefined && params.courseName===undefined){\r\n      window.location.href = '/courses';\r\n    }\r\n    let courseId = ''\r\n    let courseName = ''\r\n    if(this.props.location.state!==undefined){\r\n      if(this.props.location.state.courseId!==undefined && this.props.location.state.courseName!==undefined){\r\n        courseId = this.props.location.state.courseId;\r\n        courseName = this.props.location.state.courseName;\r\n      }\r\n    }\r\n    if(params.courseName!==undefined && params.courseId!==undefined){\r\n      courseId = params.courseId;\r\n      courseName = params.courseName;\r\n    }\r\n    //Set attendance Table Settings\r\n    this.state = {\r\n      courseId:courseId,\r\n      courseName:courseName,\r\n      attendanceColumns: [\r\n        { dataField: \"Id\", text: \"Id\", csvExport: false, hidden: true },\r\n        { \r\n          text: \"Email\",\r\n          dataField: \"userId\",\r\n          sort: true,\r\n          classes:'entry-text',\r\n          headerStyle: {\r\n            width: \"25%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"FirstName\",\r\n          text: \"FirstName\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"LastName\",\r\n          text: \"LastName\",\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"Registered\",\r\n          dataField: \"dateRegistered\",\r\n          headerStyle: {\r\n            width: \"10%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"TimeSpent\",\r\n          dataField: \"totalTimeSpent\",\r\n          headerStyle: {\r\n            width: \"10%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"Completion\",\r\n          dataField: \"completionPercentage\",\r\n          formatter: completionFormater,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        }\r\n      ],\r\n      attendanceData: [{'message':'nodata'}],\r\n      empColumns: [\r\n        \r\n        {\r\n          dataField: \"FirstName\",\r\n          text: \"FirstName\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"LastName\",\r\n          text: \"LastName\",\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"EMAIL\",\r\n          dataField: \"userId\",\r\n          sort: true,\r\n          classes: \"entry-text\",\r\n          headerStyle: {\r\n            width: \"30%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"PHONE\",\r\n          dataField: \"Mobile\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"LOCATION\",\r\n          dataField: \"Location\",\r\n          formatter: locationFormater,\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        }\r\n      ],\r\n      empData: []\r\n    };\r\n    this.state.attenSelected = [];\r\n    this.state.empSelected = [];\r\n    this.state.empNodata = false;\r\n    this.state.totalData=[];\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    \r\n    //Column Formatter methods\r\n    function completionFormater(cell, row) {\r\n      return (\r\n        <div className=\"table_progres_bar\">\r\n          <Progress value={row.completedStatus}>{row.completedStatus}%</Progress>\r\n        </div>\r\n      );\r\n    }\r\n    function locationFormater(cell, row) {\r\n      return (\r\n        <div>\r\n          <div className=\"table_location\">{row.Location}</div>\r\n          <div className=\"table_location_it\">Department Name</div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  //remote Data Load\r\n  componentDidMount() {\r\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\r\n                .then(res => res)\r\n                .then((json)=>{\r\n                  this.setState({attendanceData:json.registered})\r\n                  this.setState({empData:json.availableToRegister})\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n  }\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState(() => ({\r\n      attenSelected: []\r\n    }));\r\n    this.setState(() => ({\r\n      empSelected: []\r\n    }));\r\n    this.setState({attendanceData:[]})\r\n                  this.setState({empData:[]})\r\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        this.setState({attendanceData:json.registered})\r\n        this.setState({empData:json.availableToRegister})\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n  }\r\n\r\n  handleDeleteClick = e => {\r\n    e.preventDefault();\r\n    if (this.state.attenSelected.length === 0) {\r\n      alert(\"please select one user\");\r\n      return false;\r\n    } else {\r\n      var userIds = this.state.attenSelected[0]\r\n      var companyCode = global.companyCode;\r\n      //var courseNumber = this.state.courseId\r\n      global.api.deleteEmpCourse(userIds, companyCode, this.state.courseId)\r\n      .then(res => res)\r\n                .then((json)=>{\r\n                  var notification=this.state.notification\r\n                  if(json.data.message==='Employee is removed from this Course'){\r\n                    notification.type='success';\r\n                    notification.title='Success';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                    this.setState(() => ({\r\n                      attenSelected: []\r\n                    }));\r\n                    this.setState(() => ({\r\n                      empSelected: []\r\n                    }));\r\n                    this.props.history.replace({ //browserHistory.push should also work here\r\n                      pathname: '/coursedetail',\r\n                      state: {courseId:this.state.courseId,\r\n                      courseName:this.state.courseName}\r\n                    });\r\n                  }else{\r\n                    notification.type='danger'\r\n                    notification.title='Error';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                  }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    }\r\n  };\r\n  handleAddClick = e => {\r\n    e.preventDefault();\r\n    if (this.state.empSelected.length === 0) {\r\n      alert(\"please select one user\");\r\n      return false;\r\n    } else {\r\n      var userIds = this.state.empSelected[0]\r\n      var companyCode = global.companyCode;\r\n      \r\n      global.api.addEmpCourse(userIds, companyCode, this.state.courseId)\r\n      .then(res => res)\r\n                .then((json)=>{\r\n                  var notification=this.state.notification\r\n                  if(json.data.message==='Employee is successfully registered for this Course'){\r\n                    notification.type='success'\r\n                    notification.title='Success';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                    this.setState(() => ({\r\n                      attenSelected: []\r\n                    }));\r\n                    this.setState(() => ({\r\n                      empSelected: []\r\n                    }));\r\n                    this.props.history.replace({ //browserHistory.push should also work here\r\n                      pathname: '/coursedetail',\r\n                      state: {courseId:this.state.courseId,\r\n                        courseName:this.state.courseName}\r\n                    });\r\n                  }else{\r\n                    notification.type='danger'\r\n                    notification.title='Error';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                  }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    }\r\n  };\r\n  handleEmpOnSelect = (row, isSelect, rowIndex, e) => {\r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        empSelected: [...this.state.empSelected, row.userId]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        empSelected: this.state.empSelected.filter(x => x !== row.userId)\r\n      }));\r\n    }\r\n  }\r\n  handleEmpOnSelectAll = (isSelect, rows, e) => {\r\n    const ids = rows.map(r => r.userId);\r\n    \r\n    if (isSelect) {\r\n      \r\n      this.setState(() => ({\r\n        empSelected: ids\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        empSelected: []\r\n      }));\r\n    }\r\n  }\r\n  handleAttenOnSelect = (row, isSelect, rowIndex, e) => {\r\n    \r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        attenSelected: [...this.state.attenSelected, row.userId]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        attenSelected: this.state.attenSelected.filter(x => x !== row.userId)\r\n      }));\r\n    }\r\n  }\r\n  handleAttenOnSelectAll = (isSelect, rows, e) => {\r\n    const ids = rows.map(r => r.userId);\r\n    if (isSelect) {\r\n      \r\n      this.setState(() => ({\r\n        attenSelected: ids\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        attenSelected: []\r\n      }));\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const MyExportCSV = props => {\r\n      const handleClick = () => {\r\n        props.onExport();\r\n      };\r\n      return (\r\n        <span className=\"btn btn-radius btn-size btn-blue export\"  onClick={handleClick}>\r\n          <span>Export CSV</span>\r\n        </span>\r\n      );\r\n    };\r\n    const options = {\r\n      custom: true,\r\n      sizePerPage: 30,\r\n      selected:[],\r\n      /* totalSize: this.state.attendanceData.length, */\r\n      noDataText: 'Your_custom_text',\r\n      withoutNoDataText: true\r\n    };\r\n    const empOptions = {\r\n      custom: true,\r\n      sizePerPage: 30,\r\n      selected:[],\r\n      /* totalSize: this.state.empData.length */\r\n    };\r\n    const selectRow = {\r\n      mode: \"radio\",\r\n      clickToSelect: false,\r\n      onSelect: this.handleAttenOnSelect,\r\n      //onSelectAll: this.handleAttenOnSelectAll,\r\n      headerColumnStyle: {\r\n        width: \"25px\",\r\n        paddingLeft: \"5px\"\r\n      }\r\n    };\r\n    \r\n    const empSelectRow = {\r\n      mode: \"radio\",\r\n      clickToSelect: false,\r\n      onSelect: this.handleEmpOnSelect,\r\n      /* onSelectAll: this.handleEmpOnSelectAll, */\r\n      headerColumnStyle: {\r\n        width: \"25px\",\r\n        paddingLeft: \"5px\"\r\n      }\r\n    };\r\n    \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\">\r\n       No Data Available....\r\n      </div>\r\n    );\r\n    const toDate = moment().format(\"DD-MM-YYYY\");\r\n    \r\n    return (\r\n      <main className=\"offset\" id=\"content\">\r\n        <section className=\"section_box\">\r\n          <h4 className=\"title4 mb15 fw500\">Courses</h4>\r\n          <div className=\"head_box type2 mb55\">\r\n            <div className=\"head_box_l\">\r\n              <h1 className=\"title1 mr15\">\r\n                {this.state.courseName}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          \r\n          <ToolkitProvider\r\n            keyField=\"i_d\"\r\n            data={this.state.attendanceData}\r\n            columns={this.state.attendanceColumns}\r\n            classes=\"table-atten type2\"\r\n            exportCSV={{ fileName: `employeeperformace_for_${global.companyName}_${this.state.courseName}_${toDate}.csv` }}\r\n            search\r\n            >\r\n            {props => (\r\n              <div>\r\n                <div className=\"head_box type2 mb20\">\r\n                  <div className=\"head_box_l\">\r\n                    <h2 className=\"title2 fw400 mr12\">\r\n                      Attendance / Performance\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"head_box_c\">\r\n                    <div className=\"form_search\">\r\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\r\n                      <button>\r\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r\">\r\n                    <MyExportCSV {...props.csvProps} />\r\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleDeleteClick}>\r\n                      <span>Delete</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"table_wraps\">\r\n                  <PaginationProvider pagination={paginationFactory(options)}>\r\n                    {({ paginationProps, paginationTableProps }) => (\r\n                      <div className=\"attenPagination\">\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          selectRow={selectRow}\r\n                          {...paginationTableProps}\r\n                          filter={ filterFactory() }\r\n                          classes=\"table-atten\"\r\n                          noDataIndication={ () => <NoDataAvailable /> }\r\n                        />\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </div>\r\n                    )}\r\n                  </PaginationProvider>\r\n                </div>\r\n                <div className=\"table_after\"></div>\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n          <ToolkitProvider\r\n            keyField=\"userId\"\r\n            data={this.state.empData}\r\n            columns={this.state.empColumns}\r\n            classes=\"table-atten type2\"\r\n            search>\r\n            {props => (\r\n              <div>\r\n                <div className=\"head_box type2 mb20\">\r\n                  <div className=\"head_box_l\">\r\n                    <h2 className=\"title2 fw400 mr12\">\r\n                      Available Employees for Enrollment\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"head_box_c\">\r\n                    <div className=\"form_search\">\r\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\r\n                      <button>\r\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r al_itc\">\r\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleAddClick}>\r\n                      <i>\r\n                        <img src=\"images/icons/User.svg\" alt=\"\" />\r\n                      </i>\r\n                      <span> Add new</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"table_wraps\">\r\n                  <PaginationProvider\r\n                    pagination={paginationFactory(empOptions)}\r\n                  >\r\n                    {({ paginationProps, paginationTableProps }) => (\r\n                      <div className=\"attenPagination\">\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          selectRow={empSelectRow}\r\n                          {...paginationTableProps}\r\n                          classes=\"table-atten\"\r\n                          noDataIndication={ () => <NoDataAvailable /> }\r\n                        />\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </div>\r\n                    )}\r\n                  </PaginationProvider>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default CourseDetails;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Select from 'react-select';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\r\nconst { SearchBar } = Search;\r\n\r\nclass Courses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    function formatter(cell, row) {\r\n      return (\r\n        <div className=\"course_child_it\">\r\n                  <span className=\"btn btn-size3 btn-blue btn-radius export\" name={row.courseName} id={row.courseNumber}>\r\n                      <span name={row.courseName} id={row.courseNumber}>Go to course</span>\r\n                  </span>\r\n              </div>\r\n    \r\n        );\r\n    }\r\n    \r\n   \r\n    function courseFormater(cell, row,rowIndex) {\r\n\r\n      let imgPath = '/images/icons/icon_module_'+row.moduleNo+'.svg'      \r\n      let trId = \"courses_\"+rowIndex\r\n      return (\r\n              <div id={trId} className=\"course_child_it\">\r\n                <div className=\"course_child_img\">\r\n                    <img src={imgPath} alt=\"\"/>\r\n                </div>                  \r\n                <div className=\"course_child_text\">\r\n                    <div className=\"course_child_title\">{row.courseName}</div>\r\n                </div>\r\n              </div>\r\n              )\r\n    }\r\n    this.state = {\r\n      columns:[{\r\n        dataField: \"i_d\",\r\n        text: \"Id\",\r\n        hidden: true\r\n       },\r\n       {\r\n         text: 'COURSE',\r\n         dataField: 'courseName',\r\n         formatter: courseFormater,\r\n         headerStyle: {\r\n          width:'38%'\r\n        }\r\n       },\r\n       {\r\n        text: 'course Number',\r\n        dataField: \"courseNumber\",\r\n        headerStyle: {\r\n          width:'15%'\r\n        },\r\n      },\r\n       {\r\n        text: \"Batch\",\r\n        dataField: \"batchNumber\",\r\n        headerStyle: {\r\n          width:'7%'\r\n        }\r\n       },\r\n       {\r\n        dataField: \"moduleNo\",\r\n        text: \"Module \",\r\n        headerStyle: {\r\n          width:'8%'\r\n        }\r\n       },\r\n      \r\n       {\r\n        dataField: \"courseStartDate\",\r\n        text: \"Start Date\",\r\n        headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'Enrolled',\r\n         dataField: 'enrolled',\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n        text: '',\r\n        dataField: \"\",\r\n        formatter: formatter,\r\n        headerStyle: {\r\n          width:'12%'\r\n        },\r\n        events: {\r\n          onClick: (e, column, columnIndex, row, rowIndex) => {\r\n            \r\n            this.props.history.push({\r\n              pathname: '/coursedetail',\r\n              state: {courseId: row.courseNumber, courseName:row.courseName}\r\n            });\r\n          }\r\n        }\r\n       \r\n      }],\r\n      data : []\r\n       \r\n    }\r\n    \r\n  }\r\n  componentDidMount() {\r\n\r\n    global.api.getCourseList(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    //For Batch\r\n    global.api.getBatch(global.companyCode)\r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n    \r\n  }\r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Batch selected:`, selectedBatch.value);\r\n    var batchNumber = selectedBatch.value;\r\n    global.api.getCourseList(global.companyCode,batchNumber)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\">\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    );\r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\">\r\n       No Data Available...\r\n      </div>\r\n    );\r\n        \r\n    return (<main className=\"offset\" id=\"content\" style={{'backgroundColor':'#f2f3f8'}}>\r\n            <section className=\"section_box\">\r\n                <div className=\"head_box type2 mb25\">\r\n                    <div className=\"head_box_l\">\r\n                        <h1 className=\"title1 m_b_zero\">Courses</h1>\r\n                        <div className=\"batch-select-box\">\r\n                          <span className=\"title4 \">Batch</span>\r\n                        </div>\r\n                        <div className=\"batch-select-box\">\r\n                          <div style={{'width':'100px'}}>\r\n                            <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n      classNamePrefix=\"batch\"/>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"course_container\">\r\n                {this.state.data.length !== 0? \r\n                    \r\n                        <ToolkitProvider\r\n                        keyField=\"i_d\"\r\n                        data={ this.state.data }\r\n                        columns={ this.state.columns }\r\n                        classes=\"course_table\"\r\n                        search\r\n                        >\r\n                        {props => (\r\n                            <div className=\"head_box type2 mb20\">\r\n                              <div className=\"head_box_c\">\r\n                                <div className=\"form_search\">\r\n                                  <SearchBar { ...props.searchProps } placeholder=\"Search for course \"/>\r\n                                  <button>\r\n                                      <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                              <BootstrapTable\r\n                                { ...props.baseProps }\r\n                                filter={ filterFactory() }\r\n                                classes=\"course_table\"\r\n                                noDataIndication={ () => <NoDataAvailable /> }\r\n                              />\r\n                              </div>\r\n                        )}\r\n                      </ToolkitProvider>\r\n                    :<NoDataIndication />}\r\n                </div>\r\n            </section>\r\n        </main>)\r\n  }\r\n}\r\nexport default Courses;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Textbox, Textarea } from 'react-inputs-validation';\r\n    import \"../styles/react-inputs-validation.min.css\";\r\n    import Select from 'react-select';\r\n    import $ from 'jquery';\r\nclass Firebase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n          title: \"\",\r\n          message: \"\",\r\n          validate: false\r\n        };\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.state.emailData = [];\r\n    }\r\n    componentDidMount() {\r\n        \r\n        global.api.getEmailList(global.companyCode)\r\n        .then(response => response)\r\n        .then(\r\n        data => {\r\n        this.setState({ emailData: data});\r\n        });\r\n    }\r\n    onEmailSelect = email => {\r\n        this.setState({ email });\r\n        console.log(`Option selected:`, email);\r\n        \r\n        let value = [];\r\n        if(email !== null){\r\n          for (var i = 0; i < email.length; i++) {\r\n              value.push(email[i]);\r\n          }\r\n        }\r\n        this.setState({email: value}); \r\n      };\r\n    toggleValidating(validate) {\r\n        this.setState({ validate });\r\n    }\r\n    validateForm(e) {\r\n        e.preventDefault();\r\n        this.toggleValidating(true);\r\n        const {\r\n          hasEmailError,\r\n          hasTitleError,\r\n          hasMessageError\r\n        } = this.state;\r\n        if (\r\n          !hasEmailError &&\r\n          !hasTitleError &&\r\n          !hasMessageError \r\n        ) {\r\n          \r\n        }\r\n        if(this.state.email.length===0){\r\n            this.setState({hasEmailError:'please one email'})\r\n            alert('please select atleast one email')\r\n            return false;\r\n        }else{\r\n            var data = {\r\n                'email':this.state.email,\r\n            'message':this.state.message,\r\n                'title':this.state.title,\r\n                'include_image':$('#include_img').is(\":checked\"),\r\n            }\r\n            console.log('data',data)\r\n            \r\n        }\r\n      }\r\n\r\n  render(){\r\n    const {\r\n        email,\r\n        title,\r\n        message,\r\n        validate,\r\n      } = this.state;\r\n      \r\n    return (\r\n        \r\n        <main className=\"offset\" id=\"content\">\r\n            <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n              <h1 className=\"title1 mb50\">Push Notification</h1>\r\n              <form onSubmit={this.validateForm}  className=\"form_employee  js-tabs\">\r\n                \r\n                <div className=\"js-tabs-box tab-box\">\r\n                  <div>\r\n                    <div className=\"form_row_box\">\r\n                      <h2 className=\"title2 fw400 form_title mb30\">Send to Single Device</h2>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Select Email</label>\r\n                           <Select  attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }} value={email} isMulti onChange={this.onEmailSelect} \r\n                            onBlur={() => {}}  options={this.state.emailData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            classNamePrefix=\"route \" closeMenuOnSelect={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasEmailError: res, validate: false })\r\n                            } \r\n                            validationOption={{\r\n                                name: \"Email\",\r\n                                check: true, \r\n                                required: true \r\n                                }}/> \r\n                          {/* <Select attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }}\r\n                            isMulti\r\n                            classNameSelect=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            value={email}\r\n                            disabled={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasMovieError: res, validate: false })\r\n                            } \r\n                            optionList={this.state.emailData} \r\n                            customStyleOptionListContainer={{\r\n                            maxHeight: \"200px\",\r\n                            overflow: \"auto\",\r\n                            fontSize: \"14px\"\r\n                            }} // Optional.[Object].Default: {}.\r\n                            onChange={(res, e) => {\r\n                            this.setState({ country: res.id });\r\n                            console.log(e);\r\n                            }} \r\n                            onBlur={() => {}} \r\n                            \r\n                            validationOption={{\r\n                            name: \"Email\",\r\n                            check: true, \r\n                            required: true \r\n                            }}\r\n                        /> */}\r\n                         \r\n                        </div>\r\n                        {/* <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">LAST Name</label>\r\n                          <input className=\"form_input\" type=\"text\" id=\"lname\" name=\"lname\" ref=\"lname\"/> \r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Title</label>\r\n                          <Textbox classNameInput=\"form_input\" attributesInput={{\r\n                            id: \"Title\",\r\n                            name: \"Title\",\r\n                            type: \"text\",\r\n                            placeholder: \"Enter Title\"\r\n                            }}\r\n                            value={title}  validationOption={{ name: 'Title',\r\n                           check: true, required: true}}\r\n                           validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasTitleError: res, validate: false })\r\n                            }\r\n                            onChange={(title, e) => {\r\n                                this.setState({ title });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Message</label>\r\n                          <Textarea classNameInput=\"form_textarea emalform_textarea\" \r\n                          attributesWrapper={{}}\r\n                          attributesInput={{\r\n                            id: \"message\",\r\n                            name: \"message\",\r\n                            placeholder: \"Notification Message\",\r\n                             cols: '10',\r\n                             rows: '0',\r\n                          }} value={message} placeholder=\"Notification Message\" validationOption={{name: 'Message', // Optional.[String].Default: \"\". To display in the Error message. i.e Please enter your {name}.\r\n                          check: true, required: true}}\r\n                          validate={validate} \r\n                          validationCallback={res =>\r\n                            this.setState({\r\n                                hasMessageError: res,\r\n                                validate: false\r\n                            })\r\n                            }\r\n                            onChange={(message, e) => {\r\n                                this.setState({ message });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                       \r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\" style={{'textTransform':'none'}}>Include Image?</label>\r\n                          <span className=\"form_label\"><input type=\"checkbox\"  id= \"include_img\"  name=\"include_img\" onChange={( e) => { }}/></span>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"\">\r\n                  \r\n                  <button className=\"btn btn-blue btn-radius btn-icon-center btn-size\" onClick={this.validateForm}>\r\n                    \r\n                    <span>Send</span>\r\n                  </button>\r\n                  <input type=\"submit\" style={{ display: \"none\" }} />\r\n                </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n                \r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Firebase;\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyCompletion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeData = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({ routeData: []});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        this.setState({ routeData: data});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onRouteSelect = selectedRoute => {\r\n    this.setState({ selectedRoute });\r\n    console.log(`Option selected:`, selectedRoute);\r\n    this.setState({selectedRouteText: []});\r\n    let selRoute = [];\r\n    let value = [];\r\n    if(selectedRoute !== null){\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i]);\r\n          selRoute.push(selectedRoute[i].label);\r\n      }\r\n    }\r\n    this.setState({selectedRouteText: selRoute});\r\n    this.setState({selectedRoute: value}); \r\n  };\r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleBtnClick = () => {\r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    this.setState({data: []});\r\n    this.forceUpdate();\r\n    \r\n    let colNames = [...this.state.baseColNames];\r\n    \r\n    this.setState({columns: colNames});\r\n    \r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    \r\n    let selectedRoute = this.state.selectedRoute;\r\n    \r\n\r\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        const items = [];\r\n        for (const row of result) {\r\n          let item = row;\r\n          items.push(item);\r\n        }\r\n        this.setState({data: items});\r\n      }\r\n    )\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      var selectedRoutes = this.state.selectedRoute;\r\n      let routes = [];\r\n      for (var ii = 0; ii < selectedRoutes.length; ii++) {\r\n        routes.push(selectedRoutes[ii].value);\r\n      }  \r\n      \r\n      //to = ['reachatbhakti@gmail.com']\r\n      //var params={\"emails\":emails}\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"from\":'',\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"routeNumber\":routes,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      let api = ''\r\n      if(type === 'push-notification'){\r\n        api = global.api.sendPush(params)\r\n      }else{\r\n        api = global.api.sendEmail(params)\r\n      }\r\n        api\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          // console.log(json.data)\r\n          if(json.data.message===\"Email Sent Successfully.\" || json.data.message===\"Push Notification sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Completion\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"push-notification\" style={{marginTop:'20px'}}><span id=\"push-notification\">Push Notification</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              {/* <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px'}}>\r\n                                <ReactMultiSelectCheckboxes classNamePrefix=\"route \" options={this.state.routeData}  /> \r\n                                  <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"route \" closeMenuOnSelect={false}/>\r\n                                </div>\r\n                              </div> \r\n                              <div className=\"head_box_r\">\r\n                                <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\r\n                                <span\r\n                                  className=\"btn btn-radius btn-size btn-blue  export\"\r\n                                  onClick={this.handleBtnClick}\r\n                                >\r\n                                  <span>Submit</span>\r\n                                </span>\r\n                              </div>*/}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-comple\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyCompletion;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeList = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.mailType = [{  \r\n      label: \"Route Mail\",  \r\n      value: \"route_email\"  \r\n    },\r\n    { \r\n      label: \"Weekly Send Mail\",  \r\n      value: \"weekly_email\" \r\n    },\r\n    { \r\n      label: \"Weekly Push Notification\",  \r\n      value: \"weekly_push\"  \r\n    }]\t\r\n    this.state.langData = [{  \t\r\n      label: \"Español\", \t\r\n      value: \"ES\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Portuguese\",  \t\r\n      value: \"PT\" \t\r\n    }]  \t\r\n    this.state.mailModeData = [{  \t\r\n      label: \"Test Email\",  \t\r\n      value: \"Test\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Real Email\",  \t\r\n      value: \"Real\" \t\r\n    }]  \t\r\n    \t\r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };  \t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedMailType = { label: 'Route Mail', value: 'route_email' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n    this.state.routeStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        let routeListData = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          routeListData.push({\"value\":data[i]['id'],\"label\":data[i]['label'],\"routeNo\":data[i]['value']});\r\n        }\r\n        this.setState({ routeList: routeListData});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#task-reports').show();\r\n    $('#task-table_wraps').show();\r\n    $('#campain-week-task').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-task').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onLangSelect = selectedLang => {  \t\r\n    this.setState({ selectedLang });  \t\r\n    console.log(`Option selected:`, selectedLang);  \t\r\n    const selValue = selectedLang.value;  \t\r\n    const selLabel = selectedLang.label;  \t\r\n    const selLangOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedLang: selLangOption});   \t\r\n  } \t\r\n  onModeSelect = selectedMode => {  \t\r\n    this.setState({ selectedMode });  \t\r\n    console.log(`Option selected:`, selectedMode);  \t\r\n    const selValue = selectedMode.value;  \t\r\n    const selLabel = selectedMode.label;  \t\r\n    const selModeOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedMode: selModeOption});   \t\r\n  }\r\n  onRouteNameChange = selectedRouteName => {\r\n    const moment = require('moment-timezone');\r\n    this.setState({ selectedRouteName });\r\n    let routeNo = selectedRouteName.routeNo;\r\n    let routeStartDate = this.state.courseStartDate;\r\n    routeStartDate = routeStartDate.replace(\"Course StartDate : \", \"\");\r\n    routeNo = (routeNo - 1)*7;\r\n    let routeDate =  moment(routeStartDate,\"DD-MM-YYYY\");\r\n    routeDate = moment(routeDate).add(routeNo, 'day').format('DD-MM-YYYY'); \r\n    this.setState({ routeStartDate: 'Route StartDate : ' + routeDate});\r\n    //console.log(`Option selected:`,routeDate);\r\n  };\r\n  onMailTypeSelect = selectedMailType => {  \r\n    this.setState({ selectedMailType });  \r\n    console.log(`selectedMailType selected:`, selectedMailType);  \r\n    const selValue = selectedMailType.value;  \r\n    const selLabel = selectedMailType.label;  \r\n    const selMailTypeOption = { label: selLabel, value: selValue }; \r\n    this.setState({selectedMailType: selMailTypeOption});   \r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{\r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      const routes = this.state.selectedRouteName.value;\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n      var params = {\r\n        \"to\":emails,\r\n        \"routeNumber\":routes,\r\n        \"mailMode\":this.state.selectedMode.value,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"type\":type\r\n      }\r\n      global.api.sendWeeklyEmail(params)\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          if(json.data.message===type+\" Sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Tasks\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        \r\n                        <div className=\"campaign-container-right-div-2\">\r\n                        <div className=\"head_box mb15\">\t\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\t\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/> \t\r\n                            </span> \t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \t\r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/> \t\r\n                            </span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_email\" style={{marginTop:'20px'}}><span id=\"weekly_email\">SendEmail</span></span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_push\" style={{marginTop:'20px'}}><span id=\"weekly_push\">Push Notification</span></span>\t\r\n                          </div>\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\"}}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"routeList\" value={this.state.selectedRouteName}  onChange={this.onRouteNameChange} options={this.state.routeList} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"Route List\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.routeStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"task-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"task-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-task\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyTask;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({data: []});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    this.setState({data: []});\r\n        \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#welcome-reports').show();\r\n    $('#welcome-table_wraps').show();\r\n    $('#campain-welcome-mail').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    var selectedRoute = \"\";\r\n    \r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-welcome-mail').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  \r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    //const type = e.target.id\r\n    var notification=this.state.notification\r\n    \r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n            \r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    }\r\n    \r\n  }\r\n  sendEmailAll = (e) => {\r\n    var notification=this.state.notification\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    if(selectedCourse === undefined){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Course'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      \r\n      this.setState({loading:true});\r\n      var params = {\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    } \r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return ( <div><LoadingOverlay \r\n      active={loading}\r\n      spinner\r\n      text='Processing your content...'\r\n      >\r\n    </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Welcome Email\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.sendEmailAll } id=\"send-email-all\" style={{marginTop:'20px'}}><span id=\"send-email-all\">SendEmail To All</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"\" style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>    \r\n                    </div>\r\n                <div id=\"welcome-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"welcome-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-welcome-mail\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyEmail;\r\n\r\n\r\n","import decode from 'jwt-decode';\r\nexport default class AuthService {\r\n    // Initializing important variables\r\n    constructor(domain) {\r\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\r\n        this.fetch = this.fetch.bind(this) // React binding stuff\r\n        this.login = this.login.bind(this)\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n    forgotpass(email) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/password_reset.php`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res => {\r\n            return Promise.resolve(res);\r\n            /* if(res.token){\r\n                this.setToken(res.token) // Setting the token in localStorage\r\n                this.setProfile(res.firstName, res.email)\r\n                return Promise.resolve(res);\r\n            }\r\n            if(res.message){\r\n                return Promise.reject(res.message);\r\n            } */\r\n        })\r\n    }\r\n    login(email, password) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/api-login.php`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => {\r\n            if(res.token){\r\n                if(res.accesslevel!== \"0\"){\r\n                    this.setToken(res.token) // Setting the token in localStorage\r\n                    this.setProfile(res)\r\n                    return Promise.resolve(res);\r\n                }else{\r\n                    const result = {firstName: '', email: '', company_code:'', company_name: '',  access_level:'', accepted_gdpr:''}\r\n                    this.setProfile(result)\r\n                    return {message: \"Disabled Access.\"};\r\n                }\r\n            }\r\n            if(res.message){\r\n                return Promise.reject(res.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken() // GEtting token from localstorage\r\n        return !!token && !this.isTokenExpired(token) // handwaiving here\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        console.log('idToken',idToken)\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n    setProfile(data) {//res.firstName, res.email\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('firstName', data.firstName)\r\n        localStorage.setItem('email', data.email)\r\n        localStorage.setItem('company_code', data.CompanyCode)\r\n        localStorage.setItem('company_name', data.companyName)\r\n        localStorage.setItem('access_level', data.accesslevel)\r\n        localStorage.setItem('accepted_gdpr', data.acceptedGDPR)\r\n    }\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    setCompanyName(companyName) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('company_name', companyName)\r\n    }\r\n    \r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        //return decode(this.getToken());\r\n        return localStorage.getItem('email')\r\n    }\r\n\r\n\r\n    fetch(url, options) {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter><App />\n    </BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}