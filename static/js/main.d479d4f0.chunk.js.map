{"version":3,"sources":["pages/OverView.js","pages/Home.js","pages/Login.js","pages/Forgot.js","pages/Campaigns.js","Routes.js","App.js","pages/Menu.js","pages/Header.js","pages/Employees.js","pages/AddEmployee.js","pages/EmployeestoCourses.js","pages/Reports.js","pages/CourseDetails.js","pages/Courses.js","pages/Firebase.js","pages/Campaigns-weekly-completion.js","pages/Campaigns-weekly-task.js","pages/Campaigns-welcome-email.js","components/AuthService.js","serviceWorker.js","index.js","components/ApiService.js"],"names":["OverView","props","state","data","global","api","getOverView","companyCode","then","res","setState","catch","err","alert","this","totalUsers","activeCourses","ongoingBatches","className","id","React","Component","Login","handleChange","bind","handleFormSubmit","Auth","AuthService","loggedIn","history","replace","src","alt","onSubmit","placeholder","name","type","onChange","hidden","href","e","target","value","preventDefault","login","email","password","message","accesslevel","window","location","Forgot","event","forgotpass","showError","showSuccess","messageFromServer","style","label","Campaigns","data-id","Router","exact","path","component","Employees","AddEmployees","EmployeestoCourses","Reports","CourseDetails","Courses","Firebase","render","ProtectedRoute","rest","to","pathname","from","Api","ApiService","pathName","App","console","log","Menu","Header","handleLogout","logout","selectedOption","selValue","setCompanyCode","split","setCompanyName","user","getProfile","getCompanyCode","companyName","getCompanyName","access_level","getAccessLevel","companyList","companyDisable","getCompanyList","sort","a","b","options","classNamePrefix","isDisabled","onClick","SearchBar","Search","gotoCourse","courseNumber","courseName","push","courseId","onBatchChange","selectedBatch","batchNumber","$","prop","checked","getEmployeeList","show","hide","onBatchChangeOld","handleCheck","notification","undefined","title","store","addNotification","gdprCheck","handleBtnClick","selected","handleOnSelect","row","isSelect","rowIndex","columnCount","parentNode","get","cells","i","length","j","handleOnSelectAll","rows","rowCount","childNodes","colCount","ii","coldCount","jj","columns","dataField","text","csvExport","formatter","cell","headerStyle","width","events","column","columnIndex","currentClass","statusIndex","courseIndex","locationIndex","children","coursesClass","courseCount","slideDown","classes","userId","courseItems","courseRegistered","moduleCompletionPercent","moduleCompletion_percent","key","i_d","trId","Location","status","lastLoginDate","batchData","csvFileName","getDate","container","animationIn","animationOut","dismiss","duration","onScreen","tempDate","Date","getFullYear","getMonth","getBatch","custom","slected","MyExportCSV","onExport","marginTop","selectRow","mode","class","clickToSelect","onSelect","onSelectAll","headerColumnStyle","paddingLeft","rowEvents","elementName","tagName","NoDataIndication","color","height","NoDataAvailable","keyField","search","exportCSV","fileName","defaultChecked","searchProps","csvProps","pagination","paginationFactory","paginationProps","paginationTableProps","baseProps","filter","filterFactory","noDataIndication","AddEmployee","params","queryString","parse","countryCode","phone","startDate","fields","fname","lname","dni","deptname","wemail","mobileos","update","errors","form","ReactFormInputValidation","useRules","onformsubmit","actVal","refs","mobile","mobileData","n","indexOf","substr","parseInt","CompanyCode","FirstName","LastName","Mobile","CountryCode","DNI","mobileOS","val","subscriptionValidDate","company","weeklyEmail","disable","updateEmployee","json","error","addEmployee","getEmployeeDetails","Mobilewcode","toUpperCase","toDate","change","actionVal","currentTarget","dataset","rel","media","handleSubmit","onBlur","handleBlurEvent","handleChangeEvent","country","enableSearch","required","ref","date","dateFormat","handleChkChange","chkValue","x","userid","getCourseList","courseList","map","item","index","imgPath","moduleNumber","Id","selectedCompany","batchNo","getCourseBatch","courseData","selectedCourse","routeData","selectedRouteText","selectedRoute","onCourseChange","selectedCourseId","getRouteList","response","noDataAvailable","colNames","baseColNames","pieChartDisplay","getCompletionReports","result","onRouteSelect","selRoute","forceUpdate","row1","routeCols","whiteSpace","cursor","avgVals","avgValsarr","toString","items","totRoutes","avgRoutes","Routes","Math","round","grp1Percent","grp2Percent","grp3Percent","grp1","grp2","grp3","avgData","grp1Val","grp2Val","grp3Val","grp1PVal","grp2PVal","grp3PVal","userData","companyData","selectedCompanyName","avgPercentTable","textTransform","pieChat","labels","datasets","backgroundColor","hoverBackgroundColor","totalSize","sizePerPage","ReportSummary","data-mh","display","fontSize","paddingRight","isMulti","closeMenuOnSelect","bootstrap4","handleDeleteClick","attenSelected","userIds","deleteEmpCourse","empSelected","handleAddClick","addEmpCourse","handleEmpOnSelect","handleEmpOnSelectAll","ids","r","handleAttenOnSelect","handleAttenOnSelectAll","attendanceColumns","completedStatus","attendanceData","empColumns","empData","empNodata","totalData","getCourseDetails","registered","availableToRegister","newProps","noDataText","withoutNoDataText","empOptions","empSelectRow","moment","format","moduleNo","onEmailSelect","validate","validateForm","emailData","getEmailList","toggleValidating","hasEmailError","hasTitleError","hasMessageError","is","attributesWrapper","attributesInput","validationCallback","validationOption","check","classNameInput","cols","CampaignsWeeklyCompletion","selectedRouteName","courseStartDate","routeStartDate","onLangSelect","selectedLang","selLangOption","onModeSelect","selectedMode","selModeOption","handleSendEmail","loading","selectedEmails","emails","selectedRoutes","routes","sendPush","sendEmail","langData","mailModeData","active","spinner","paddingTop","fontWeight","CampaignsWeeklyTask","routeListData","routeList","onRouteNameChange","require","routeNo","routeDate","add","onMailTypeSelect","selectedMailType","selMailTypeOption","sendWeeklyEmail","mailType","CampaignsWeeklyEmail","sendEmailAll","domain","fetch","method","body","JSON","stringify","Promise","resolve","token","setToken","setProfile","firstName","company_code","company_name","accepted_gdpr","reject","getToken","isTokenExpired","decode","exp","now","idToken","localStorage","setItem","acceptedGDPR","getItem","removeItem","url","headers","_checkStatus","Error","statusText","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","post","emailList","routeNumber","courseNo","batchList","companies","optName","Name","registeredUsers","availableUsers"],"mappings":"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","file":"static/js/main.d479d4f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass OverView extends React.Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          data : []\r\n        }\r\n        \r\n  }\r\n  componentDidMount() {\r\n    global.api.getOverView(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  }  \r\n  \r\n  render() {\r\n    const { totalUsers, activeCourses, ongoingBatches } = this.state.data;\r\n    return (\r\n        <main className=\"offset\" id=\"content\">\r\n          <section className=\"section_box\">\r\n            <h1 className=\"title1 mb115\">Overview</h1>\r\n            \r\n            <div className=\"overview-wrap\">\r\n              <div className=\"overview-wrap-left\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Total Users</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{totalUsers}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-wrap-center\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Active Courses</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{activeCourses}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-wrap-right\">\r\n                <div className=\"overview-wrap-div-up\">\r\n                  <div className=\"overview-wrap-div-up-heading\">Ongoing Cohorts</div>\r\n                  <div className=\"overview-wrap-div-up-border\"></div>\r\n                  <div className=\"overview-wrap-div-up-text\">{ongoingBatches}</div>\r\n                </div>\r\n                <div className=\"overview-wrap-div-down\">\r\n                  {/*<div className=\"overview-wrap-div-down-text\">View Engagement</div>\r\n                  <div className=\"overview-wrap-div-down-img\">\r\n                    <img src=\"images/icons/farrow.svg\" alt=\"\" />\r\n                  </div>*/}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OverView;\r\n\r\n","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n    \r\n        return (\r\n            <main id=\"content\">\r\n            <div className=\"bg_gradient bg_content\"></div>\r\n            <section className=\"section_salute_box\">\r\n                <div className=\"section_salute_wrap\">\r\n                    <h1 className=\"title1 salute_title\">Hello There.</h1>\r\n                    <p className=\"salute_descr\">This page seems a little bit empty. Why don't we start by adding in some of your employees information?</p>\r\n                    <div className=\"salute_img\">\r\n                        <img src=\"images/img.svg\" alt=\"\" />\r\n                    </div>\r\n                    <a className=\"btn btn-blue btn-radius\" href=\"/employee\">\r\n                        <span>Add Employees</span>\r\n                    </a>\r\n                </div>\r\n            </section>\r\n        </main>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport AuthService from '../components/AuthService';\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.Auth = new AuthService();\r\n        //temp email/pass\r\n    }\r\n    componentDidMount(){\r\n          if(this.Auth.loggedIn())\r\n              this.props.history.replace('/');\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div id=\"page-preloader\">\r\n                    <div className=\"preloader\">\r\n                        <div className=\"preload_inner preload-one\"></div>\r\n                        <div className=\"preload_inner preload-two\"></div>\r\n                        <div className=\"preload_inner preload-three\"></div>\r\n                    </div>\r\n                </div>\r\n                <main className=\"type2\" id=\"content\">\r\n                    <section className=\"section_box section_offset1 zoom\">\r\n                        <div className=\"form_wrapper \">\r\n                            <div className=\"form_logos mb35\">\r\n                                <img src=\"/images/logos.png\" alt=\"\" />\r\n                            </div>\r\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\r\n                                <h3 className=\"form_title al_center mb35\">Please login to your account.</h3>\r\n                                <div className=\"form_row type2\">\r\n                                    <input className=\"form_input type2\" placeholder=\"Username\" name=\"email\" type=\"text\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"form_row type2\">\r\n                                    <input className=\"form_input type2\" placeholder=\"Password \" name=\"password\" type=\"password\" onChange={this.handleChange} />\r\n                                </div>\r\n                                <div className=\"form_row type2 form_flex mb115\">\r\n                                    <label className=\"form_checkbox login\">\r\n                                        <input type=\"checkbox\" hidden=\"hidden\" />\r\n                                        <span>Remember me</span>\r\n                                    </label>\r\n                                    <a className=\"link link-size1 link_color\" href=\"/forgotpass\">Forgot password</a>\r\n                                </div>\r\n                                <div className=\"form_row_btn type2\">\r\n                                    <button className=\"btn btn-radius btn-orange btn-login\" type=\"submit\">\r\n                                        <span>LOG IN</span>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"link_wrapp\">\r\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\r\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n                </main>\r\n      \r\n      </div>\r\n          \r\n        );\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    }\r\n    handleFormSubmit(e){\r\n        e.preventDefault();\r\n          this.Auth.login(this.state.email,this.state.password)\r\n              .then(res =>{\r\n                  if(res.message){\r\n                    alert(res.message);\r\n                    return false;\r\n                  }else{\r\n                      if(res.accesslevel !== \"0\" ){\r\n                        window.location.href = '/overview';\r\n                      }else{\r\n                        alert('Access Level Disabled, Contact Admin');\r\n                      }\r\n                  }\r\n              })\r\n              .catch(err =>{\r\n                  alert(err);\r\n              })\r\n      }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport AuthService from '../components/AuthService';\r\n\r\nclass Forgot extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email : '',\r\n            showError: false,\r\n            messageFromServer:'',\r\n            showSuccess: ''\r\n        }\r\n        this.Auth = new AuthService();\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        const email = this.state.email;\r\n        if(email === ''){\r\n            alert(\"Please Enter Email\");\r\n        }else{\r\n            \r\n            this.Auth.forgotpass(email)\r\n                .then(res =>{\r\n                    if(res.message === 'Please check email for reset link.'){\r\n                        this.setState({\r\n                            showError : true,\r\n                            showSuccess: 'success_message',\r\n                            messageFromServer : res.message\r\n                        });\r\n                    }else{\r\n                        this.setState({\r\n                            showError : true,\r\n                            showSuccess: 'error_message',\r\n                            messageFromServer : res.message\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        //const {email} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div id=\"page-preloader\">\r\n                    <div className=\"preloader\">\r\n                        <div className=\"preload_inner preload-one\"></div>\r\n                        <div className=\"preload_inner preload-two\"></div>\r\n                        <div className=\"preload_inner preload-three\"></div>\r\n                    </div>\r\n                </div>\r\n                <main className=\"type2\" id=\"content\">\r\n                    <section className=\"section_box section_offset1 zoom\">\r\n                        <div className=\"form_wrapper \">\r\n                            <div className=\"form_logos mb35\">\r\n                                <img src=\"/images/logos.png\" alt=\"\" />\r\n                            </div>\r\n                            <form className=\"form_form\" onSubmit={this.handleFormSubmit}>\r\n                            <h3 className=\"form_title al_center mb50\" style={{'fontSize':'25px'}}>Enter your email and we send you a password reset link.</h3>\r\n                            \r\n                            <div className=\"form_row type2\">\r\n                                <input className=\"form_input type2\" type=\"text\" placeholder=\"Email\" id=\"email\" label=\"email\" onChange={this.handleChange('email')}/> \r\n                            </div>\r\n                            <div className={this.state.showSuccess}>{this.state.showError=== true ? this.state.messageFromServer:' '}&nbsp;</div>\r\n\r\n                            <div className=\"form_row_btn type2\">\r\n                                <button className=\"btn btn-radius btn-orange btn-size5\" type=\"submit\">\r\n                                    <span>SEND REQUEST</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"link_wrapp\">\r\n                            <a className=\"link_wrapp_it\" href=\"/terms\">Terms of Use</a>\r\n                            <a className=\"link_wrapp_it\" href=\"/policy\">Privacy Policy</a>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n                </main>\r\n      \r\n      </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default Forgot;","import React, { Component } from \"react\";\r\nimport CampaignsWeeklyCompletion from './Campaigns-weekly-completion'\r\nimport CampaignsWeeklyTask from './Campaigns-weekly-task'\r\nimport CampaignsWelcomeEmail from './Campaigns-welcome-email'\r\n\r\nclass Campaigns extends Component {\r\n  \r\n  render(){\r\n      return (\r\n        <main className=\"offset\" id=\"content\">\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Messaging & Notification Center</h4>\r\n              <h1 className=\"title1 mb115\">Campaigns</h1>\r\n              <form className=\"form_employee js-tabs\">\r\n                <ul className=\"js-tabs-list tab-list\">\r\n                  <li data-id=\"weeklycompletion\"><span>Weekly Completion</span></li>\r\n                  <li data-id=\"weeklytasks\"><span>Weekly Tasks</span></li>\r\n                  <li data-id=\"welcomemail\"><span>Welcome - Email</span></li>\r\n                </ul>\r\n                <div>\r\n                  <div className=\"js-tabs-box tab-box\">\r\n                    <CampaignsWeeklyCompletion />\r\n                    <CampaignsWeeklyTask />\r\n                    <CampaignsWelcomeEmail />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Campaigns;\r\n\r\n\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from './components/AuthService';\r\nimport Employees from \"./pages/Employees\";\r\nimport AddEmployees from \"./pages/AddEmployee\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport EmployeestoCourses from \"./pages/EmployeestoCourses\";\r\nimport Reports from \"./pages/Reports\";\r\nimport Forgot from \"./pages/Forgot\";\r\nimport CourseDetails from \"./pages/CourseDetails\";\r\nimport Courses from \"./pages/Courses\";\r\nimport Firebase from \"./pages/Firebase\";\r\nimport Campaigns from \"./pages/Campaigns\";  \r\nimport OverView from \"./pages/OverView\";\r\n\r\nconst Auth = new AuthService();\r\nclass Router extends React.Component {\r\n  render() {\r\n    return (\r\n    <Switch>\r\n      <Route exact path='/login' component={Login}/>\r\n      <Route exact path='/forgotpass' component={Forgot}/>\r\n      <ProtectedRoute path=\"/employee\" component={Employees} />\r\n      <ProtectedRoute path=\"/add-employee\" component={AddEmployees} />\r\n      <ProtectedRoute path=\"/employeestocourses\" component={EmployeestoCourses} />\r\n      <ProtectedRoute path=\"/reports\" component={Reports} />\r\n      <ProtectedRoute path=\"/coursedetail\" component={CourseDetails} />\r\n      <ProtectedRoute path=\"/courses\" component={Courses} />\r\n      <ProtectedRoute path=\"/firebase\" component={Firebase} />\r\n      <ProtectedRoute path=\"/campaigns\" component={Campaigns} />\r\n      <ProtectedRoute path=\"/overview\" component={OverView} />\r\n      <ProtectedRoute path=\"/\" component={OverView} />\r\n      \r\n      <Route\r\n          render={function () {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n    </Switch>\r\n   );\r\n  }\r\n}\r\n const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  if(Auth.loggedIn()){\r\n    return (<Route {...rest} render={(props) => (\r\n      Auth.loggedIn() === true ? \r\n          <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location }}} />   \r\n    )} />)\r\n  }else{\r\n    window.location.href = '/login';\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport ReactNotifications from 'react-notifications-component';\n\nimport Menu from \"./pages/Menu\";\nimport Header from \"./pages/Header\";\nimport Router from './Routes';\nimport ApiService from './components/ApiService';\nconst Api = new ApiService();\nconst pathName = window.location.pathname;\n//const companyCode = '115'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    global.api = Api // API server domain\n    //global.companyCode = companyCode // API server domain\n    //global.companyCode = Api.getCompanyCode()\n  }\n  render() {\n    \n    if((pathName==='/login' || pathName==='/forgotpass')){\n      return (<div>\n       <Router />\n      </div>)\n    }else{\n      return (<div className=\"page_wrap\"><ReactNotifications /><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>)\n    }\n    /*{pathName!=='/login' ? <div className=\"page_wrap\"><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>  : <Router />}\n    return (\n      <div>\n      {(pathName!=='/login' || pathName!=='/forgot') ? <div className=\"page_wrap\"><Header /><div className=\"content_wrap\"><Menu /><Router /></div></div>  : <Router />}\n      </div>\n    );*/\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\r\n//import { Link } from 'react-router-dom'\r\nconsole.log(window.location.pathname);\r\nconst pathName = window.location.pathname;\r\n\r\nclass Menu extends Component {\r\n   \r\n  render() {\r\n    return (\r\n        <aside className=\"js-sticky\" id=\"aside\">\r\n        <nav className=\"navigation_menu\">\r\n            <menu className=\"menu \">\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/overview' ? 'menu_link current' : 'menu_link'} href=\"/overview\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon1.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon1hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Overview</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/employee' ? 'menu_link current' : 'menu_link'} href=\"/employee\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon2.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon2hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Employees</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                <a className={pathName==='/reports' ? 'menu_link current' : 'menu_link'} href=\"/reports\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon3.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon3hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Reports</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\r\n                    <a className={pathName==='/courses' ? 'menu_link current' : 'menu_link'} href=\"/courses\">\r\n                        <i className=\"menu_link_icon\">\r\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\r\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\r\n                        </i>\r\n                        <span>Courses</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"menu_item\">\t\r\n                    <a className={pathName==='/campaigns' ? 'menu_link current' : 'menu_link'} href=\"/campaigns\">\t\r\n                        <i className=\"menu_link_icon\">\t\r\n                            <img src=\"/images/icons/icon4.svg\" alt=\"\" />\t\r\n                            <img src=\"/images/icons/icon4hover.svg\" alt=\"\" />\t\r\n                        </i>\t\r\n                        <span>Campaigns</span>\t\r\n                    </a>\t\r\n                </li>\r\n            </menu>\r\n        </nav>\r\n    </aside>  \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n\r\n","import React from \"react\";\r\nimport AuthService from '../components/AuthService';\r\nimport ApiService from '../components/ApiService';\r\nimport Select from 'react-select';\r\n\r\nconst pathName = window.location.pathname;\r\nconst Auth = new AuthService();\r\nconst Api = new ApiService();\r\n\r\nclass Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.user = '';\r\n        if(Auth.loggedIn()){\r\n            this.user = Auth.getProfile()\r\n        }\r\n        global.companyCode = Api.getCompanyCode()\r\n        global.companyName = Api.getCompanyName()\r\n        global.access_level =Api.getAccessLevel()\r\n        \r\n        if(global.companyCode === null && global.access_level === \"1\"){\r\n            global.companyCode = 115\r\n            global.companyName = 'Taplingua Empresas Demo 1'\r\n        }\r\n        this.state = {\r\n            companyList: [],\r\n            selectedOption: [{\"value\":global.companyCode,\"label\":global.companyCode+\" - \"+global.companyName}],\r\n            companyDisable:\"\"\r\n        };\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if(global.access_level === \"3\"){\r\n            this.setState({companyDisable:\"disabled\"})\r\n        }\r\n        let api = ''\r\n        if(global.access_level === \"1\"){\r\n            api = global.api.getCompanyList ();\r\n        }else{\r\n            api = global.api.getCompanyList (global.companyCode);\r\n        }\r\n        api\r\n        .then(companyList => {\r\n            companyList.sort(function(a, b) {\r\n              return a.value - b.value;\r\n            });\r\n            this.setState({ companyList: companyList });\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n                \r\n    }\r\n    \r\n    handleLogout = (props) => {\r\n        Auth.logout()\r\n        window.location.href = '/login';\r\n     }\r\n     handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        var selValue = selectedOption.value;\r\n        Api.setCompanyCode(selValue);\r\n        var CompanyName = selectedOption.label;\r\n        var res = CompanyName.split(\" - \");\r\n        Api.setCompanyName(res[1]);\r\n        window.location.href = pathName; \r\n      };\r\n      \r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"overlay\"></div>\r\n            {/* <!-- Preloader Start     ============================================ --> */}\r\n            <div id=\"page-preloader\">\r\n                <div className=\"preloader\">\r\n                    <div className=\"preload_inner preload-one\"></div>\r\n                    <div className=\"preload_inner preload-two\"></div>\r\n                    <div className=\"preload_inner preload-three\"></div>\r\n                </div>\r\n            </div>\r\n            {/* <!-- Preloader End       ============================================ -->\r\n            <!-- Header Start     ============================================ --> */}\r\n            <header className=\"header\" id=\"header\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header_wrap\">\r\n                        <div className=\"header_left\">\r\n                            <a className=\"logo_box\" href=\"index.html\">\r\n                                <div className=\"logo\">\r\n                                    <img src=\"images/logo.svg\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"logo_description\">Dashboard</div>\r\n                            </a>\r\n                        </div>\r\n                        \r\n                        <div className=\"header_right\">\r\n                            <div className=\"head_box_l switch\">\r\n                                <h6 className=\"title1 mr15\"  style={{'fontSize':'15px'}}>\r\n                                Company\r\n                                </h6>\r\n                                <div style={{'width':'350px'}}>\r\n                                <Select id=\"company\" value={this.state.selectedOption}  onChange={this.handleChange} options={this.state.companyList} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"company\" isDisabled={this.state.companyDisable}/>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <a className=\"link link-black support_link\" href=\"/help\">\r\n                                <span>Help & Support</span>\r\n                            </a>\r\n                            <a className=\"header_reminder\" href=\"/\">\r\n                                <span>8</span>\r\n                            </a>\r\n                            <div className=\"header_login_box\">\r\n                                <span className=\"header_login_name\">Hi,\r\n                                    <span className=\"fw700 header-logout\">{this.user}</span>\r\n                                </span>\r\n                                <span className=\"header_login_photo\" onClick={this.handleLogout}><img src=\"/images/logout.png\" alt=\"Logout\" /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, {  Search } from 'react-bootstrap-table2-toolkit';\nimport filterFactory from 'react-bootstrap-table2-filter';\nimport Loader from \"react-loader-spinner\";\nimport Select from 'react-select';\nimport $ from 'jquery';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { Progress } from 'reactstrap';  \nconst { SearchBar } = Search;\n\nclass Employees extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    function formatter(cell, row) {\n      return (\n        <div className=\"table_dots\">\n        <div className=\"table_dots_icon\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    </div>\n        );\n    }\n    \n   \n    function courseFormater(cell, row,rowIndex) {\n      const courseItems = [];\n      \n      if(row.courseRegistered.length !== 0){\n        var moduleCompletionPercent = '0'\n        for (var i=0; i < 1; i++) {\n           moduleCompletionPercent = row.courseRegistered[i].moduleCompletion_percent\n          if(moduleCompletionPercent===\"\"){\n            moduleCompletionPercent = '0';\n          }\n          let courseName = row.courseRegistered[i]['courseName'];\n          let courseNumber = row.courseRegistered[i]['courseNumber'];\n          courseItems.push(<div className=\"table_course_wrap\" key={row.i_d +'_'+ i}><div className=\"table_course\"><a href={`/coursedetail/?courseId=${courseNumber}&courseName=${courseName}`}>{row.courseRegistered[i][\"courseName\"]}</a></div><div className=\"progress_status_container hide\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div><div className=\"table_number\">{row.courseCount}</div></div>);\n          \n        }\n        for (var j=1; j < row.courseRegistered.length; j++) {\n           moduleCompletionPercent = row.courseRegistered[j].moduleCompletion_percent\n          if(moduleCompletionPercent===\"\"){\n            moduleCompletionPercent = '0';\n          }\n          let courseName = row.courseRegistered[j]['courseName'];\n          let courseNumber = row.courseRegistered[j]['courseNumber'];\n          courseItems.push(<div className=\"table_course_wrap hide\" key={row.i_d +'_'+ j}><div className=\"table_course\" ><a href={`/coursedetail/?courseId=${courseNumber}&courseName=${courseName}`}>{row.courseRegistered[j][\"courseName\"]}</a></div><div className=\"progress_status_container\"><div className=\"progress_bar\"><Progress value={moduleCompletionPercent}>{moduleCompletionPercent}%</Progress></div></div></div>);\n        }\n      }\n      var trId = \"courses_\"+rowIndex\n      return (\n        <div id={trId}>{courseItems}</div>\n      )\n    }\n     \n    function statusFormater(cell, row) {\n      const status = []\n      if(row.status === \" \"){\n        status.push(<div key={row.i_d}><div className=\"status\" >\n        <i className=\"green\"></i>\n        <span>Status</span>\n      </div><div className=\"session\">\n          <span>Last session</span>\n          <time>{row.lastLoginDate}</time>\n      </div></div>)\n      }\n      return (\n        status\n      )\n    }\n    function locationFormater(cell, row) {\n      \n      return (<div>\n        <div className=\"table_location\">{row.Location}</div>\n        <div className=\"table_location_it\">Department Name</div>\n        </div>\n      )\n    }\n    function addLink(cell, row) {\n      return (<div><a href={`/add-employee/?userId=${row.userId}`}>{row.userId}</a></div>);\n      //return (<div><a href>{row.userId}</a></div>);\n    }\n    this.state = {\n      columns:[{\n        dataField: \"i_d\",\n        text: \"Id\",\n        hidden: true,\n        csvExport: false\n       },{\n        text: '',\n        dataField: \"\",\n        formatter: formatter,\n        headerStyle: {\n          width:'10px'\n        },\n        events: {\n         onClick: (e, column, columnIndex, row, rowIndex) => {\n          \n          var currentClass = e.target.className;\n          var statusIndex = this.state.statusIndex\n          var courseIndex = this.state.courseIndex\n          var locationIndex = this.state.locationIndex\n          if(currentClass === 'table_dots'){\n            \n            if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\n              var coursesClass = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className;\n              var courseCount = $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0]).get(0).childNodes\n              if(coursesClass !== 'table_course_wrap'){\n                //status\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session'\n                }\n                //courses\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap'\n                $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container hide'\n                \n                for(var i = 1 ; i < courseCount.length; i++){\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[i]).get( 0 ).className= 'table_course_wrap hide'\n                }\n                \n                //location\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it'\n                }\n              }else{\n                //status\n                if(e.target.parentNode.parentNode.childNodes[statusIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[statusIndex].children[0].children[1]).get( 0 ).className= 'session show'\n                }\n                //courses\n                if(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).className= 'table_course_wrap is-active height'\n                  $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0].children[1]).get( 0 ).className= 'progress_status_container'\n                  for(var j = 1 ; j < courseCount.length; j++){\n                    $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[j]).get( 0 ).className= 'table_course_wrap is-active height'\n                  }\n                  /* $(e.target.parentNode.parentNode.childNodes[4].children[0].children[1]).get( 0 ).className= 'table_course_wrap is-active height' */\n                }\n                //location\n                if(e.target.parentNode.parentNode.childNodes[locationIndex].children.length !== 0){\n                  $(e.target.parentNode.parentNode.childNodes[locationIndex].children[0].children[1]).get( 0 ).className= 'table_location_it show'\n                }\n              }\n              $(e.target.parentNode.parentNode.childNodes[courseIndex].children[0].children[0]).get( 0 ).slideDown='400'\n            }\n          }\n         }\n       }\n       \n      },\n       {\n         text: 'EMAIL',\n         dataField: 'userId',\n         sort: true,\n         csvExport: true,\n         classes:'entry-text',\n         formatter: addLink,\n         headerStyle: {\n          width:'25%'\n        }\n       },\n       {\n        dataField: \"FirstName\",\n        text: \"FirstName\",\n        sort: true,\n        csvExport: true,\n        headerStyle: {\n          width:'12%'\n        }\n       },\n       {\n        dataField: \"LastName\",\n        text: \"LastName\",\n        csvExport: true,\n        headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'COURSES',\n         dataField: 'courseRegistered',\n         formatter: courseFormater,\n         csvExport: false,\n         headerStyle: {\n          width:'22%'\n        }\n       },\n       {\n         text: 'PHONE',\n         dataField: 'Mobile',\n         sort: true,\n         csvExport: true,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'device',\n         dataField: 'deviceMake',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'deviceOS',\n         dataField: 'deviceOsVersion',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'appVersion',\n         dataField: 'versionNumber',\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'10%'\n        }\n       },\n       {\n         text: 'gdprAccepted',\n         dataField: 'acceptedGDPR',\n         sort: true,\n         csvExport: true,\n         headerStyle: {\n          width:'15%'\n        }\n       },\n       {\n         text: 'LOCATION',\n         dataField: 'Location',\n         formatter:locationFormater,\n         sort: true,\n         csvExport: false,\n         headerStyle: {\n          width:'15%'\n        }\n       },\n       {\n        dataField: \"status\",\n        text: \"STATUS\",\n        csvExport: false,\n        formatter:statusFormater,\n        headerStyle: {\n          width:'10%'\n        }\n       }],\n      data : []\n       \n    }\n    this.state.selected = []\n    this.state.statusIndex = 4\n    this.state.courseIndex = 5\n    this.state.locationIndex = 12\n    this.state.batchData = [];\n\n    this.state.csvFileName = global.companyName + \"-Employee-\" + this.getDate() +\".csv\";\n    this.state.notification = {\n      title: '',\n      message: '',\n      type: 'default',                // 'default', 'success', 'info', 'warning'\n      container: 'top-right',                // where to position the notifications\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    };\n    \n  }\n  gotoCourse = (courseNumber,courseName) =>{\n    this.props.history.push({pathname: '/coursedetail',state: {courseId: courseNumber,courseName:courseName}});\n  }\n  getDate() {\n    var tempDate = new Date();\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\n    return date;\n  }\n  \n  componentDidMount() {\n    global.api.getEmployeeList(global.companyCode)\n    .then(res => res)\n                .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n                .catch(err =>{\n                    alert(err);\n                })\n    //For Batch\n    global.api.getBatch(global.companyCode)\n    .then(\n      data => {\n        data.sort(function(a, b) {\n          return a.batchNumber - b.batchNumber;\n        });\n        this.setState({ batchData: data });\n    });\n  }\n  onBatchChange = selectedBatch => {\n    this.setState({ selectedBatch });\n    console.log(`Batch selected:`, selectedBatch.value);\n    var batchNumber = selectedBatch.value;\n    $(\"#gdpr\").prop(\"checked\", false);\n    this.setState({checked: false});\n    global.api.getEmployeeList(global.companyCode,batchNumber)\n      .then(res => res)\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide();})\n      .catch(err =>{\n          alert(err);\n      })\n  };\n  onBatchChangeOld= (e) => {\n    //List of Batches for selected Company\n    this.setState({selectedBatch: e.target.value});\n    var batchNumber = e.target.value;\n    global.api.getEmployeeList(global.companyCode,batchNumber)\n      .then(res => res)\n      .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n      .catch(err =>{\n          alert(err);\n      })\n  }\n  handleCheck = () => {\n    var notification=this.state.notification;\n    let batchNumber = \"\";\n    if(this.state.selectedBatch === undefined){\n      notification.type='danger'\n      notification.title='Error';\n      notification.message='Please select batch before GDPR'\n            store.addNotification({\n              ...notification\n            });\n      $(\"#gdpr\").prop(\"checked\", false);\n      return false;\n    }else{\n      batchNumber = this.state.selectedBatch.value;\n      this.setState({checked: !this.state.checked});\n      let gdprCheck = \"\";\n      if(!this.state.checked === true){\n        gdprCheck = \"Y\";\n      }\n      global.api.getEmployeeList(global.companyCode,batchNumber,gdprCheck)\n        .then(res => res)\n        .then(data => {$('#employee-content').show();this.setState({data});$('#spinner').hide(); })\n        .catch(err =>{\n          alert(err);\n      })\n    }\n  }\n  handleBtnClick = () => {\n    console.log(this.state.selected)\n  }\n  \n  handleOnSelect = (row, isSelect, rowIndex, e) => {\n    \n    var columnCount = $(e.target.parentNode.parentNode).get(0).cells;\n    \n    if (isSelect) {\n      \n      for (var i=1; i < columnCount.length; i++) {\n        if(i === 6){\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td entry-text is-active';\n        }else{\n          $(e.target.parentNode.parentNode.cells[i]).get(0).className='table_td is-active';\n        }\n      }\n      \n    } else {\n      for (var j=1; j < columnCount.length; j++) {\n        if(j === 6){\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td entry-text';\n        }else{\n          $(e.target.parentNode.parentNode.cells[j]).get(0).className='table_td';\n        }\n        \n      }\n    }\n  }\n  handleOnSelectAll = (isSelect, rows, e) => {\n    \n    var rowCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1]).get(0).childNodes;\n    if (isSelect) {\n      for (var i=0; i < rowCount.length; i++) {\n        var colCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i]).get(0).cells;\n        for (var j=1; j < colCount.length; j++) {\n          if(j === 6){\n          $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td entry-text is-active';\n          }else{\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='table_td is-active';\n          }\n        }\n      }\n      \n    } else {\n      for (var ii=0; ii < rowCount.length; ii++) {\n        var coldCount = $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii]).get(0).cells;\n        for (var jj=1; jj < coldCount.length; jj++) {\n          if(jj === 6){\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td entry-text';\n          }else{\n            $(e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='table_td';\n          }\n          \n        }\n      }\n      /* this.setState(() => ({\n        selected: []\n      })); */\n    }\n  }\n  render() {\n    \n    const options = {\n      custom: true,\n      /* page: 1, */\n      /* totalSize: this.state.data.length */\n      slected:[],\n    };\n    const MyExportCSV = props => {\n      const handleClick = () => {\n        props.onExport();\n      };\n      return (\n        \n        <span\n          className=\"btn btn-radius btn-size btn-white export\"\n          onClick={handleClick} style={{marginTop:'20px'}}\n        >\n          <span>Export CSV</span>\n        </span>\n      );\n    };\n    function chkFormatter(cell, row) {\n      return (\n        <div class=\"table_check\">\n          <label class=\"form_checkbox\">\n            <input type=\"checkbox\" hidden=\"hidden\" />\n            <span> </span>\n            </label>\n            </div>\n        );\n    }\n    const selectRow = {\n      mode: 'checkbox',\n      formatter:chkFormatter,\n      clickToSelect: false,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll,\n      headerColumnStyle: {\n        width:'45px',\n        paddingLeft:'5px'\n      }\n      \n    };\n    const rowEvents = {onClick:(e, row, rowIndex) => {\n          \n      //console.log($(e.target.parentNode).get(0).tagName)\n      var elementName = ''\n      if($(e.target.parentNode).get(0).tagName === 'TR'){\n        elementName = e.target.parentNode\n      }else {\n        elementName = e.target.parentNode.parentNode.parentNode.parentNode\n      }\n      \n      if(elementName.tagName === 'TBODY'){\n        \n        elementName = elementName.childNodes[rowIndex]\n      }\n      var statusIndex = this.state.statusIndex\n      var courseIndex = this.state.courseIndex\n      var locationIndex = this.state.locationIndex\n      /* console.log(elementName)\n      console.log(rowIndex) */\n      if(elementName.tagName === 'TR'){\n        \n        if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\n          /* $('#courses_'+rowIndex).css('height','')\n          $('#courses_'+rowIndex).css('overflow','') */\n          var coursesClass = elementName.childNodes[courseIndex].children[0].children[0].className;\n          var courseCount = elementName.childNodes[courseIndex].children[0].childNodes\n          if(coursesClass !== 'table_course_wrap'){\n            //status\n            if(elementName.childNodes[statusIndex].children.length !== 0){\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session'\n            }\n            //courses\n            elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap'\n            elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container hide'\n            \n            for(var i = 1 ; i < courseCount.length; i++){\n              elementName.childNodes[courseIndex].children[0].children[i].className= 'table_course_wrap hide'\n            }\n            \n            //location\n            if(elementName.childNodes[locationIndex].children.length !== 0){\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it'\n            }\n          }else{\n            \n            //status\n            if(elementName.childNodes[statusIndex].children.length !== 0){\n              elementName.childNodes[statusIndex].children[0].children[1].className= 'session show'\n            }\n            //courses\n            if(elementName.childNodes[courseIndex].children[0].children.length !== 0){\n              elementName.childNodes[courseIndex].children[0].children[0].className= 'table_course_wrap is-active height'\n              elementName.childNodes[courseIndex].children[0].children[0].children[1].className= 'progress_status_container'\n              for(var j = 1 ; j < courseCount.length; j++){\n                elementName.childNodes[courseIndex].children[0].children[j].className= 'table_course_wrap is-active height'\n              }\n              if(courseCount.length>3){\n                /* $('#courses_'+rowIndex).css('height','200px')\n                $('#courses_'+rowIndex).css('overflow','auto') */\n              }\n             \n            }\n            //location\n            if(elementName.childNodes[locationIndex].children.length !== 0){\n              elementName.childNodes[locationIndex].children[0].children[1].className= 'table_location_it show'\n            }\n          }\n          elementName.childNodes[courseIndex].children[0].children[0].slideDown='400'\n        }\n      }\n      }\n     };\n    \n    const NoDataIndication = () => (\n      <div className=\"table_wraps\" id=\"spinner\">\n        <div className=\"spinner\" >\n          <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\n                  Loading....\n        </div>\n        </div>\n    );\n    \n    const NoDataAvailable = () => (\n      <div className=\"spinner nodata-available\">\n       No Data Available...\n      </div>\n    );\n    return (\n      \n          <ToolkitProvider\n          keyField=\"i_d\"\n          data={ this.state.data }\n          columns={ this.state.columns }\n          classes=\"table\"\n          search\n          exportCSV = {{ fileName: this.state.csvFileName }}\n          >\n          {\n            props => (\n              <main className=\"offset\" id=\"content\">\n                    <section className=\"section_box\">\n                        <h1 className=\"title1 mb50\">Employees</h1>\n                        <div className=\"head_box type2 mb50\">\n                            <div className=\"head_box_l\">\n                                <div className=\"activated_employee\">\n                                    <div className=\"activated_employee_it\">\n                                        <h4 className=\"title4 mb10\">Activated Employees</h4>\n                                        <div className=\"color5 fz28 fw700\">{this.state.data.length}</div>\n                                    </div>\n                                    <div className=\"activated_employee_it2\">\n                                        <span>Available Slots: 36</span>\n                                        <img src=\"images/icons/twotone-people.svg\" alt=\"\" />\n                                    </div>\n                                </div>\n                              <div className=\"batch-select-box\">\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\n                                <div style={{'width':'100px'}}>\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\n      classNamePrefix=\"batch\"/>\n                                </div>\n                              </div>\n                              <div className=\"gdpr-check-box title4\">\n                                  GDPR <input type=\"checkbox\" name=\"gdpr\" id=\"gdpr\" onChange={this.handleCheck} defaultChecked={this.state.checked}/>\n                              </div>\n                            </div>\n                            <div className=\"head_box_c\">\n                                <form className=\"form_search\">\n                                <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\n                                    <button>\n                                        <img src=\"images/icons/search-icon.svg\" alt=\"\" />\n                                    </button>\n                                </form>\n                            </div>\n                            <div className=\"head_box_r\">\n                                <a className=\"btn btn-radius btn-size btn-white\" href=\"/add-employee\">\n                                    <i>\n                                        <img src=\"images/icons/User.svg\" alt=\"\" />\n                                    </i>\n                                    <span>Add new</span>\n                                </a>\n                                <span className=\"btn btn-radius btn-size btn-blue btn-icon-right export\" onClick={ this.handleBtnClick }>\n                                    <i>\n                                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\n                                    </i>\n                                    <span>Add to Course</span>\n                                </span>\n                            </div>\n                        </div>\n              <div id=\"employee-content\" style={{'display':'none','width':'145%'}}>\n                {(this.state.data.length !== 0) ?<div className=\"head_box_l mb15\"><MyExportCSV {...props.csvProps} /></div>:''}\n              \n                {this.state.data.length !== 0? \n                <PaginationProvider pagination={ paginationFactory(options) }>\n                {({ paginationProps, paginationTableProps}) => (\n                  <div>\n                    \n                  <BootstrapTable\n                    { ...props.baseProps }\n                    selectRow={ selectRow } \n                    rowEvents={ rowEvents }\n                    { ...paginationTableProps }\n                    filter={ filterFactory() }\n                    classes=\"table\"\n                    noDataIndication={ () => <NoDataAvailable /> }\n                  />\n                  <PaginationListStandalone\n                    { ...paginationProps }\n                  />\n                  </div>\n                  ) \n                }\n                </PaginationProvider>\n                 : <NoDataAvailable /> } \n               \n              </div>\n              <NoDataIndication />\n              </section>\n        </main>\n            )\n          }\n        </ToolkitProvider>\n        \n    );\n  }\n}\nexport default Employees;\n\n\n","import React, { Component } from \"react\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport ReactFormInputValidation from \"react-form-input-validation\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport $ from 'jquery';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n//import { Upload, Icon, message } from 'antd';\r\n//import 'antd/dist/antd.css';\r\nimport queryString from 'query-string';\r\n\r\n//const { Dragger } = Upload;\r\n\r\nclass AddEmployee extends Component {\r\n constructor(props) {\r\n    super(props);\r\n    let params = queryString.parse(this.props.location.search)\r\n     \r\n    this.state = {\r\n      countryCode: '+34',\r\n      phone: '+34',\r\n      title: 'Add',\r\n      startDate: new Date(),\r\n      fields: {\r\n        fname: \"\",\r\n        email: \"\",\r\n        lname:\"\",\r\n        location:\"\",\r\n        dni:\"\",\r\n        deptname:\"\",\r\n        userId:\"\"\r\n      },\r\n      status:\"F\",\r\n      wemail:'No',\r\n      mobileos:'android',\r\n      update:0,\r\n      errors: {}\r\n    };\r\n    if(params.userId!==undefined ){\r\n      this.state.userId = params.userId\r\n      this.state.title = 'Update';\r\n      this.state.update = 1;\r\n    }\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.errors = [];\r\n    this.form = new ReactFormInputValidation(this);\r\n    this.form.useRules({\r\n        fname: \"required\",\r\n        email: \"required|email\",\r\n    });\r\n\r\n    this.form.onformsubmit = (fields) => {\r\n      \r\n      var notification=this.state.notification\r\n      let actVal = this.refs['actionVal'].value;\r\n      if((actVal === '') || (actVal === 'fillform')){\r\n        let countryCode = \"\";\t\r\n        let mobile = \"\";\t\r\n        let mobileData = this.state.phone;\t\r\n        if(mobileData !== \"\"){\t\r\n          let mobileDataArr = mobileData.split(\" \");  \r\n          countryCode = (mobileDataArr[\"0\"]).replace ( /[^0-9]/g, '' ); \r\n          let n = mobileData.indexOf(\" \");  \r\n          if(n >= 0){\r\n            mobile = (mobileData.substr(parseInt(n+1))).replace ( /[^0-9]/g, '' );\r\n          }\r\n        }\t\r\n        var params = {\r\n          userId:fields.email,\r\n          CompanyCode:global.companyCode,\r\n          FirstName:fields.fname,\r\n          LastName:fields.lname,\r\n          Location:fields.location,\r\n          Mobile:mobile,\t\r\n          CountryCode:countryCode,\r\n          DNI:fields.dni,\r\n          mobileOS:$('#mobileos').val(),\r\n          subscriptionValidDate:this.state.startDate,\r\n          company:fields.deptname,\r\n          weeklyEmail:$('#wemail').val(),\r\n          disable:$('#status').val()\r\n        }\r\n        if(this.state.update === 1){\r\n          global.api.updateEmployee(params)\r\n          .then(res => res)\r\n          .then((json)=>{\r\n            if(json.data.message===\"Employee Fields Saved Successfully.\"){\r\n              notification.type='success'\r\n              notification.title='Success';\r\n              notification.message=json.data.message\r\n              store.addNotification({\r\n                ...notification\r\n              });\r\n            }else{\r\n              notification.type='danger'\r\n              notification.title='Error';\r\n              notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n            }\r\n          })\r\n          .catch(err =>{\r\n              //alert(err);\r\n              notification.type='danger'\r\n              notification.title='Error';\r\n              notification.message=err.data.error\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n          });\r\n        }else{\r\n          global.api.addEmployee(params)\r\n          .then(res => res)\r\n          .then((json)=>{\r\n            if(json.data.message===\"Employee data inserted Successfully.\"){\r\n              notification.type='success'\r\n              notification.title='Success';\r\n              notification.message=json.data.message\r\n              store.addNotification({\r\n                ...notification\r\n              });\r\n            }else{\r\n              notification.type='danger'\r\n              notification.title='Error';\r\n              notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n            }\r\n          })\r\n          .catch(err =>{\r\n              //alert(err);\r\n              notification.type='danger'\r\n              notification.title='Error';\r\n              notification.message=err.data.error\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n          });\r\n        }\r\n        \r\n    }else{\r\n      alert(\"Upload File\");\r\n    }\r\n  }\r\n }\r\n componentDidMount() {\r\n   if(this.state.userId){\r\n    global.api.getEmployeeDetails (this.state.userId)\r\n              .then(res => res)\r\n              .then((json)=>{\r\n                const fields = {\r\n                  fname :  json.FirstName,\r\n                  email :  json.userId,\r\n                  lname :  json.LastName,\r\n                  location  : json.Location,\r\n                  dni   :  json.DNI,\r\n                  deptname  : json.company,\r\n                  userId  : json.userId\r\n                }\r\n                this.setState({countryCode: `+${json.CountryCode}`});\r\n                this.setState({phone: `+${json.Mobilewcode}`});\r\n                this.setState({fields});\r\n                this.setState({phone : json.Mobile});\r\n                if(json.status!==\"\" && json.status!==\" \"){\r\n                  this.setState({status:json.status.toUpperCase()});\r\n                }\r\n                if(json.weeklyEmail!==\"\" && json.weeklyEmail!==\" \"){\r\n                  this.setState({wemail:json.weeklyEmail});\r\n                }\r\n                \r\n                if(json.mobileOS!==\"\" && json.mobileOS!==\" \"){\r\n                  \r\n                  this.setState({mobileos:json.mobileOS});\r\n                }\r\n                \r\n                if(json.subscriptionValidDate !== '' && json.subscriptionValidDate!== '0000-00-00 00:00:00'){\r\n                  var toDate = new Date(json.subscriptionValidDate);\r\n                  this.setState({startDate : toDate});\r\n                }\r\n                \r\n              })\r\n              .catch(err =>{\r\n                  alert(err);\r\n              })\r\n              $('#mobileos').val(this.state.mobileos).change();  \r\n              $('#status').val(this.state.status).change();\r\n              $('#wemail').val(this.state.wemail).change();\r\n              \r\n   }\r\n  \r\n}\r\n  handleChange(e){\r\n    this.setState({countryCode: e.target.value});\r\n  }\r\n  handleCheck(e) {\r\n     this.setState({actionVal: e.currentTarget.dataset.id})\r\n     this.refs['actionVal'].value = e.currentTarget.dataset.id;\r\n  }\r\n  \r\n  render(){\r\n    /* const props = {\r\n      name: 'file',\r\n      accept: \".csv\",\r\n      multiple: true,\r\n      action: 'https://none',\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n           let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n               console.log(e.target.result);\r\n            }\r\n            reader.readAsText(info.file.originFileObj);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    }; */\r\n    return (\r\n        \r\n      <main className=\"offset\" id=\"content\">\r\n      <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n    <section className=\"section_box\">\r\n      <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n        <h1 className=\"title1 mb25\">{this.state.title} Employee</h1>\r\n        <form onSubmit={this.form.handleSubmit} className=\"form_employee js-tabs\">\r\n          {/* <ul className=\"js-tabs-list tab-list\">\r\n            <li data-id=\"fillform\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Fill Form</span>\r\n            </li>\r\n            <li data-id=\"uploadfile\" onClick={this.handleCheck.bind(this)}>\r\n                <span>Upload from File</span>\r\n            </li>\r\n          </ul> */}\r\n          <div className=\"js-tabs-box\">\r\n            <div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Personal Information</h2>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">FIRST Name</label>\r\n                    \r\n                    <input type=\"text\" className=\"form_input\" name=\"fname\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.fname}/>\r\n                    <label className=\"error_message\"> {this.state.errors.fname ? this.state.errors.fname : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">LAST Name</label>\r\n                    <input type=\"text\" className=\"form_input\" name=\"lname\" onChange={this.form.handleChangeEvent} value={this.state.fields.lname}/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">EMAIL</label>\r\n                    <input className=\"form_input\" type=\"email\" name=\"email\" onBlur={this.form.handleBlurEvent} onChange={this.form.handleChangeEvent} value={this.state.fields.email}/>\r\n                    <label className=\"error_message\"> {this.state.errors.email ? this.state.errors.email : \"\"}</label>\r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">mobile</label>\r\n                    <div className=\"p_rel selectt\">\r\n                        <PhoneInput className=\"form_input form_input_tel\" country={'es'} value={this.state.phone} \r\n                        onChange={phone => this.setState({ phone })} enableSearch required= 'true' ref=\"mobile\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form_row_col\">\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Location</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"location\" name=\"location\" ref=\"location\" onChange={this.form.handleChangeEvent} value={this.state.fields.location}/> \r\n                  </div>\r\n                  <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">dni</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"dni\" name=\"dni\" ref=\"dni\" onChange={this.form.handleChangeEvent} value={this.state.fields.dni}/> \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                <h2 className=\"title2 fw400 form_title mb25\">Work Information</h2>\r\n                <div className=\"form_row mb25\">\r\n                    <label className=\"form_label\">Department</label>\r\n                    <input className=\"form_input\" type=\"text\" id=\"deptname\" name=\"deptname\" ref=\"deptname\" onChange={this.form.handleChangeEvent} value={this.state.fields.deptname}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"form_row_box\">\r\n                  <h2 className=\"title2 fw400 form_title mb25\">Additional Information</h2>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">MOBILE OS</label>\r\n                        <select className=\"styler select2 w182\" id=\"mobileos\" name=\"mobileos\" ref=\"mobileos\" >\r\n                            <option value=\"android\">Android</option>\r\n                            <option value=\"IOS\">IOS</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Subscription valid date</label>\r\n                        <div>\r\n                            <div className=\"datepicker_box mb20\">\r\n                                <div className=\"p_rel\">\r\n                                <DatePicker className=\" form_input\" selected={this.state.startDate} onChange= {date => this.setState({ startDate: date })} dateFormat=\"dd-MM-yyyy\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form_row_col\">\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">weekly email</label>\r\n                        <select className=\"styler select2 w182\" id=\"wemail\" name=\"wemail\" ref=\"wemail\">\r\n                          <option value=\"No\">No</option>\r\n                          <option value=\"Yes\">Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form_row form_flex mb25\">\r\n                        <label className=\"form_label\">Status</label>\r\n                        <select className=\"styler select2 w182\" id=\"status\" name=\"status\" ref=\"status\" >\r\n                        <option value=\"F\">Unarchive</option>\r\n                        <option value=\"T\">Archive</option>\r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"form_row_btn\">\r\n                <button className=\"btn btn-white btn-radius btn-size\">\r\n                  <span>Cancel</span>\r\n                </button>\r\n                <button className=\"btn btn-blue btn-radius btn-icon-left\">\r\n                  \r\n                  <span>{this.state.title} employee</span>\r\n                </button>\r\n                <input type=\"hidden\" id=\"action\" name=\"actionVal\" ref=\"actionVal\"/>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              \r\n              {/* <Dragger {...props} style={{width:'100%'}}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <Icon type=\"inbox\" />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  Support for a single or bulk upload. Strictly prohibit from uploading company data or other band fileList\r\n                </p>\r\n              </Dragger> */}\r\n            </div>\r\n          </div>\r\n          \r\n        </form>\r\n      </section>\r\n</main>\r\n    )\r\n  }\r\n}\r\nexport default AddEmployee;\r\n\r\n","import React, { Component } from \"react\";\r\n//import DataTable from 'react-data-table-component';\r\nimport $ from 'jquery';\r\nclass EmployeestoCourses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(this.props.location.state===undefined){\r\n      window.location.href = '/employee';\r\n    }\r\n  //console.log(this.props.location.state.userid)\r\n    this.state = {\r\n      data : [],\r\n      userid:this.props.location.state.userid\r\n    }\r\n    this.state.selected = []\r\n    \r\n  }\r\n  componentDidMount() {\r\n    global.api.getCourseList(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  }\r\n  \r\n  handleChkChange = (e) => {\r\n    console.log(e.target.value)\r\n    \r\n    //console.log(e.target.checked)\r\n    var isSelect = e.target.checked\r\n    var chkValue = e.target.value\r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        selected: [...this.state.selected, chkValue]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        selected: this.state.selected.filter(x => x !== chkValue)\r\n      }));\r\n    }\r\n  }\r\n  \r\n  onSubmit = (e) => {\r\n    console.log($(e.target.parentNode.parentNode.parentNode))\r\n    console.log($('#popup_box').get(0).className)\r\n    window.location.href = '#popup_box'\r\n    //$('#popup_box').get(0).className = 'mfp popup_container'\r\n   /*  e.preventDefault();\r\n    let arr = [];\r\n    for (var key in this.state) {\r\n      if(this.state[key] === true) {\r\n        arr.push(key);\r\n      }\r\n    }\r\n    console.log(arr) */\r\n    /* let data = {\r\n      check: arr.toString() \r\n    }; */\r\n   /*  axios.post('http://localhost:4000/checks/add', data)\r\n          .then(res => console.log(res.data)); */\r\n  }\r\n  render() {\r\n    \r\n    const courseList = this.state.data.map((item, index) => {\r\n      var imgPath = '/images/icons/icon_module_'+item.moduleNumber+'.svg'\r\n      return (\r\n        <label className=\"course_wraps_checkbox\" key={index} >\r\n            <input type=\"checkbox\" id={item.Id} hidden=\"hiddden\" onChange={this.handleChkChange} value={item.Id}/>\r\n            <span>\r\n                <span className=\"course_wraps_img\">\r\n                    <img src={imgPath} alt=\"\" />\r\n                </span>\r\n                <span className=\"course_wraps_text\">\r\n                    <h3 className=\"title3\">{item.courseName}</h3>\r\n                    <p>{item.Id} Weeks</p>\r\n                </span>\r\n            </span>\r\n        </label>\r\n        \r\n      );\r\n    });\r\n    \r\n    return (<main className=\"offset\" id=\"content\">\r\n    <section className=\"section_box\">\r\n        <h1 className=\"title1 mb50\">Employees</h1>\r\n        {/* <form onSubmit = {this.onSubmit}> */}\r\n        <div className=\"head_box type2 mb20\">\r\n            <div className=\"head_box_l\">\r\n                <div className=\"activated_employee type2\">\r\n                    <div className=\"activated_employee_it mr30\">\r\n                        <img className=\"img\" src=\"/images/icons/twotone-people2.svg\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"activated_employee_it mr60\">\r\n                        <h4 className=\"title4 fw400 mb10\">Activated Employees</h4>\r\n                        <div className=\"color5 fz28 fw700\">54</div>\r\n                    </div>\r\n                    <div className=\"activated_employee_it\">\r\n                        <h4 className=\"title4 fw400 mb10\">Open Slots</h4>\r\n                        <div className=\"color5 fz28 fw300\">35</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"head_box_c\">\r\n                <span className=\"form_search\">\r\n                    <input type=\"text\" placeholder=\"Search for employee\" />\r\n                    <button>\r\n                        <img src=\"/images/icons/search-icon.svg\" alt=\"\" />\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <div className=\"head_box_r\">\r\n                <a className=\"btn btn-radius btn-size btn-white\" href=\"/employee\">\r\n                    <i>\r\n                        <img src=\"/images/icons/User.svg\" alt=\"\" />\r\n                    </i>\r\n                    <span>Add new</span>\r\n                </a>\r\n                <a className=\"btn btn-radius btn-size btn-blue btn-icon-right popup-link\" href='#popup_box1' onClick={this.onSubmit}>\r\n                    <i>\r\n                        <img src=\"/images/icons/arrow_next2.svg\" alt=\"\" />\r\n                    </i>\r\n                    <span>Add to Course</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div className=\"head_box type2 mb105\">\r\n            <div className=\"head_box_l fd\">\r\n                <div className=\"following_box\">\r\n                    <span className=\"following_img\">\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                        <img src=\"/images/benjamin.png\" alt=\"\" />\r\n                    </span>\r\n                    <span>\r\n                        <b>+65 more</b>&nbsp;will be added to the following</span>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className=\"course_wraps mb105\">\r\n            <h2 className=\"mb30 fw400\">General Courses</h2>\r\n            <div className=\"course_wraps_it\">\r\n            {courseList}\r\n                \r\n            </div>\r\n        </div>\r\n        {/* <div className=\"course_wraps\">\r\n            <h2 className=\"mb30 fw400\">Management</h2>\r\n            <div className=\"course_wraps_it\">\r\n            {courseList}\r\n            </div>\r\n        </div> */}\r\n        {/* </form> */}\r\n    </section>\r\n    \r\n</main>)\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default EmployeestoCourses;\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport {Pie } from 'react-chartjs-2';\r\nimport Select from 'react-select';\r\n\r\nclass Reports extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      columns:[],\r\n      data:[]\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeData = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none'\r\n    this.state.noDataAvailable = 'none'\r\n    this.state.avgVals = [];\t\t\r\n    this.state.avgPercentTable = \"\";\t\t\r\n    this.state.grp1Val = 0;\t\t\r\n    this.state.grp2Val = 0;\t\t\r\n    this.state.grp3Val = 0;\t\t\r\n    this.state.grp1PVal = 0;\t\t\r\n    this.state.grp2PVal = 0;\t\t\r\n    this.state.grp3PVal = 0;\r\n    this.state.csvFileName = global.companyName +  \"-\" + this.getDate() +\".csv\";\r\n    this.state.pieChartDisplay = false\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n  }\r\n  getDate() {\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({ routeData: []});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []}); \r\n  };\r\n  \r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    \t\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        this.setState({ routeData: data});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    \r\n    /*reports call*/\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#attenPagination').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    \r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#attenPagination').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  \r\n  onRouteSelect = selectedRoute => {\r\n    this.setState({ selectedRoute });\r\n    console.log(`Option selected:`, selectedRoute);\r\n    this.setState({selectedRouteText: []});\r\n    let selRoute = [];\r\n    let value = [];\r\n    if(selectedRoute !== null){\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i]);\r\n          selRoute.push(selectedRoute[i].label);\r\n      }\r\n    }\r\n    this.setState({selectedRouteText: selRoute});\r\n    this.setState({selectedRoute: value}); \r\n  };\r\n  handleBtnClick = () => {\r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#attenPagination').hide();\r\n    this.setState({data: []});\r\n    this.forceUpdate();\r\n    \r\n    let colNames = [...this.state.baseColNames];\r\n    \r\n    var selectedRouteText = this.state.selectedRouteText;\r\n    console.log('selectedRouteText',selectedRouteText)\r\n    console.log('colNames',this.state.baseColNames)\r\n    var colCount = 0\r\n    for (var row1 of selectedRouteText) {\r\n      row1 = row1.replace(\"\\r\\n\", \" \");\r\n     var routeCols = {\r\n        text: row1,\r\n        dataField: row1,\r\n        headerStyle: {\r\n          width:'100px',\r\n          whiteSpace: 'normal'\r\n        }\r\n      };\r\n      colCount = colCount+1\r\n      colNames.push(routeCols);\r\n      \r\n    }\r\n    if(selectedRouteText.length > 0){\r\n      var avg = {\r\n        text: \"Avg\",\r\n        dataField: \"avg\",\r\n        sort:true,\r\n        headerStyle: {\r\n          cursor:'pointer',\r\n          width:'100px',\r\n        },\r\n      }\r\n      colCount = colCount+1\r\n      colNames.push(avg);\r\n    }\r\n    \r\n    this.setState({columns: colNames});\r\n    \r\n    this.setState({avgVals: []});\t\t\r\n    let avgValsarr = [];\r\n\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    \r\n    let selectedRoute = this.state.selectedRoute;\r\n    if(selectedRoute.length > 0){\r\n      var value = [];\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i].value);\r\n      }\r\n      selectedRoute = value.toString();\r\n    }else{\r\n      selectedRoute = \"\";\r\n      this.setState({pieChartDisplay:false})\r\n    }\r\n\r\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#attenPagination').show();\r\n        const items = [];\r\n        for (const row of result) {\r\n          let item = row;\r\n          let totRoutes = 0;\r\n          let avgRoutes = 0;\r\n          if(selectedRouteText.length > 0){\r\n            for (var row1 of selectedRouteText){\r\n              row1 = row1.replace(\"\\r\\n\", \" \");\r\n              if(row.Routes[row1] !== undefined){\r\n                item[row1] = row.Routes[row1]['routePercent'];\r\n                totRoutes = parseInt(totRoutes)+parseInt(row.Routes[row1]['routePercent']);\r\n              }\r\n            }\r\n            if(totRoutes > 0){\r\n              avgRoutes = Math.round(totRoutes/(selectedRouteText.length));\r\n            }\r\n            item['avg'] = avgRoutes;\r\n            avgValsarr.push(avgRoutes);\r\n          }\r\n          items.push(item);\r\n        }\r\n        this.setState({avgVals: avgValsarr});\t\r\n        if(selectedRoute.length > 0){\t\r\n\r\n          let grp1 = 0;\t\t\r\n          let grp2 = 0;\t\t\r\n          let grp3 = 0;\t\t\r\n          let grp1Percent = 0;\t\t\r\n          let grp2Percent = 0;\t\t\r\n          let grp3Percent = 0;\t\t\r\n          for (const avgData of avgValsarr){\t\t\r\n            if (avgData >= 61 && avgData <= 100) {\t\t\r\n              grp3 = grp3+1;\t\t\r\n            }else if(avgData >= 31 && avgData <= 60){\t\t\r\n              grp2 = grp2+1;\t\t\r\n            }else{\t\t\r\n              grp1 = grp1+1;\t\t\r\n            }\t\t\r\n          }\t\t\r\n          grp1Percent = Math.round((grp1/(avgValsarr.length))*100);\t\t\r\n          grp2Percent = Math.round((grp2/(avgValsarr.length))*100);\t\t\r\n          grp3Percent = Math.round((grp3/(avgValsarr.length))*100);\t\t\r\n          this.setState({grp1Val: grp1});\t\t\r\n          this.setState({grp2Val: grp2});\t\t\r\n          this.setState({grp3Val: grp3});\t\t\r\n          this.setState({grp1PVal: grp1Percent});\t\t\r\n          this.setState({grp2PVal: grp2Percent});\t\t\r\n          this.setState({grp3PVal: grp3Percent});\r\n          this.setState({pieChartDisplay:true})\r\n        }\r\n        this.setState({data: items});\r\n        \r\n      }\r\n    )\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    \r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const pieChat = {\t\t\r\n      labels: ['0-30%', '30%-60%','60%-100%'],\t\t\r\n      datasets: [\t\t\r\n      {\t\t\r\n        label: 'Avg % Completion',\t\t\r\n        backgroundColor: [\t\t\r\n          '#B21F00',\t\t\r\n          '#2FDE00',\t\t\r\n          '#00A6B4',\t\t\r\n        ],\t\t\r\n        hoverBackgroundColor: [\t\t\r\n        '#501800',\t\t\r\n        '#175000',\t\t\r\n        '#003350'\t\t\r\n        ],\t\t\r\n        data: [this.state.grp1PVal, this.state.grp2PVal, this.state.grp3PVal]\t\t\r\n        }\t\t\r\n      ]\t\t\r\n    };\r\n    const MyExportCSV = props => {\r\n      const handleClick = () => {\r\n        props.onExport();\r\n      };\r\n      return (\r\n        \r\n        <span\r\n          className=\"btn btn-radius btn-size btn-white export\"\r\n          onClick={handleClick} style={{marginTop:'20px'}}\r\n        >\r\n          <span>Export CSV</span>\r\n        </span>\r\n      );\r\n    };\r\n    \r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const ReportSummary = () =>(\r\n      <div className=\"section_wrap\">\r\n            <div className=\"box w1\">\r\n             \r\n              <div className=\"white_box type2\" data-mh=\"white_box\">\r\n                <table className=\"activity_table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"percent-table-th\"></th>\r\n                            <th>\r\n                                <span>Range</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th-width\">\r\n                                <span>User</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th-width\">\r\n                                <span>Percentage(%)</span>\r\n                            </th>\r\n                            <th className=\"percent-table-th\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>60-100%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp3Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp3PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>30-60%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp2Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp2PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                      <tr>\r\n                          <td className=\"percent-table-th\"></td>\r\n                          <td>\r\n                              <div className=\"activity_name\">\r\n                                  <span>0-30%</span>\r\n                              </div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_couse\">{this.state.grp1Val}</div>\r\n                          </td>\r\n                          <td>\r\n                              <div className=\"activity_time\">{this.state.grp1PVal}%</div>\r\n                          </td>\r\n                          <td className=\"percent-table-th\"></td>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"box w2\">\r\n          \r\n            <div className=\"white_box\" data-mh=\"white_box\">\r\n            <Pie\r\n          data={pieChat}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average % Completion Reports',\r\n              fontSize:15\r\n            }\r\n          }}\r\n        />\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n    );\r\n    return (\r\n      <main className=\"offset\" id=\"content\">\r\n        <section className=\"section_box\">\r\n          <h1 className=\"title1 mb25\">Completion Reports</h1>\r\n          <h4 className=\"title4 mb40\">For {this.state.selectedCompanyName}</h4>\r\n          <div className=\"head_box type2 mb5\" id=\"completion_reports\">\r\n            <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n              <div className=\"head_box_l\">\r\n                <div className=\"activated_employee type2\">\r\n                  <div style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                    <div style={{'width':'100px'}}>\r\n                    <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"batch\"/>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                    <div style={{'width':'300px'}}>\r\n                    <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"course\"/>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                    <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                    <div style={{'width':'400px'}}>\r\n                    <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n    classNamePrefix=\"route \" closeMenuOnSelect={false}/>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r\">\r\n                  <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\r\n                    <span\r\n                      className=\"btn btn-radius btn-size btn-blue btn-icon-right export\"\r\n                      onClick={this.handleBtnClick}\r\n                    >\r\n                      <i>\r\n                        <img src=\"images/icons/arrow_next2.svg\" alt=\"\" />\r\n                      </i>\r\n                      <span>Submit</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"reports\" className=\"scrollmenu\" style={{'display':'none'}}>\r\n          <ToolkitProvider\r\n          keyField=\"i_d\"\r\n          data={this.state.data}\r\n          columns={this.state.columns}\r\n          className=\"table type2\"\r\n          exportCSV = {{ fileName: this.state.csvFileName }}\r\n        >\r\n        {props => (\r\n              <div  id=\"table_wraps\" style={{'display':'none'}} >\r\n              {(this.state.pieChartDisplay === true && this.state.data.length !== 0) ?<ReportSummary />:''}\r\n              <div className=\"head_box_c mb15\"><MyExportCSV {...props.csvProps} /></div>\t\r\n              <div className=\"table_wraps\">\r\n                {this.state.data.length !== 0? \r\n                <PaginationProvider pagination={paginationFactory(options)}>\r\n                  {({ paginationProps, paginationTableProps }) => (\r\n                    <div className=\"attenPagination\" id=\"attenPagination\">\r\n                      <BootstrapTable\r\n                      selectRow={ selectRow } \r\n                      bootstrap4\r\n                        {...props.baseProps}\r\n                        {...paginationTableProps}\r\n                        classes=\"reports_table\"\r\n                        noDataIndication={ () => <NoDataAvailable /> }\r\n                      />\r\n                      <PaginationListStandalone {...paginationProps} />\r\n                    </div>\r\n                  )}\r\n                </PaginationProvider>\r\n                :  <NoDataAvailable />}\r\n                <NoDataIndication />\r\n              </div>\r\n              </div>\r\n        )}\r\n      </ToolkitProvider>\r\n      \r\n      </div>\r\n      \r\n      </section>\r\n          </main>\r\n    );\r\n  }\r\n}\r\nexport default Reports;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {PaginationProvider,PaginationListStandalone} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\r\n//import Loader from \"react-loader-spinner\";\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport { Progress } from 'reactstrap';  \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport * as moment from 'moment'\r\nimport queryString from 'query-string';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nclass CourseDetails extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    let params = queryString.parse(this.props.location.search)\r\n     \r\n    if(this.props.location.state===undefined && params.courseId===undefined && params.courseName===undefined){\r\n      window.location.href = '/courses';\r\n    }\r\n    let courseId = ''\r\n    let courseName = ''\r\n    if(this.props.location.state!==undefined){\r\n      if(this.props.location.state.courseId!==undefined && this.props.location.state.courseName!==undefined){\r\n        courseId = this.props.location.state.courseId;\r\n        courseName = this.props.location.state.courseName;\r\n      }\r\n    }\r\n    if(params.courseName!==undefined && params.courseId!==undefined){\r\n      courseId = params.courseId;\r\n      courseName = params.courseName;\r\n    }\r\n    //Set attendance Table Settings\r\n    this.state = {\r\n      courseId:courseId,\r\n      courseName:courseName,\r\n      attendanceColumns: [\r\n        { dataField: \"Id\", text: \"Id\", csvExport: false, hidden: true },\r\n        { \r\n          text: \"Email\",\r\n          dataField: \"userId\",\r\n          sort: true,\r\n          classes:'entry-text',\r\n          headerStyle: {\r\n            width: \"25%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"FirstName\",\r\n          text: \"FirstName\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"LastName\",\r\n          text: \"LastName\",\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"Registered\",\r\n          dataField: \"dateRegistered\",\r\n          headerStyle: {\r\n            width: \"10%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"TimeSpent\",\r\n          dataField: \"totalTimeSpent\",\r\n          headerStyle: {\r\n            width: \"10%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"Completion\",\r\n          dataField: \"completionPercentage\",\r\n          formatter: completionFormater,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        }\r\n      ],\r\n      attendanceData: [{'message':'nodata'}],\r\n      empColumns: [\r\n        \r\n        {\r\n          dataField: \"FirstName\",\r\n          text: \"FirstName\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          dataField: \"LastName\",\r\n          text: \"LastName\",\r\n          headerStyle: {\r\n            width: \"15%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"EMAIL\",\r\n          dataField: \"userId\",\r\n          sort: true,\r\n          classes: \"entry-text\",\r\n          headerStyle: {\r\n            width: \"30%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"PHONE\",\r\n          dataField: \"Mobile\",\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        },\r\n        {\r\n          text: \"LOCATION\",\r\n          dataField: \"Location\",\r\n          formatter: locationFormater,\r\n          sort: true,\r\n          headerStyle: {\r\n            width: \"20%\"\r\n          }\r\n        }\r\n      ],\r\n      empData: []\r\n    };\r\n    this.state.attenSelected = [];\r\n    this.state.empSelected = [];\r\n    this.state.empNodata = false;\r\n    this.state.totalData=[];\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    \r\n    //Column Formatter methods\r\n    function completionFormater(cell, row) {\r\n      return (\r\n        <div className=\"table_progres_bar\">\r\n          <Progress value={row.completedStatus}>{row.completedStatus}%</Progress>\r\n        </div>\r\n      );\r\n    }\r\n    function locationFormater(cell, row) {\r\n      return (\r\n        <div>\r\n          <div className=\"table_location\">{row.Location}</div>\r\n          <div className=\"table_location_it\">Department Name</div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  //remote Data Load\r\n  componentDidMount() {\r\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\r\n                .then(res => res)\r\n                .then((json)=>{\r\n                  this.setState({attendanceData:json.registered})\r\n                  this.setState({empData:json.availableToRegister})\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n  }\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState(() => ({\r\n      attenSelected: []\r\n    }));\r\n    this.setState(() => ({\r\n      empSelected: []\r\n    }));\r\n    this.setState({attendanceData:[]})\r\n                  this.setState({empData:[]})\r\n    global.api.getCourseDetails (global.companyCode,this.state.courseId)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        this.setState({attendanceData:json.registered})\r\n        this.setState({empData:json.availableToRegister})\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n  }\r\n\r\n  handleDeleteClick = e => {\r\n    e.preventDefault();\r\n    if (this.state.attenSelected.length === 0) {\r\n      alert(\"please select one user\");\r\n      return false;\r\n    } else {\r\n      var userIds = this.state.attenSelected[0]\r\n      var companyCode = global.companyCode;\r\n      //var courseNumber = this.state.courseId\r\n      global.api.deleteEmpCourse(userIds, companyCode, this.state.courseId)\r\n      .then(res => res)\r\n                .then((json)=>{\r\n                  var notification=this.state.notification\r\n                  if(json.data.message==='Employee is removed from this Course'){\r\n                    notification.type='success';\r\n                    notification.title='Success';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                    this.setState(() => ({\r\n                      attenSelected: []\r\n                    }));\r\n                    this.setState(() => ({\r\n                      empSelected: []\r\n                    }));\r\n                    this.props.history.replace({ //browserHistory.push should also work here\r\n                      pathname: '/coursedetail',\r\n                      state: {courseId:this.state.courseId,\r\n                      courseName:this.state.courseName}\r\n                    });\r\n                  }else{\r\n                    notification.type='danger'\r\n                    notification.title='Error';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                  }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    }\r\n  };\r\n  handleAddClick = e => {\r\n    e.preventDefault();\r\n    if (this.state.empSelected.length === 0) {\r\n      alert(\"please select one user\");\r\n      return false;\r\n    } else {\r\n      var userIds = this.state.empSelected[0]\r\n      var companyCode = global.companyCode;\r\n      \r\n      global.api.addEmpCourse(userIds, companyCode, this.state.courseId)\r\n      .then(res => res)\r\n                .then((json)=>{\r\n                  var notification=this.state.notification\r\n                  if(json.data.message==='Employee is successfully registered for this Course'){\r\n                    notification.type='success'\r\n                    notification.title='Success';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                    this.setState(() => ({\r\n                      attenSelected: []\r\n                    }));\r\n                    this.setState(() => ({\r\n                      empSelected: []\r\n                    }));\r\n                    this.props.history.replace({ //browserHistory.push should also work here\r\n                      pathname: '/coursedetail',\r\n                      state: {courseId:this.state.courseId,\r\n                        courseName:this.state.courseName}\r\n                    });\r\n                  }else{\r\n                    notification.type='danger'\r\n                    notification.title='Error';\r\n                    notification.message=json.data.message\r\n                    store.addNotification({\r\n                      ...notification\r\n                    });\r\n                  }\r\n                })\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    }\r\n  };\r\n  handleEmpOnSelect = (row, isSelect, rowIndex, e) => {\r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        empSelected: [...this.state.empSelected, row.userId]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        empSelected: this.state.empSelected.filter(x => x !== row.userId)\r\n      }));\r\n    }\r\n  }\r\n  handleEmpOnSelectAll = (isSelect, rows, e) => {\r\n    const ids = rows.map(r => r.userId);\r\n    \r\n    if (isSelect) {\r\n      \r\n      this.setState(() => ({\r\n        empSelected: ids\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        empSelected: []\r\n      }));\r\n    }\r\n  }\r\n  handleAttenOnSelect = (row, isSelect, rowIndex, e) => {\r\n    \r\n    if (isSelect) {\r\n      this.setState(() => ({\r\n        attenSelected: [...this.state.attenSelected, row.userId]\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        attenSelected: this.state.attenSelected.filter(x => x !== row.userId)\r\n      }));\r\n    }\r\n  }\r\n  handleAttenOnSelectAll = (isSelect, rows, e) => {\r\n    const ids = rows.map(r => r.userId);\r\n    if (isSelect) {\r\n      \r\n      this.setState(() => ({\r\n        attenSelected: ids\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        attenSelected: []\r\n      }));\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const MyExportCSV = props => {\r\n      const handleClick = () => {\r\n        props.onExport();\r\n      };\r\n      return (\r\n        <span className=\"btn btn-radius btn-size btn-blue export\"  onClick={handleClick}>\r\n          <span>Export CSV</span>\r\n        </span>\r\n      );\r\n    };\r\n    const options = {\r\n      custom: true,\r\n      sizePerPage: 30,\r\n      selected:[],\r\n      /* totalSize: this.state.attendanceData.length, */\r\n      noDataText: 'Your_custom_text',\r\n      withoutNoDataText: true\r\n    };\r\n    const empOptions = {\r\n      custom: true,\r\n      sizePerPage: 30,\r\n      selected:[],\r\n      /* totalSize: this.state.empData.length */\r\n    };\r\n    const selectRow = {\r\n      mode: \"radio\",\r\n      clickToSelect: false,\r\n      onSelect: this.handleAttenOnSelect,\r\n      //onSelectAll: this.handleAttenOnSelectAll,\r\n      headerColumnStyle: {\r\n        width: \"25px\",\r\n        paddingLeft: \"5px\"\r\n      }\r\n    };\r\n    \r\n    const empSelectRow = {\r\n      mode: \"radio\",\r\n      clickToSelect: false,\r\n      onSelect: this.handleEmpOnSelect,\r\n      /* onSelectAll: this.handleEmpOnSelectAll, */\r\n      headerColumnStyle: {\r\n        width: \"25px\",\r\n        paddingLeft: \"5px\"\r\n      }\r\n    };\r\n    \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\">\r\n       No Data Available....\r\n      </div>\r\n    );\r\n    const toDate = moment().format(\"DD-MM-YYYY\");\r\n    \r\n    return (\r\n      <main className=\"offset\" id=\"content\">\r\n        <section className=\"section_box\">\r\n          <h4 className=\"title4 mb15 fw500\">Courses</h4>\r\n          <div className=\"head_box type2 mb55\">\r\n            <div className=\"head_box_l\">\r\n              <h1 className=\"title1 mr15\">\r\n                {this.state.courseName}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          \r\n          <ToolkitProvider\r\n            keyField=\"i_d\"\r\n            data={this.state.attendanceData}\r\n            columns={this.state.attendanceColumns}\r\n            classes=\"table-atten type2\"\r\n            exportCSV={{ fileName: `employeeperformace_for_${global.companyName}_${this.state.courseName}_${toDate}.csv` }}\r\n            search\r\n            >\r\n            {props => (\r\n              <div>\r\n                <div className=\"head_box type2 mb20\">\r\n                  <div className=\"head_box_l\">\r\n                    <h2 className=\"title2 fw400 mr12\">\r\n                      Attendance / Performance\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"head_box_c\">\r\n                    <div className=\"form_search\">\r\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\r\n                      <button>\r\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r\">\r\n                    <MyExportCSV {...props.csvProps} />\r\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleDeleteClick}>\r\n                      <span>Delete</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"table_wraps\">\r\n                  <PaginationProvider pagination={paginationFactory(options)}>\r\n                    {({ paginationProps, paginationTableProps }) => (\r\n                      <div className=\"attenPagination\">\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          selectRow={selectRow}\r\n                          {...paginationTableProps}\r\n                          filter={ filterFactory() }\r\n                          classes=\"table-atten\"\r\n                          noDataIndication={ () => <NoDataAvailable /> }\r\n                        />\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </div>\r\n                    )}\r\n                  </PaginationProvider>\r\n                </div>\r\n                <div className=\"table_after\"></div>\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n          <ToolkitProvider\r\n            keyField=\"userId\"\r\n            data={this.state.empData}\r\n            columns={this.state.empColumns}\r\n            classes=\"table-atten type2\"\r\n            search>\r\n            {props => (\r\n              <div>\r\n                <div className=\"head_box type2 mb20\">\r\n                  <div className=\"head_box_l\">\r\n                    <h2 className=\"title2 fw400 mr12\">\r\n                      Available Employees for Enrollment\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"head_box_c\">\r\n                    <div className=\"form_search\">\r\n                      <SearchBar { ...props.searchProps } placeholder=\"Search for employee\"/>\r\n                      <button>\r\n                          <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"head_box_r al_itc\">\r\n                    <span className=\"btn btn-radius btn-size btn-blue delete\" onClick={this.handleAddClick}>\r\n                      <i>\r\n                        <img src=\"images/icons/User.svg\" alt=\"\" />\r\n                      </i>\r\n                      <span> Add new</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"table_wraps\">\r\n                  <PaginationProvider\r\n                    pagination={paginationFactory(empOptions)}\r\n                  >\r\n                    {({ paginationProps, paginationTableProps }) => (\r\n                      <div className=\"attenPagination\">\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          selectRow={empSelectRow}\r\n                          {...paginationTableProps}\r\n                          classes=\"table-atten\"\r\n                          noDataIndication={ () => <NoDataAvailable /> }\r\n                        />\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </div>\r\n                    )}\r\n                  </PaginationProvider>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default CourseDetails;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Select from 'react-select';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider, {  Search } from \"react-bootstrap-table2-toolkit\";\r\nconst { SearchBar } = Search;\r\n\r\nclass Courses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    function formatter(cell, row) {\r\n      return (\r\n        <div className=\"course_child_it\">\r\n                  <span className=\"btn btn-size3 btn-blue btn-radius export\" name={row.courseName} id={row.courseNumber}>\r\n                      <span name={row.courseName} id={row.courseNumber}>Go to course</span>\r\n                  </span>\r\n              </div>\r\n    \r\n        );\r\n    }\r\n    \r\n   \r\n    function courseFormater(cell, row,rowIndex) {\r\n\r\n      let imgPath = '/images/icons/icon_module_'+row.moduleNo+'.svg'      \r\n      let trId = \"courses_\"+rowIndex\r\n      return (\r\n              <div id={trId} className=\"course_child_it\">\r\n                <div className=\"course_child_img\">\r\n                    <img src={imgPath} alt=\"\"/>\r\n                </div>                  \r\n                <div className=\"course_child_text\">\r\n                    <div className=\"course_child_title\">{row.courseName}</div>\r\n                </div>\r\n              </div>\r\n              )\r\n    }\r\n    this.state = {\r\n      columns:[{\r\n        dataField: \"i_d\",\r\n        text: \"Id\",\r\n        hidden: true\r\n       },\r\n       {\r\n         text: 'COURSE',\r\n         dataField: 'courseName',\r\n         formatter: courseFormater,\r\n         headerStyle: {\r\n          width:'38%'\r\n        }\r\n       },\r\n       {\r\n        text: 'course Number',\r\n        dataField: \"courseNumber\",\r\n        headerStyle: {\r\n          width:'15%'\r\n        },\r\n      },\r\n       {\r\n        text: \"Batch\",\r\n        dataField: \"batchNumber\",\r\n        headerStyle: {\r\n          width:'7%'\r\n        }\r\n       },\r\n       {\r\n        dataField: \"moduleNo\",\r\n        text: \"Module \",\r\n        headerStyle: {\r\n          width:'8%'\r\n        }\r\n       },\r\n      \r\n       {\r\n        dataField: \"courseStartDate\",\r\n        text: \"Start Date\",\r\n        headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n         text: 'Enrolled',\r\n         dataField: 'enrolled',\r\n         headerStyle: {\r\n          width:'10%'\r\n        }\r\n       },\r\n       {\r\n        text: '',\r\n        dataField: \"\",\r\n        formatter: formatter,\r\n        headerStyle: {\r\n          width:'12%'\r\n        },\r\n        events: {\r\n          onClick: (e, column, columnIndex, row, rowIndex) => {\r\n            \r\n            this.props.history.push({\r\n              pathname: '/coursedetail',\r\n              state: {courseId: row.courseNumber, courseName:row.courseName}\r\n            });\r\n          }\r\n        }\r\n       \r\n      }],\r\n      data : []\r\n       \r\n    }\r\n    \r\n  }\r\n  componentDidMount() {\r\n\r\n    global.api.getCourseList(global.companyCode)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    //For Batch\r\n    global.api.getBatch(global.companyCode)\r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n    \r\n  }\r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Batch selected:`, selectedBatch.value);\r\n    var batchNumber = selectedBatch.value;\r\n    global.api.getCourseList(global.companyCode,batchNumber)\r\n                .then(res => res)\r\n                .then(data => this.setState({data}))\r\n                .catch(err =>{\r\n                    alert(err);\r\n                })\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\">\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    );\r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\">\r\n       No Data Available...\r\n      </div>\r\n    );\r\n        \r\n    return (<main className=\"offset\" id=\"content\" style={{'backgroundColor':'#f2f3f8'}}>\r\n            <section className=\"section_box\">\r\n                <div className=\"head_box type2 mb25\">\r\n                    <div className=\"head_box_l\">\r\n                        <h1 className=\"title1 m_b_zero\">Courses</h1>\r\n                        <div className=\"batch-select-box\">\r\n                          <span className=\"title4 \">Batch</span>\r\n                        </div>\r\n                        <div className=\"batch-select-box\">\r\n                          <div style={{'width':'100px'}}>\r\n                            <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n      classNamePrefix=\"batch\"/>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"course_container\">\r\n                {this.state.data.length !== 0? \r\n                    \r\n                        <ToolkitProvider\r\n                        keyField=\"i_d\"\r\n                        data={ this.state.data }\r\n                        columns={ this.state.columns }\r\n                        classes=\"course_table\"\r\n                        search\r\n                        >\r\n                        {props => (\r\n                            <div className=\"head_box type2 mb20\">\r\n                              <div className=\"head_box_c\">\r\n                                <div className=\"form_search\">\r\n                                  <SearchBar { ...props.searchProps } placeholder=\"Search for course \"/>\r\n                                  <button>\r\n                                      <img src=\"images/icons/search-icon.svg\" alt=\"\" />\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                              <BootstrapTable\r\n                                { ...props.baseProps }\r\n                                filter={ filterFactory() }\r\n                                classes=\"course_table\"\r\n                                noDataIndication={ () => <NoDataAvailable /> }\r\n                              />\r\n                              </div>\r\n                        )}\r\n                      </ToolkitProvider>\r\n                    :<NoDataIndication />}\r\n                </div>\r\n            </section>\r\n        </main>)\r\n  }\r\n}\r\nexport default Courses;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Textbox, Textarea } from 'react-inputs-validation';\r\n    import \"../styles/react-inputs-validation.min.css\";\r\n    import Select from 'react-select';\r\n    import $ from 'jquery';\r\nclass Firebase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n          title: \"\",\r\n          message: \"\",\r\n          validate: false\r\n        };\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.state.emailData = [];\r\n    }\r\n    componentDidMount() {\r\n        \r\n        global.api.getEmailList(global.companyCode)\r\n        .then(response => response)\r\n        .then(\r\n        data => {\r\n        this.setState({ emailData: data});\r\n        });\r\n    }\r\n    onEmailSelect = email => {\r\n        this.setState({ email });\r\n        console.log(`Option selected:`, email);\r\n        \r\n        let value = [];\r\n        if(email !== null){\r\n          for (var i = 0; i < email.length; i++) {\r\n              value.push(email[i]);\r\n          }\r\n        }\r\n        this.setState({email: value}); \r\n      };\r\n    toggleValidating(validate) {\r\n        this.setState({ validate });\r\n    }\r\n    validateForm(e) {\r\n        e.preventDefault();\r\n        this.toggleValidating(true);\r\n        const {\r\n          hasEmailError,\r\n          hasTitleError,\r\n          hasMessageError\r\n        } = this.state;\r\n        if (\r\n          !hasEmailError &&\r\n          !hasTitleError &&\r\n          !hasMessageError \r\n        ) {\r\n          \r\n        }\r\n        if(this.state.email.length===0){\r\n            this.setState({hasEmailError:'please one email'})\r\n            alert('please select atleast one email')\r\n            return false;\r\n        }else{\r\n            var data = {\r\n                'email':this.state.email,\r\n            'message':this.state.message,\r\n                'title':this.state.title,\r\n                'include_image':$('#include_img').is(\":checked\"),\r\n            }\r\n            console.log('data',data)\r\n            \r\n        }\r\n      }\r\n\r\n  render(){\r\n    const {\r\n        email,\r\n        title,\r\n        message,\r\n        validate,\r\n      } = this.state;\r\n      \r\n    return (\r\n        \r\n        <main className=\"offset\" id=\"content\">\r\n            <link rel=\"stylesheet\" media=\"screen\" href=\"fonts/flag-icon/css/flag-icon.min.css\" />\r\n          <section className=\"section_box\">\r\n            <h4 className=\"title4 fw500 mb20\">Employees</h4>\r\n              <h1 className=\"title1 mb50\">Push Notification</h1>\r\n              <form onSubmit={this.validateForm}  className=\"form_employee  js-tabs\">\r\n                \r\n                <div className=\"js-tabs-box tab-box\">\r\n                  <div>\r\n                    <div className=\"form_row_box\">\r\n                      <h2 className=\"title2 fw400 form_title mb30\">Send to Single Device</h2>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Select Email</label>\r\n                           <Select  attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }} value={email} isMulti onChange={this.onEmailSelect} \r\n                            onBlur={() => {}}  options={this.state.emailData} className=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            classNamePrefix=\"route \" closeMenuOnSelect={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasEmailError: res, validate: false })\r\n                            } \r\n                            validationOption={{\r\n                                name: \"Email\",\r\n                                check: true, \r\n                                required: true \r\n                                }}/> \r\n                          {/* <Select attributesWrapper={{}} attributesInput={{\r\n                            id: \"email\",\r\n                            name: \"email\"\r\n                            }}\r\n                            isMulti\r\n                            classNameSelect=\"Select has-value is-clearable is-searchable Select--multi\"\r\n                            value={email}\r\n                            disabled={false}\r\n                            validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasMovieError: res, validate: false })\r\n                            } \r\n                            optionList={this.state.emailData} \r\n                            customStyleOptionListContainer={{\r\n                            maxHeight: \"200px\",\r\n                            overflow: \"auto\",\r\n                            fontSize: \"14px\"\r\n                            }} // Optional.[Object].Default: {}.\r\n                            onChange={(res, e) => {\r\n                            this.setState({ country: res.id });\r\n                            console.log(e);\r\n                            }} \r\n                            onBlur={() => {}} \r\n                            \r\n                            validationOption={{\r\n                            name: \"Email\",\r\n                            check: true, \r\n                            required: true \r\n                            }}\r\n                        /> */}\r\n                         \r\n                        </div>\r\n                        {/* <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">LAST Name</label>\r\n                          <input className=\"form_input\" type=\"text\" id=\"lname\" name=\"lname\" ref=\"lname\"/> \r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Title</label>\r\n                          <Textbox classNameInput=\"form_input\" attributesInput={{\r\n                            id: \"Title\",\r\n                            name: \"Title\",\r\n                            type: \"text\",\r\n                            placeholder: \"Enter Title\"\r\n                            }}\r\n                            value={title}  validationOption={{ name: 'Title',\r\n                           check: true, required: true}}\r\n                           validate={validate} \r\n                            validationCallback={res =>\r\n                            this.setState({ hasTitleError: res, validate: false })\r\n                            }\r\n                            onChange={(title, e) => {\r\n                                this.setState({ title });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\">Message</label>\r\n                          <Textarea classNameInput=\"form_textarea emalform_textarea\" \r\n                          attributesWrapper={{}}\r\n                          attributesInput={{\r\n                            id: \"message\",\r\n                            name: \"message\",\r\n                            placeholder: \"Notification Message\",\r\n                             cols: '10',\r\n                             rows: '0',\r\n                          }} value={message} placeholder=\"Notification Message\" validationOption={{name: 'Message', // Optional.[String].Default: \"\". To display in the Error message. i.e Please enter your {name}.\r\n                          check: true, required: true}}\r\n                          validate={validate} \r\n                          validationCallback={res =>\r\n                            this.setState({\r\n                                hasMessageError: res,\r\n                                validate: false\r\n                            })\r\n                            }\r\n                            onChange={(message, e) => {\r\n                                this.setState({ message });\r\n                              }} // Required.[Func].Default: () => {}. Will return the value.\r\n                              onBlur={e => {\r\n                                //console.log(e);\r\n                              }}/>\r\n                          \r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"form_row_col\">\r\n                       \r\n                        <div className=\"form_row mb65\">\r\n                          <label className=\"form_label\" style={{'textTransform':'none'}}>Include Image?</label>\r\n                          <span className=\"form_label\"><input type=\"checkbox\"  id= \"include_img\"  name=\"include_img\" onChange={( e) => { }}/></span>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <div className=\"\">\r\n                  \r\n                  <button className=\"btn btn-blue btn-radius btn-icon-center btn-size\" onClick={this.validateForm}>\r\n                    \r\n                    <span>Send</span>\r\n                  </button>\r\n                  <input type=\"submit\" style={{ display: \"none\" }} />\r\n                </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n                \r\n              </form>\r\n            </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default Firebase;\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyCompletion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeData = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({ routeData: []});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        this.setState({ routeData: data});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onRouteSelect = selectedRoute => {\r\n    this.setState({ selectedRoute });\r\n    console.log(`Option selected:`, selectedRoute);\r\n    this.setState({selectedRouteText: []});\r\n    let selRoute = [];\r\n    let value = [];\r\n    if(selectedRoute !== null){\r\n      for (var i = 0; i < selectedRoute.length; i++) {\r\n          value.push(selectedRoute[i]);\r\n          selRoute.push(selectedRoute[i].label);\r\n      }\r\n    }\r\n    this.setState({selectedRouteText: selRoute});\r\n    this.setState({selectedRoute: value}); \r\n  };\r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleBtnClick = () => {\r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#reports').show();\r\n    $('#table_wraps').show();\r\n    $('#campain-week-comple').hide();\r\n    this.setState({data: []});\r\n    this.forceUpdate();\r\n    \r\n    let colNames = [...this.state.baseColNames];\r\n    \r\n    this.setState({columns: colNames});\r\n    \r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    \r\n    let selectedRoute = this.state.selectedRoute;\r\n    \r\n\r\n    global.api.getCompletionReports(selectedCompany,selectedCourse,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-comple').show();\r\n        const items = [];\r\n        for (const row of result) {\r\n          let item = row;\r\n          items.push(item);\r\n        }\r\n        this.setState({data: items});\r\n      }\r\n    )\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      var selectedRoutes = this.state.selectedRoute;\r\n      let routes = [];\r\n      for (var ii = 0; ii < selectedRoutes.length; ii++) {\r\n        routes.push(selectedRoutes[ii].value);\r\n      }  \r\n      \r\n      //to = ['reachatbhakti@gmail.com']\r\n      //var params={\"emails\":emails}\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"from\":'',\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"routeNumber\":routes,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      let api = ''\r\n      if(type === 'push-notification'){\r\n        api = global.api.sendPush(params)\r\n      }else{\r\n        api = global.api.sendEmail(params)\r\n      }\r\n        api\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          // console.log(json.data)\r\n          if(json.data.message===\"Email Sent Successfully.\" || json.data.message===\"Push Notification sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Completion\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"push-notification\" style={{marginTop:'20px'}}><span id=\"push-notification\">Push Notification</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              {/* <div className=\"\" style={{ paddingRight: \"20px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px'}}>\r\n                                <ReactMultiSelectCheckboxes classNamePrefix=\"route \" options={this.state.routeData}  /> \r\n                                  <Select  value={this.state.selectedRoute} isMulti onChange={this.onRouteSelect} options={this.state.routeData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"route \" closeMenuOnSelect={false}/>\r\n                                </div>\r\n                              </div> \r\n                              <div className=\"head_box_r\">\r\n                                <h4 className=\"title4 mb10 fw500\">&nbsp;</h4>\r\n                                <span\r\n                                  className=\"btn btn-radius btn-size btn-blue  export\"\r\n                                  onClick={this.handleBtnClick}\r\n                                >\r\n                                  <span>Submit</span>\r\n                                </span>\r\n                              </div>*/}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-comple\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyCompletion;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.routeList = [];\r\n    this.state.selectedRoute = [];\r\n    this.state.selectedRouteText = [];\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.mailType = [{  \r\n      label: \"Route Mail\",  \r\n      value: \"route_email\"  \r\n    },\r\n    { \r\n      label: \"Weekly Send Mail\",  \r\n      value: \"weekly_email\" \r\n    },\r\n    { \r\n      label: \"Weekly Push Notification\",  \r\n      value: \"weekly_push\"  \r\n    }]\t\r\n    this.state.langData = [{  \t\r\n      label: \"Español\", \t\r\n      value: \"ES\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Portuguese\",  \t\r\n      value: \"PT\" \t\r\n    }]  \t\r\n    this.state.mailModeData = [{  \t\r\n      label: \"Test Email\",  \t\r\n      value: \"Test\" \t\r\n    },  \t\r\n    { \t\r\n      label: \"Real Email\",  \t\r\n      value: \"Real\" \t\r\n    }]  \t\r\n    \t\r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };  \t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.selectedMailType = { label: 'Route Mail', value: 'route_email' };\r\n    this.state.selectedRouteName = '';\r\n    this.state.courseStartDate = '';\r\n    this.state.routeStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({selectedRouteText: []});\r\n      this.setState({selectedRoute: []});\r\n      this.setState({data: []});\r\n      this.setState({ selectedRouteName: ''});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    const selectedCourseId = selectedCourse.value;\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    global.api.getRouteList(selectedCourseId)\r\n    .then(response => response)\r\n    .then(\r\n      data => {\r\n        let routeListData = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          routeListData.push({\"value\":data[i]['id'],\"label\":data[i]['label'],\"routeNo\":data[i]['value']});\r\n        }\r\n        this.setState({ routeList: routeListData});\r\n    });\r\n    this.setState({ selectedRoute: []})\r\n    this.setState({selectedRouteText: []});\t\r\n    this.setState({selectedRoute: []});\r\n    this.setState({data: []});\r\n    this.setState({ selectedRouteName:[] });\r\n    \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#task-reports').show();\r\n    $('#task-table_wraps').show();\r\n    $('#campain-week-task').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    this.setState({pieChartDisplay:false})\r\n    var selectedRoute = \"\";\r\n    this.setState({ routeStartDate: ''});\r\n\r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-week-task').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  onLangSelect = selectedLang => {  \t\r\n    this.setState({ selectedLang });  \t\r\n    console.log(`Option selected:`, selectedLang);  \t\r\n    const selValue = selectedLang.value;  \t\r\n    const selLabel = selectedLang.label;  \t\r\n    const selLangOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedLang: selLangOption});   \t\r\n  } \t\r\n  onModeSelect = selectedMode => {  \t\r\n    this.setState({ selectedMode });  \t\r\n    console.log(`Option selected:`, selectedMode);  \t\r\n    const selValue = selectedMode.value;  \t\r\n    const selLabel = selectedMode.label;  \t\r\n    const selModeOption = { label: selLabel, value: selValue }; \t\r\n    this.setState({selectedMode: selModeOption});   \t\r\n  }\r\n  onRouteNameChange = selectedRouteName => {\r\n    const moment = require('moment-timezone');\r\n    this.setState({ selectedRouteName });\r\n    let routeNo = selectedRouteName.routeNo;\r\n    let routeStartDate = this.state.courseStartDate;\r\n    routeStartDate = routeStartDate.replace(\"Course StartDate : \", \"\");\r\n    routeNo = (routeNo - 1)*7;\r\n    let routeDate =  moment(routeStartDate,\"DD-MM-YYYY\");\r\n    routeDate = moment(routeDate).add(routeNo, 'day').format('DD-MM-YYYY'); \r\n    this.setState({ routeStartDate: 'Route StartDate : ' + routeDate});\r\n    //console.log(`Option selected:`,routeDate);\r\n  };\r\n  onMailTypeSelect = selectedMailType => {  \r\n    this.setState({ selectedMailType });  \r\n    console.log(`selectedMailType selected:`, selectedMailType);  \r\n    const selValue = selectedMailType.value;  \r\n    const selLabel = selectedMailType.label;  \r\n    const selMailTypeOption = { label: selLabel, value: selValue }; \r\n    this.setState({selectedMailType: selMailTypeOption});   \r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    const type = e.target.id\r\n    var notification=this.state.notification\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{\r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n      const routes = this.state.selectedRouteName.value;\r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n      var params = {\r\n        \"to\":emails,\r\n        \"routeNumber\":routes,\r\n        \"mailMode\":this.state.selectedMode.value,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"type\":type\r\n      }\r\n      global.api.sendWeeklyEmail(params)\r\n        .then(res => res)\r\n        .then((json)=>{\r\n          if(json.data.message===type+\" Sent Successfully.\"){\r\n            notification.type='success'\r\n            notification.title='Success';\r\n            notification.message=json.data.message\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n          }else{\r\n            notification.type='danger'\r\n            notification.title='Error';\r\n            notification.message=json.data.message\r\n                  store.addNotification({\r\n                    ...notification\r\n                  });\r\n          }\r\n          this.setState({loading:false});\r\n        })\r\n        .catch(err =>{\r\n            alert(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return (<div><LoadingOverlay \r\n        active={loading}\r\n        spinner\r\n        text='Processing your content...'\r\n        >\r\n      </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Weekly Tasks\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        \r\n                        <div className=\"campaign-container-right-div-2\">\r\n                        <div className=\"head_box mb15\">\t\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\t\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/> \t\r\n                            </span> \t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}> \t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \t\r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/> \t\r\n                            </span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_email\" style={{marginTop:'20px'}}><span id=\"weekly_email\">SendEmail</span></span>\t\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"weekly_push\" style={{marginTop:'20px'}}><span id=\"weekly_push\">Push Notification</span></span>\t\r\n                          </div>\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\"}}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">RouteNos</h4>\r\n                                <div style={{'width':'200px', 'marginBottom':'-20px'}}>\r\n                                  <Select id=\"routeList\" value={this.state.selectedRouteName}  onChange={this.onRouteNameChange} options={this.state.routeList} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"Route List\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.routeStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                      </div>    \r\n                    </div>\r\n                <div id=\"task-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"task-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-week-task\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyTask;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport Loader from \"react-loader-spinner\";\r\nimport $ from 'jquery';\r\nimport Select from 'react-select';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n \r\nimport { store } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nclass CampaignsWeeklyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns:[],\r\n      data:[],\r\n      loading:false\r\n    };\r\n    this.state.notification = {\r\n      title: '',\r\n      message: '',\r\n      type: 'default',                // 'default', 'success', 'info', 'warning'\r\n      container: 'top-right',                // where to position the notifications\r\n      animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\r\n      animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    };\r\n    this.state.selected = [];\r\n    this.state.userData = [];\r\n    this.state.companyData = [];\r\n    this.state.selectedCompany = global.companyCode;\r\n    this.state.selectedCompanyName = global.companyName;\r\n    this.state.batchData = [];\r\n    this.state.selectedBatch = '';\r\n    this.state.courseData = [];\r\n    this.state.selectedCourse = '';\r\n    this.state.noDataIndication = 'none';\r\n    this.state.noDataAvailable = 'none';\r\n    this.state.baseColNames = [{\r\n      dataField: \"i_d\",\r\n      text: \"Id\",\r\n      hidden: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"Employee\",\r\n      classes:'reports-text',\r\n      sort: true,\r\n       headerStyle: {\r\n        width:'250px',\r\n        textTransform: 'none',\r\n        cursor:'pointer'\r\n      }\r\n    },\r\n    {\r\n      text: 'Name',\r\n      dataField: 'Name',\r\n      classes:'reports-text',\r\n      headerStyle: {\r\n        width:'200px',\r\n        textTransform: 'none'\r\n      }\r\n    } ,\r\n    {\r\n      text: 'MobileOS',\r\n      dataField: 'mobileOS',\r\n      headerStyle: {\r\n        width:'150px',\r\n        textTransform: 'none'\r\n      }\r\n    }]\r\n    this.state.langData = [{\t\r\n      label: \"Español\",\t\r\n      value: \"ES\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Portuguese\",\t\r\n      value: \"PT\"\t\r\n    }]\t\r\n    this.state.mailModeData = [{\t\r\n      label: \"Test Email\",\t\r\n      value: \"Test\"\t\r\n    },\t\r\n    {\t\r\n      label: \"Real Email\",\t\r\n      value: \"Real\"\t\r\n    }]\t\r\n    \r\n    this.state.selectedLang = { label: 'Español', value: 'ES' };\t\r\n    this.state.selectedMode = { label: 'Test Email', value: 'Test' };\r\n    this.state.courseStartDate = '';\r\n   }\r\n   getDate() {\r\n\r\n    var tempDate = new Date();\r\n    var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() ;\r\n    \r\n    return date;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const companyCode = this.state.selectedCompany;\r\n   \r\n    //For Batch\r\n    global.api.getBatch(companyCode)\r\n    \r\n    .then(\r\n      data => {\r\n        data.sort(function(a, b) {\r\n          return a.value - b.value;\r\n        });\r\n        this.setState({ batchData: data });\r\n    });\r\n  } \r\n  onBatchChange = selectedBatch => {\r\n    this.setState({ selectedBatch });\r\n    console.log(`Option selected:`, selectedBatch.value);\r\n    var companyCode = this.state.selectedCompany;\r\n      var batchNo = selectedBatch.value;\r\n      global.api.getCourseBatch(companyCode,batchNo)\r\n      .then(\r\n        data => {\r\n        this.setState({ courseData: data });\r\n      });\r\n      this.setState({ selectedCourse: ''});\r\n      this.setState({data: []});\r\n      this.setState({ courseStartDate: ''});\r\n  };\r\n  onCourseChange = selectedCourse => {\r\n    this.setState({ selectedCourse });\r\n    console.log(`Option selected:`, selectedCourse);\r\n    this.setState({courseStartDate:'Course StartDate : '+selectedCourse.courseStartDate});\r\n    this.setState({data: []});\r\n        \r\n    this.setState({noDataIndication:'block'});\r\n    this.setState({noDataAvailable:'none'});\r\n    $('#welcome-reports').show();\r\n    $('#welcome-table_wraps').show();\r\n    $('#campain-welcome-mail').hide();\r\n    var colNames = this.state.baseColNames;\r\n    this.setState({columns: colNames});\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var courseId =  selectedCourse.value;\r\n    var selectedRoute = \"\";\r\n    \r\n    global.api.getCompletionReports(selectedCompany,courseId,selectedBatch,selectedRoute)\r\n    .then(res => res)\r\n    .then(\r\n      result => {\r\n        console.log('spinner hide')\r\n        this.setState({noDataIndication:'none'});\r\n        this.setState({noDataAvailable:'block'});\r\n        $('#campain-welcome-mail').show();\r\n        this.setState({data: result});\r\n      }\r\n    )\r\n  };\r\n  \r\n  onLangSelect = selectedLang => {\t\r\n    this.setState({ selectedLang });\t\r\n    console.log(`Option selected:`, selectedLang);\t\r\n    const selValue = selectedLang.value;\t\r\n    const selLabel = selectedLang.label;\t\r\n    const selLangOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedLang: selLangOption}); \t\r\n  }\t\r\n  onModeSelect = selectedMode => {\t\r\n    this.setState({ selectedMode });\t\r\n    console.log(`Option selected:`, selectedMode);\t\r\n    const selValue = selectedMode.value;\t\r\n    const selLabel = selectedMode.label;\t\r\n    const selModeOption = { label: selLabel, value: selValue };\t\r\n    this.setState({selectedMode: selModeOption}); \t\r\n  }\r\n  handleOnSelect = (row, isSelect, rowIndex, e) => {\r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    } \r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TBODY'){\r\n      \r\n      elementName = e.target.parentNode\r\n    }\r\n\r\n    var columnCount = $(elementName).get(0).cells;\r\n    if(columnCount !== undefined){\r\n      if (isSelect) {\r\n        for (var i=0; i < columnCount.length; i++) {\r\n            $(elementName.cells[i]).get(0).className='reports-text reports-active';\r\n        }\r\n        this.setState(() => ({\r\n          selected: [...this.state.selected, row]\r\n        }));\r\n      } else {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n            $(elementName.cells[j]).get(0).className='reports-text';\r\n        }\r\n        this.setState(() => ({\r\n          selected: this.state.selected.filter(x => x !== row)\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  handleOnSelectAll = (isSelect, rows, e) => {\r\n    \r\n    var elementName = ''\r\n    if($(e.target.parentNode.parentNode).get(0).tagName === 'TR'){\r\n      elementName = e.target.parentNode.parentNode\r\n    }else{\r\n      elementName = e.target.parentNode\r\n    }\r\n    var columnCount = $(elementName).get(0).cells;\r\n    \r\n    var rowCount = $(elementName.parentNode.parentNode.childNodes[1]).get(0).childNodes;\r\n    //const ids = rows.map(r );\r\n    if (isSelect) {\r\n      for (var i=0; i < rowCount.length; i++) {\r\n        for (var j=0; j < columnCount.length; j++) {\r\n          \r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[i].cells[j]).get(0).className='reports-text reports-active';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: rows\r\n      }));\r\n    } else {\r\n      for (var ii=0; ii < rowCount.length; ii++) {\r\n        for (var jj=0; jj < columnCount.length; jj++) {\r\n          $(elementName.parentNode.parentNode.childNodes[1].childNodes[ii].cells[jj]).get(0).className='reports-text';\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        selected: []\r\n      }));\r\n    }\r\n    \r\n  }\r\n  handleSendEmail = (e) => {\r\n    //const type = e.target.id\r\n    var notification=this.state.notification\r\n    \r\n    //console.log(this.state.selected)\r\n    if(this.state.selected.length === 0){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Employee'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      this.setState({loading:true});\r\n      var selectedEmails = this.state.selected;\r\n      let emails = [];\r\n      for (var i = 0; i < selectedEmails.length; i++) {\r\n        emails.push(selectedEmails[i].userId);\r\n      } \r\n            \r\n      const selectedCompany = this.state.selectedCompany;\r\n      const selectedBatch = this.state.selectedBatch.value;\r\n      var selectedCourse =  this.state.selectedCourse.value;\r\n     \r\n      var params = {\r\n        \"to\":emails,\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    }\r\n    \r\n  }\r\n  sendEmailAll = (e) => {\r\n    var notification=this.state.notification\r\n    const selectedCompany = this.state.selectedCompany;\r\n    const selectedBatch = this.state.selectedBatch.value;\r\n    var selectedCourse =  this.state.selectedCourse.value;\r\n    if(selectedCourse === undefined){\r\n      notification.type='danger'\r\n      notification.title='Error';\r\n      notification.message='Please select One Course'\r\n            store.addNotification({\r\n              ...notification\r\n            });\r\n      return false;\r\n    }else{ \r\n      \r\n      this.setState({loading:true});\r\n      var params = {\r\n        \"companyCode\":selectedCompany,\r\n        \"courseNumber\":selectedCourse,\r\n        \"batchNumber\":selectedBatch,\r\n        \"lang\":this.state.selectedLang.value,\r\n        \"mailMode\":this.state.selectedMode.value\r\n      }\r\n      \r\n      global.api.sendEmailAll(params)\r\n      .then(res => res)\r\n      .then((json)=>{\r\n        // console.log(json.data)\r\n        if(json.data.message===\"Email Sent Successfully.\"){\r\n          notification.type='success'\r\n          notification.title='Success';\r\n          notification.message=json.data.message\r\n          store.addNotification({\r\n            ...notification\r\n          });\r\n        }else{\r\n          notification.type='danger'\r\n          notification.title='Error';\r\n          notification.message=json.data.message\r\n                store.addNotification({\r\n                  ...notification\r\n                });\r\n        }\r\n        this.setState({loading:false});\r\n      })\r\n      .catch(err =>{\r\n          alert(err);\r\n      })\r\n    } \r\n  }\r\n\r\n  render(){\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: false,\r\n      onSelect: this.handleOnSelect,\r\n      onSelectAll: this.handleOnSelectAll,\r\n      headerColumnStyle: {\r\n        width:'1px',\r\n        paddingLeft:'5px'\r\n      }\r\n      \r\n    };\r\n    const options = {\r\n      custom: true,\r\n      totalSize: this.state.data.length,\r\n      sizePerPage: 100,\r\n    };\r\n    const NoDataIndication = () => (\r\n      <div className=\"spinner\" id=\"spinner\" style={{'display':this.state.noDataIndication}}>\r\n        <Loader type=\"Grid\" color=\"#4441E2\" height={100} width={100} />\r\n                Loading....\r\n      </div>\r\n    ); \r\n    const NoDataAvailable = () => (\r\n      <div className=\"spinner nodata-available\" style={{'display':this.state.noDataAvailable}}>\r\n       No Data Available...\r\n      </div>\r\n    );\r\n    const {loading} = this.state\r\n      return ( <div><LoadingOverlay \r\n      active={loading}\r\n      spinner\r\n      text='Processing your content...'\r\n      >\r\n    </LoadingOverlay>\r\n                    <div className=\"campaign-container\">\r\n                      <div className=\"campaign-container-left-div\">\r\n                        <div className=\"campaign-container-left-header\">\r\n                          Welcome Email\r\n                        </div>\r\n                        {/* <div className=\"campaign-container-left-text\">\r\n                          Send email and announcement every Friday until end of course\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"campaign-container-right-div\">\r\n                        \r\n                        <div className=\"campaign-container-right-div-1\">\r\n                          <h4 className=\"title4 mb15 fw500\">Channels</h4>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box mb15\">\r\n                            <span style={{'width':'157px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Language</span>\r\n                              <Select id=\"lang\" value = {this.state.selectedLang} options={this.state.langData} onChange={this.onLangSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"lang\"/>\t\r\n                            </span>\t\r\n                            <span style={{'width':'150px', paddingRight: \"20px\", paddingTop: \"5px\"}}>\t\r\n                            <span style={{fontWeight:'bold'}}>Mail Type</span>  \r\n                              <Select id=\"mailMode\" value={this.state.selectedMode} options={this.state.mailModeData} onChange={this.onModeSelect} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"mail\"/>\t\r\n                            </span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.handleSendEmail } id=\"send-email\" style={{marginTop:'20px'}}><span id=\"send-email\">SendEmail</span></span>\r\n                            <span className=\"btn btn-radius btn-size btn-blue btn-icon-center export mr15\" onClick={ this.sendEmailAll } id=\"send-email-all\" style={{marginTop:'20px'}}><span id=\"send-email-all\">SendEmail To All</span></span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"campaign-container-right-div-2\">\r\n                          <div className=\"head_box type2 mb20\" style={{ width: \"100%\" }}>\r\n                            <div className=\"head_box_l\">\r\n                              <div style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Batch</h4>\r\n                                <div style={{'width':'100px'}}>\r\n                                  <Select id=\"batch\" value={this.state.selectedBatch}  onChange={this.onBatchChange} options={this.state.batchData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"batch\"/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"\" style={{ paddingRight: \"20px\", height: \"170px\" }}>\r\n                                <h4 className=\"title4 mb15 fw500\">Course</h4>\r\n                                <div style={{'width':'300px', 'marginBottom':'-20px'}}>\r\n                                  <Select ref=\"course\" name=\"course\" value={this.state.selectedCourse}  onChange={this.onCourseChange} options={this.state.courseData} className=\"Select has-value is-clearable is-searchable Select--multi\" classNamePrefix=\"course\"/>\r\n                                  <span style={{color: \"green\",fontWeight:'bold'}}>{this.state.courseStartDate}</span>\r\n                                </div>\r\n                              </div> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>    \r\n                    </div>\r\n                <div id=\"welcome-reports\" className=\"campaign-weekly-completion\" style={{'display':'none'}} >\r\n                  <ToolkitProvider\r\n                  keyField=\"i_d\"\r\n                  data={this.state.data}\r\n                  columns={this.state.columns}\r\n                  className=\"table type2\"\r\n                >\r\n                {props => (\r\n                      <div  id=\"welcome-table_wraps\" style={{'display':'none'}} >\r\n                        <div className=\"\">\r\n                          {this.state.data.length !== 0? \r\n                          <PaginationProvider pagination={paginationFactory(options)}>\r\n                            {({ paginationProps, paginationTableProps }) => (\r\n                              <div className=\"campain-week-comple\" id=\"campain-welcome-mail\">\r\n                                <BootstrapTable\r\n                                selectRow={ selectRow } \r\n                                bootstrap4\r\n                                  {...props.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  classes=\"reports_table\"\r\n                                  noDataIndication={ () => <NoDataAvailable /> }\r\n                                />\r\n                                <PaginationListStandalone {...paginationProps} />\r\n                              </div>\r\n                            )}\r\n                          </PaginationProvider>\r\n                          :  <NoDataAvailable />}\r\n                          <NoDataIndication />\r\n                        </div>\r\n                      </div>\r\n                )}\r\n              </ToolkitProvider>\r\n              \r\n              </div>\r\n                \r\n              </div>\r\n    )\r\n  }\r\n}\r\nexport default CampaignsWeeklyEmail;\r\n\r\n\r\n","import decode from 'jwt-decode';\r\nexport default class AuthService {\r\n    // Initializing important variables\r\n    constructor(domain) {\r\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\r\n        this.fetch = this.fetch.bind(this) // React binding stuff\r\n        this.login = this.login.bind(this)\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n    forgotpass(email) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/password_reset.php`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res => {\r\n            return Promise.resolve(res);\r\n            /* if(res.token){\r\n                this.setToken(res.token) // Setting the token in localStorage\r\n                this.setProfile(res.firstName, res.email)\r\n                return Promise.resolve(res);\r\n            }\r\n            if(res.message){\r\n                return Promise.reject(res.message);\r\n            } */\r\n        })\r\n    }\r\n    login(email, password) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/api-login.php`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => {\r\n            if(res.token){\r\n                if(res.accesslevel!== \"0\"){\r\n                    this.setToken(res.token) // Setting the token in localStorage\r\n                    this.setProfile(res)\r\n                    return Promise.resolve(res);\r\n                }else{\r\n                    const result = {firstName: '', email: '', company_code:'', company_name: '',  access_level:'', accepted_gdpr:''}\r\n                    this.setProfile(result)\r\n                    return {message: \"Disabled Access.\"};\r\n                }\r\n            }\r\n            if(res.message){\r\n                return Promise.reject(res.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken() // GEtting token from localstorage\r\n        return !!token && !this.isTokenExpired(token) // handwaiving here\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        console.log('idToken',idToken)\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n    setProfile(data) {//res.firstName, res.email\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('firstName', data.firstName)\r\n        localStorage.setItem('email', data.email)\r\n        localStorage.setItem('company_code', data.CompanyCode)\r\n        localStorage.setItem('company_name', data.companyName)\r\n        localStorage.setItem('access_level', data.accesslevel)\r\n        localStorage.setItem('accepted_gdpr', data.acceptedGDPR)\r\n    }\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    setCompanyName(companyName) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('company_name', companyName)\r\n    }\r\n    \r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        //return decode(this.getToken());\r\n        return localStorage.getItem('email')\r\n    }\r\n\r\n\r\n    fetch(url, options) {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter><App />\n    </BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n","import axios from \"axios\"\nexport default class ApiService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'https://api1.taplingua.com/v1' // API server domain\n        //this.domain = domain || 'http://local.ybrantcompass.com/taplingua-prod/taplingua-api' // API server domain\n        this.fetch = this.fetch.bind(this) // React binding stuff\n        this.addEmpCourse = this.addEmpCourse.bind(this)\n    }\n    //update Single Employee\t\n    updateEmployee(params) {\t\n        return axios.post(`${this.domain}/saveEmployeeFields.php`, \t\n        JSON.stringify(params)\t\n        ).then(res => {\t\n            return Promise.resolve(res);\t\n        })\t\n    }\n    //get employee details\n    getEmployeeDetails(userId) {\n        var params=\"userId=\"+userId;\n        return axios.get(`${this.domain}/employee_api.php?`+params).then(res => {\n            /* var emailList = []\n            for(var i = 0; i < res.data.length; i++){\n                if(res.data[i]['fcmToken']!==\"\"){\n                    emailList.push({\"value\":res.data[i]['fcmToken'],\"label\":res.data[i]['userId']})\n                }\n            } */\n            return Promise.resolve(res.data);\n        })\n    }\n    //Add Single Employee\t\n    addEmployee(params) {\t\n        return axios.post(`${this.domain}/saveEmployee.php`, \t\n        JSON.stringify(params)\t\n        ).then(res => {\t\n            return Promise.resolve(res);\t\n        })\t\n    }\n    //All email sent list\n    sendEmailAll(params) {\n        return axios.post(`${this.domain}/send-welcome-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //weekly email sent list\n    sendWeeklyEmail(params) {\n        return axios.post(`${this.domain}/send-weekly-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //route email sent list\n    sendRouteEmail(params) {\n        return axios.post(`${this.domain}/send-route-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //firebase email list\n    sendPush(params) {\n        return axios.post(`${this.domain}/send-push-notification.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //email sent list\n    sendEmail(params) {\n        return axios.post(`${this.domain}/send-email.php`, \n        JSON.stringify({params})\n        ).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    //firebase email list\n    getEmailList(companyCode) {\n        var params=\"CompanyCode=\"+companyCode;\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\n            var emailList = []\n            for(var i = 0; i < res.data.length; i++){\n                if(res.data[i]['fcmToken']!==\"\"){\n                    emailList.push({\"value\":res.data[i]['fcmToken'],\"label\":res.data[i]['userId']})\n                }\n            }\n            return Promise.resolve(emailList);\n        })\n    }\n    \n    //get Completion Reports Data\n    getCompletionReports(companyCode,moduleNo,batchNumber,routeNumber){\n        return axios.get(`${this.domain}/completion-reports-api.php?companyCode=`+companyCode+`&courseNumber=`+moduleNo+`&batchNumber=`+batchNumber+`&routeNumber=`+routeNumber).then(res => {\n           return Promise.resolve(res.data);\n        })\n    }\n    //get Route Data\n    getRouteList(courseNo) {\n        return axios.get(`${this.domain}/routeList.php?courseNo=`+courseNo).then(res => {\n            let routeList = []\n            for(var i = 0; i < res.data.length; i++){\n                routeList.push({\"value\":res.data[i]['routeNo'],\"label\":res.data[i]['description'],\"id\":res.data[i]['id']})\n            }\n            return Promise.resolve(routeList);\n        })\n    }\n    //get course batch Data\n    getCourseBatch(companyCode,batchNo) {\n        return axios.get(`${this.domain}/courseListBatch.php?companyCode=`+companyCode+`&batchNumber=`+batchNo).then(res => {\n            var courseList = []\n            for(var i = 0; i < res.data.length; i++){\n                courseList.push({\"value\":res.data[i]['courseNumber'],\"label\":res.data[i]['courseName'],\"courseStartDate\":res.data[i]['courseStartDate']})\n            }\n            return Promise.resolve(courseList);\n        })\n    }\n    //get batch Data\n    getBatch(companyCode) {\n        return axios.get(`${this.domain}/batch.php?companyCode=`+companyCode).then(res => {\n            //console.log(res.data)\n            var batchList = []\n            for(var i = 0; i < res.data.length; i++){\n                batchList.push({\"value\":res.data[i]['batchNumber'],\"label\":res.data[i]['batchNumber']})\n            }\n            return Promise.resolve(batchList);\n        })\n    }\n    //get company list\n    getCompanyList(companyCode = null) {\n        let url = `${this.domain}/company.php`;\n        if(companyCode){\n            url = `${this.domain}/company.php?companyCode=${companyCode}`\n        }\n        return axios.get(`${url}`).then(res => {\n            var companies= []\n            for(var i = 0; i < res.data.length;i++){\n                if(res.data[i]['Id'] !== \"\" && res.data[i]['Id'] !== \"0\"){\n                    var optName = res.data[i]['Id']+\" - \"+res.data[i].Name\n                    companies.push({'value':res.data[i]['Id'],'label':optName})\n                }\n            }\n            return Promise.resolve(companies);\n        })\n    }\n    //get employee list\n    getEmployeeList(companyCode,batchNumber,gdprCheck=\"\") {\n        var params=\"CompanyCode=\"+companyCode;\n        if(batchNumber !== \"0\"){\n            params = params+ \"&batchno=\"+batchNumber\n        }\t\n        if(gdprCheck !== \"\"){\t\n            params = params+ \"&acceptedGDPR=\"+gdprCheck\n        }\n        return axios.get(`${this.domain}/getEmployee.php?`+params).then(res => {\n            return Promise.resolve(res.data);\n        })\n    }\n    //get course list\n    getCourseList(companyCode, batchNumber = 0) {\n        let params=\"companyCode=\"+companyCode;\n        if(batchNumber !== 0){\n            params = params+ \"&batchNumber=\"+batchNumber\n        }\n        return axios.get(`${this.domain}/courseListBatch.php?`+params).then(res => {\n            let courseList = []\n            let j = 0;\n            for(var i = 0; i < res.data.length;i++){\n                j = i + 1\n               let data = res.data[i]\n               data['i_d'] = j;\n               courseList.push(data)\n            }\n            return Promise.resolve(courseList);\n        })\n    }\n    //get course list\n    getCourseDetails(companyCode,courseNumber) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/getEmployeeCourseAll.php?companyCode=`+companyCode+`&courseNumber=`+courseNumber, {\n            method: 'GET',\n            \n        }).then(res => {\n            var registeredUsers= []\n            for(var i = 0; i < res.registered.length;i++){\n                registeredUsers.push(res.registered[i]['userId'])\n            }\n            var availableUsers= []\n            for(var ii = 0; ii < res.availableToRegister.length;ii++){\n                if(registeredUsers.indexOf(res.availableToRegister[ii]['userId']) === -1){\n                    availableUsers.push(res.availableToRegister[ii])\n                }\n            }\n            res.availableToRegister = availableUsers;\n            return Promise.resolve(res);\n        })\n    }\n    addEmpCourse(userId, companyCode, courseNumber) {\n        return axios.post(`${this.domain}/add-employee-course.php`, JSON.stringify({\n            userId, companyCode, courseNumber\n        })).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    deleteEmpCourse(userId, companyCode, courseNumber) {\n        return axios.post(`${this.domain}/remove-employee-course.php`, JSON.stringify({\n            userId, companyCode, courseNumber\n        })).then(res => {\n            return Promise.resolve(res);\n        })\n    }\n    setCompanyCode(companyCode) {\n        // Saves user token to localStorage\n        localStorage.setItem('company_code', companyCode)\n    }\n    getCompanyCode() {\n        return localStorage.getItem('company_code')\n    }\n    setCompanyName(companyName) {\n        // Saves user token to localStorage\n        localStorage.setItem('company_name', companyName)\n    }\n    getCompanyName() {\n        return localStorage.getItem('company_name')\n    }\n    setAccessLevel(access_level) {\n        // Saves user token to localStorage\n        localStorage.setItem('access_level', access_level)\n    }\n    getAccessLevel() {\n        return localStorage.getItem('access_level')\n    }\n    //get Overview for company\t\n    getOverView(companyCode) {\t\n        return this.fetch(`${this.domain}/overview.php?companyCode=`+companyCode, {\t\n            method: 'GET',\t\n            \t\n        }).then(res => {\t\n            return Promise.resolve(res);\t\n        })\t\n    }\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        /* if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        } */\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}"],"sourceRoot":""}